{
	"info": {
		"_postman_id": "ddc62538-f2ff-4a97-94be-375fa3e0724a",
		"name": "XIQ API New Framework",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login Basic authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include access token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/login",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authorization",
			"item": [
				{
					"name": "POST ​/auth​/apitoken Generate new API token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myDate = new Date(\"July 2, 2021 02:30:00\"); // Your timezone!",
									"pm.environment.set(\"myEpoch\", myDate.getTime()/1000.0);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include access token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Token for read account only\",\n  \"expire_time\": {{myEpoch}},\n  \"permissions\": [\n    \"account:r\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/apitoken",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"apitoken"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/apitoken/info Get current API token details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include role\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"role\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/apitoken/info",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"apitoken",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/permissions Get permissions for current login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/permissions",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/permissions/:check Check permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include permissions\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"permissions\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"uri\": \"https://api.extremecloudiq.com/auth/apitoken/info\",\n  \"method\": \"get\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/permissions/{{check}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"permissions",
								"{{check}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "Account Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"account_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/account/info",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account VIQ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include VIQ info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"entitlement_key\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "User Profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/user/profile",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user",
								"profile"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HIQ",
			"item": [
				{
					"name": "Get HIQ context",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"reading_org_ids\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set HIQ Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reading_org_ids\": [\n   1\n  ],\n  \"creating_org_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get organization for creating new data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/creating",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"creating"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Organization for creating new data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "1"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/creating",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"creating"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get organizations for reading data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/reading",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"reading"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set organizations for reading data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  123\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/reading",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"reading"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all organizations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include organisation info \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string2\",\n  \"color\": \"string2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an  existing organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful Delete request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations/{{org_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations",
								"{{org_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "rename an  existing organization Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[test]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations/{{org_id}/:rename",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations",
								"{{org_id}",
								":rename"
							],
							"variable": [
								{
									"key": "rename",
									"value": ":rename"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HIQ Status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include HIQ info \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"enabled\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/status",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Device",
			"item": [
				{
					"name": "List Devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hostname\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices?page=1&limit=50",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "50"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send CLI to device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"CLI_RESPONSE_CODE_SUCCEED\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      {{id}}\n    ]\n  },\n  \"clis\": [\n    \"string\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:cli",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":cli"
							],
							"variable": [
								{
									"key": "cli",
									"value": ":cli"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:delete",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":delete"
							],
							"variable": [
								{
									"key": "delete",
									"value": ":delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Managed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:manage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":manage"
							],
							"variable": [
								{
									"key": "manage",
									"value": ":manage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Onboard Devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"extreme\": {\n    \"sns\": [\n      \"string\"\n    ]\n  },\n  \"exos\": {\n    \"sns\": [\n      \"string\"\n    ]\n  },\n  \"voss\": {\n    \"sns\": [\n      \"string\"\n    ]\n  },\n  \"wing\": {\n    \"sn_to_mac\": {\n      \"additionalProp1\": \"string\",\n      \"additionalProp2\": \"string\",\n      \"additionalProp3\": \"string\"\n    }\n  },\n  \"dell\": {\n    \"sn_to_st\": {\n      \"additionalProp1\": \"string\",\n      \"additionalProp2\": \"string\",\n      \"additionalProp3\": \"string\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:onboard",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":onboard"
							],
							"variable": [
								{
									"key": "onboard",
									"value": ":onboard"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reboot Devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:reboot",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":reboot"
							],
							"variable": [
								{
									"key": "reboot",
									"value": ":reboot"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Unmanaged",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[{{id}}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:unmanage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":unmanage"
							],
							"variable": [
								{
									"key": "unmanage",
									"value": ":unmanage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device details for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hostname\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send CLI to one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"CLI_RESPONSE_CODE_SUCCEED\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"string\"]"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:cli",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":cli"
							],
							"variable": [
								{
									"key": "cli",
									"value": ":cli"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Managed for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:manage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":manage"
							],
							"variable": [
								{
									"key": "manage",
									"value": ":manage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reboot one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:reboot",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":reboot"
							],
							"variable": [
								{
									"key": "reboot",
									"value": ":reboot"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Unmanaged for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:unmanage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":unmanage"
							],
							"variable": [
								{
									"key": "unmanage",
									"value": ":unmanage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change hostname for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/hostname?hostname=string",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"hostname"
							],
							"query": [
								{
									"key": "hostname",
									"value": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get location for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"location_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/location",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign location to one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"location_id\":280620278432759,\n    \"x\":16.235294117647058,\n    \"y\":35.470588235294116,\n    \"latitude\":null,\n    \"longitude\":null\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/location",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke location for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/location",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get network policy for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/network-policy",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"network-policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign network policy to one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/network-policy?networkPolicyId={{np_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"network-policy"
							],
							"query": [
								{
									"key": "networkPolicyId",
									"value": "{{np_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke network policy for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/network-policy",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"network-policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Push conifguration and upgrade firmware to devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"request_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"devices\":{\"ids\":[{{id}}]},\"deploy_policy\":{\"enable_complete_configuration_update\":true,\"firmware_upgrade_policy\":{\"enable_enforce_upgrade\":true,\"enable_distributed_upgrade\":true},\"firmware_activate_option\":{\"enable_activate_at_next_reboot\":true,\"activation_delay_seconds\":0,\"activation_time\":0}}}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/config/:deploy",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"config",
								":deploy"
							],
							"variable": [
								{
									"key": "deploy",
									"value": ":deploy"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get configuration deployment overview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"in_progress_devices\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/config/deploy/overview",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"config",
								"deploy",
								"overview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get configuration deployment status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"current_progress\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/config/deploy/status?deviceIds={{id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"config",
								"deploy",
								"status"
							],
							"query": [
								{
									"key": "deviceIds",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign location to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"devices\":{\"ids\":[0]},\"device_location\":{\"location_id\":0,\"x\":0,\"y\":0,\"latitude\":0,\"longitude\":0}}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/location/:assign",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"location",
								":assign"
							],
							"variable": [
								{
									"key": "assign",
									"value": ":assign"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query location to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"location_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[0]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/location/:query",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"location",
								":query"
							],
							"variable": [
								{
									"key": "query",
									"value": ":query"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke location for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[0]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/location/:revoke",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"location",
								":revoke"
							],
							"variable": [
								{
									"key": "revoke",
									"value": ":revoke"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign network policy to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"devices\":{\"ids\":[{{id}}]},\"network_policy_id\":{{np_id}}}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/:assign",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								":assign"
							],
							"variable": [
								{
									"key": "assign",
									"value": ":assign"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query network policy for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[{{id}}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/:query",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								":query"
							],
							"variable": [
								{
									"key": "query",
									"value": ":query"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke network policy for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[{{id}}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/:revoke",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								":revoke"
							],
							"variable": [
								{
									"key": "revoke",
									"value": ":revoke"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List assigned devices for network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/{id}?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								"{id}"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Client",
			"item": [
				{
					"name": "List Active Clients",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/active",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"active"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Location",
			"item": [
				{
					"name": "Get location tree",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/tree?parentId={{loc_id}}&expandChildren=true",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"tree"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{loc_id}}"
								},
								{
									"key": "expandChildren",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Network Policy",
			"item": [
				{
					"name": "List Network policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List SSID list for the network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}/ssids?page=1&limit=50",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}",
								"ssids"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "50"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Configuration - SSID",
			"item": [
				{
					"name": "List SSIDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids?page=1&limit=80",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "80"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Rename SSID (wireless name)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "string"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/:rename",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								":rename"
							],
							"variable": [
								{
									"key": "rename",
									"value": ":rename"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - PCG (Key-Based)",
			"item": [
				{
					"name": "List all Key Based PCG entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcg/key-based",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcg",
								"key-based"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initiate Key Based PCG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"policy_name\":\"0\",\"ssid_name\":\"0\",\"users\":[{\"name\":\"0\",\"email\":\"0\",\"user_group_name\":\"0\"}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcg/key-based",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcg",
								"key-based"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Key Based PCG",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcg/key-based/{{pcgk_id}}?ids={{pcgu_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcg",
								"key-based",
								"{{pcgk_id}}"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{pcgu_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Key Based PCG Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"enabled\":true,\"ssid_name\":\"string\",\"user_ids\":[0]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcg/key-based/{id}/:onboard",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcg",
								"key-based",
								"{id}",
								":onboard"
							],
							"variable": [
								{
									"key": "onboard",
									"value": ":onboard"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Emails keys for Key Based PCG users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcg/key-based/{{pcgk_id}}/keys/:email?userIds={{pcgu_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcg",
								"key-based",
								"{{pcgk_id}}",
								"keys",
								":email"
							],
							"query": [
								{
									"key": "userIds",
									"value": "{{pcgu_id}}"
								}
							],
							"variable": [
								{
									"key": "email",
									"value": ":email"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate keys for Key Based PCG users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcg/key-based/{{pcgk_id}}/keys/:generate?userIds={{pcgu_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcg",
								"key-based",
								"{{pcgk_id}}",
								"keys",
								":generate"
							],
							"query": [
								{
									"key": "userIds",
									"value": "{{pcgu_id}}"
								}
							],
							"variable": [
								{
									"key": "generate",
									"value": ":generate"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Key Based PCG users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcg/key-based/{{pcgk_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcg",
								"key-based",
								"{{pcgk_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get port assigment details of AP150W device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"policy_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcg/key-based/ports/{{id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcg",
								"key-based",
								"ports",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign ports for AP150W",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"policy_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"pcg_port_assignment\":[{\"device_id\":0,\"eth1_user_id\":0,\"eth2_user_id\":0,\"eth3_user_id\":0}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcg/key-based/ports/{{id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcg",
								"key-based",
								"ports",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var authServiceUrl = pm.collectionVariables.get('authService');",
					"var gatewayBaseUrl = pm.collectionVariables.get('gatewayBaseUrl');",
					"var un = pm.environment.get('username');",
					"var pw = pm.environment.get('password');",
					"",
					"var sdk = require('postman-collection');",
					"",
					"if (pm.info.requestName === \"Login\"){",
					"    pm.environment.set(\"jwttoken\", \"123\");",
					"    console.log('Token has been reset');",
					"};",
					"",
					"var isValidTokenRequest = new sdk.Request({",
					"    url: gatewayBaseUrl + \"/account/info\", // Use an endpoint that requires being authenticated",
					"    method: 'GET',",
					"    header: [",
					"        new sdk.Header({",
					"            key: 'content-type',",
					"            value: 'application/json',",
					"        }),",
					"        new sdk.Header({",
					"            key: 'acccept',",
					"            value: 'application/json',",
					"        }),",
					"        new sdk.Header({",
					"            key: 'Authorization',",
					"            value: 'Bearer ' + pm.environment.get(\"jwttoken\"),",
					"        }),",
					"    ]",
					"});",
					"",
					"pm.sendRequest(isValidTokenRequest, function (err, response) {",
					"    if (response.code === 401) {",
					"        console.log('Token is unauthorized');",
					"        refreshToken();",
					"    }",
					"    else if (response.code === 200)",
					"    {",
					"        console.log('Valid Token');",
					"    }",
					"});",
					"",
					"function refreshToken() {",
					"    var tokenRequest = new sdk.Request({",
					"    url: authServiceUrl,",
					"    method: 'POST',",
					"    header: [",
					"        new sdk.Header({",
					"            key: 'content-type',",
					"            value: 'application/json'",
					"        }),",
					"        new sdk.Header({",
					"            key: 'acccept',",
					"            value: '*/*'",
					"        }),",
					"    ],",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({",
					"            username: un,",
					"            password: pw",
					"        })",
					"    } ",
					"  });",
					"",
					"  pm.sendRequest(tokenRequest, function (err, response) {",
					"      if (err) {",
					"          throw err;",
					"      }",
					"      ",
					"      if (response.code !== 200) {",
					"          throw new Error('Could not log in.');",
					"      }",
					"      ",
					"      pm.environment.set(\"jwttoken\", response.json().access_token);",
					"      console.log(`New token has been set: ${response.json().access_token}`);",
					"  });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "authService",
			"value": "https://api.extremecloudiq.com/login"
		},
		{
			"key": "gatewayBaseUrl",
			"value": "https://api.extremecloudiq.com"
		},
		{
			"key": "jwttoken",
			"value": ""
		},
		{
			"key": "manage",
			"value": ":manage"
		},
		{
			"key": "check",
			"value": ":check"
		},
		{
			"key": "deploy",
			"value": ":deploy"
		},
		{
			"key": "cli",
			"value": ":cli"
		},
		{
			"key": "reboot",
			"value": ":reboot"
		},
		{
			"key": "unmanage",
			"value": ":unmanage"
		},
		{
			"key": "rename",
			"value": ":rename"
		}
	]
}