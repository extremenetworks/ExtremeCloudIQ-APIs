{
	"info": {
		"_postman_id": "2f524037-b7f1-4ed3-ae9c-decd0ff45ace",
		"name": "XIQ APIv2 New Framework_DEC2021",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login Basic authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include access token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/login",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authorization",
			"item": [
				{
					"name": "POST ​/auth​/apitoken Generate new API token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myDate = new Date(\"July 2, 2021 02:30:00\"); // Your timezone!",
									"pm.environment.set(\"myEpoch\", myDate.getTime()/1000.0);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include access token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Token for read account only\",\n  \"expire_time\": {{myEpoch}},\n  \"permissions\": [\n    \"account:r\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/apitoken",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"apitoken"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/apitoken/info Get current API token details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include role\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"role\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/apitoken/info",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"apitoken",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/permissions Get permissions for current login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/permissions",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/permissions/:check Check permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include permissions\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"permissions\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"uri\": \"https://api.extremecloudiq.com/auth/apitoken/info\",\n  \"method\": \"get\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/permissions/{{check}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"permissions",
								"{{check}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "Account Switch - Switch to another XIQ account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"account_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/account/:switch?id={{viq_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								":switch"
							],
							"query": [
								{
									"key": "id",
									"value": "{{viq_id}}"
								}
							],
							"variable": [
								{
									"key": "switch",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Account External - List accessible external guest XIQ accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/account/external",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"external"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account Home - Get home XIQ account info Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"account_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/account/home",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"home"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account VIQ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include VIQ info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"entitlement_key\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account VIQ Backup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq/:backup",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq",
								":backup"
							],
							"variable": [
								{
									"key": "backup",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "list all users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login_name\": \"example1@company.com\",\n  \"display_name\": \"example1\",\n  \"idle_timeout\": \"30\",\n  \"user_role\": \"ADMINISTRATOR\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user info by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login_name\": \"newlogin1@company.com\",\n  \"display_name\": \"New Name1\",\n  \"idle_timeout\": \"30\",\n  \"user_role\": \"OBSERVER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all external users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Grant user external access",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login_name\": \"example1@company.com\",\n  \"user_role\": \"ADMINISTRATOR\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the external user information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update external user information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_role\": \"OPERATOR\",\n  \"enable_api_access\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete external user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current User Info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/me",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HIQ",
			"item": [
				{
					"name": "Get HIQ context",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"reading_org_ids\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set HIQ Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reading_org_ids\": [\n   1\n  ],\n  \"creating_org_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get organization for creating new data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/creating",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"creating"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Organization for creating new data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "1"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/creating",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"creating"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get organizations for reading data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/reading",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"reading"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set organizations for reading data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  123\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/reading",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"reading"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all organizations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include organisation info \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string2\",\n  \"color\": \"string2\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an  existing organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful Delete request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations/{{org_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations",
								"{{org_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "rename an  existing organization Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[test]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations/{{org_id}/:rename",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations",
								"{{org_id}",
								":rename"
							],
							"variable": [
								{
									"key": "rename",
									"value": ":rename"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HIQ Status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include HIQ info \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"enabled\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/status",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Location",
			"item": [
				{
					"name": "Create location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{loc_id}}\",\n  \"name\": \"Location Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update location by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"95135\",\n  \"name\": \"NewLocationName\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/{{loc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"{{loc_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete location by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/{{loc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"{{loc_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create building",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{loc_id}}\",\n  \"name\": \"TheBuildingName\",\n  \"address\": \"The building street address\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/building",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"building"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update building by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{loc_id}}\",\n  \"name\": \"NewBuildingName\",\n  \"address\": \"New building street address\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/building/{{building_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"building",
								"{{building_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete building by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/building/{{building_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"building",
								"{{building_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create floor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{building_id}}\",\n  \"name\": \"TheFloorName\",\n  \"environment\": \"AUTO_ESTIMATE\",\n  \"db_attenuation\": \"15\",\n  \"measurement_unit\": \"FEET\",\n  \"installation_height\": \"12\",\n  \"map_size_width\": \"12\",\n  \"map_size_height\": \"12\",\n  \"map_name\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floor",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floor"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update floor by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{building_id}}\",\n  \"name\": \"NewFloorName\",\n  \"environment\": \"OFFICE\",\n  \"db_attenuation\": \"15\",\n  \"measurement_unit\": \"FEET\",\n  \"installation_height\": \"12\",\n  \"map_size_width\": \"12\",\n  \"map_size_height\": \"12\",\n  \"map_name\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floor/{{floor_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floor",
								"{{floor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete floor by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floor/{{floor_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floor",
								"{{floor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload floorplan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floorplan",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floorplan"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get location tree",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/tree?parentId={{loc_id}}&expandChildren=true",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"tree"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{loc_id}}"
								},
								{
									"key": "expandChildren",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Device",
			"item": [
				{
					"name": "List Devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hostname\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices?page=1&limit=50&views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "50"
								},
								{
									"key": "locationId",
									"value": "{{floor_id}}",
									"disabled": true
								},
								{
									"key": "connected",
									"value": "true",
									"disabled": true
								},
								{
									"key": "adminStates",
									"value": "MANAGED",
									"disabled": true
								},
								{
									"key": "macAddresses",
									"value": null,
									"disabled": true
								},
								{
									"key": "sns",
									"value": null,
									"disabled": true
								},
								{
									"key": "hostnames",
									"value": "",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "SN",
									"disabled": true
								},
								{
									"key": "order",
									"value": "ASC",
									"disabled": true
								},
								{
									"key": "views",
									"value": "FULL"
								},
								{
									"key": "fields",
									"value": "ID",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send CLI to device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"CLI_RESPONSE_CODE_SUCCEED\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      {{id}}\n    ]\n  },\n  \"clis\": [\n    \"string\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:cli",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":cli"
							],
							"variable": [
								{
									"key": "cli",
									"value": ":cli"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:delete",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":delete"
							],
							"variable": [
								{
									"key": "delete",
									"value": ":delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Managed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:manage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":manage"
							],
							"variable": [
								{
									"key": "manage",
									"value": ":manage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Onboard Devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"extreme\": {\n    \"sns\": [\n      \"string\"\n    ]\n  },\n  \"exos\": {\n    \"sns\": [\n      \"string\"\n    ]\n  },\n  \"voss\": {\n    \"sns\": [\n      \"string\"\n    ]\n  },\n  \"wing\": {\n    \"sn_to_mac\": {\n      \"additionalProp1\": \"string\",\n      \"additionalProp2\": \"string\",\n      \"additionalProp3\": \"string\"\n    }\n  },\n  \"dell\": {\n    \"sn_to_st\": {\n      \"additionalProp1\": \"string\",\n      \"additionalProp2\": \"string\",\n      \"additionalProp3\": \"string\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:onboard",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":onboard"
							],
							"variable": [
								{
									"key": "onboard",
									"value": ":onboard"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reboot Devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:reboot",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":reboot"
							],
							"variable": [
								{
									"key": "reboot",
									"value": ":reboot"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Unmanaged",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[{{id}}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:unmanage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":unmanage"
							],
							"variable": [
								{
									"key": "unmanage",
									"value": ":unmanage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device details for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hostname\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}?views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}"
							],
							"query": [
								{
									"key": "views",
									"value": "FULL"
								},
								{
									"key": "fields",
									"value": "ID",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send CLI to one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"CLI_RESPONSE_CODE_SUCCEED\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"string\"]"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:cli",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":cli"
							],
							"variable": [
								{
									"key": "cli",
									"value": ":cli"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Managed for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:manage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":manage"
							],
							"variable": [
								{
									"key": "manage",
									"value": ":manage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reboot one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:reboot",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":reboot"
							],
							"variable": [
								{
									"key": "reboot",
									"value": ":reboot"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Unmanaged for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:unmanage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":unmanage"
							],
							"variable": [
								{
									"key": "unmanage",
									"value": ":unmanage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List alarms for device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"page\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"Dec 19, 2021 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Dec 20, 2021 12:30:00\"); // Your timezone!",
									"pm.environment.set(\"myStartTime\", startTime.getTime()/1000.0);",
									"pm.environment.set(\"myEndTime\", endTime.getTime()/1000.0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/alarms?startTime={{myStartTime}}&endTime={{myEndTime}}&page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"alarms"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device CPU/memory usage history",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"average_cpu\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"Dec 19, 2021 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Dec 20, 2021 12:30:00\"); // Your timezone!",
									"pm.environment.set(\"myStartTime\", startTime.getTime()/1000.0);",
									"pm.environment.set(\"myEndTime\", endTime.getTime()/1000.0);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/history/cpu-mem?startTime={{myStartTime}}&endTime={{myEndTime}}&interval=1",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"history",
								"cpu-mem"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}"
								},
								{
									"key": "interval",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change hostname for one device Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/hostname?hostname=string",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"hostname"
							],
							"query": [
								{
									"key": "hostname",
									"value": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get location for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"location_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/location",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign location to one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"location_id\":769490635828943,\n    \"x\":16.235294117647058,\n    \"y\":35.470588235294116,\n    \"latitude\":null,\n    \"longitude\":null\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/location",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke location for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/location",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get network policy for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/network-policy",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"network-policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign network policy to one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/network-policy?networkPolicyId={{np_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"network-policy"
							],
							"query": [
								{
									"key": "networkPolicyId",
									"value": "{{np_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke network policy for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/network-policy",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"network-policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Override SSID For a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/network-policy",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"network-policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SSID status for a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/ssid/status",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"ssid",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SSID status for a device Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ssid_ids\": [\n    {{ssid_id}}\n  ],\n  \"if_names\": [\n    \"WIFI0\"\n  ],\n  \"enabled\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/ssid/status/:change",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"ssid",
								"status",
								":change"
							],
							"variable": [
								{
									"key": "change",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign location to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"devices\":{\"ids\":[0]},\"device_location\":{\"location_id\":0,\"x\":0,\"y\":0,\"latitude\":0,\"longitude\":0}}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/location/:assign",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"location",
								":assign"
							],
							"variable": [
								{
									"key": "assign",
									"value": ":assign"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query location to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"location_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[0]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/location/:query",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"location",
								":query"
							],
							"variable": [
								{
									"key": "query",
									"value": ":query"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke location for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[0]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/location/:revoke",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"location",
								":revoke"
							],
							"variable": [
								{
									"key": "revoke",
									"value": ":revoke"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign network policy to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"devices\":{\"ids\":[{{id}}]},\"network_policy_id\":{{np_id}}}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/:assign",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								":assign"
							],
							"variable": [
								{
									"key": "assign",
									"value": ":assign"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query network policy for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[{{id}}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/:query",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								":query"
							],
							"variable": [
								{
									"key": "query",
									"value": ":query"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke network policy for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[{{id}}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/:revoke",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								":revoke"
							],
							"variable": [
								{
									"key": "revoke",
									"value": ":revoke"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List assigned devices for network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/{{np_id}}?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								"{{np_id}}"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change device OS mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_ids\": [\n    {{id}}\n  ],\n  \"target_os\": \"WiNG\"\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/os/:change",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"os",
								":change"
							],
							"variable": [
								{
									"key": "change",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign RADIUS proxy to devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/radius=proxy/:assign?ids={{id}}&radiusProxyId=438086664193",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"radius=proxy",
								":assign"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{id}}"
								},
								{
									"key": "radiusProxyId",
									"value": "438086664193"
								}
							],
							"variable": [
								{
									"key": "assign",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke RADIUS proxy from multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/radius=proxy/:revoke?ids={{id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"radius=proxy",
								":revoke"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{id}}"
								}
							],
							"variable": [
								{
									"key": "revoke",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List device stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/stats",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"stats"
							],
							"query": [
								{
									"key": "locationID",
									"value": "{{floor_id}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Network Policy",
			"item": [
				{
					"name": "List Network Policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List SSIDs for a Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}/ssids?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}",
								"ssids"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add SSIDs to a Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {{ssid_id}}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}/ssids/:add",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}",
								"ssids",
								":add"
							],
							"variable": [
								{
									"key": "add",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Removes SSIDs from a Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {{ssid_id}}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}/ssids/:remove",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}",
								"ssids",
								":remove"
							],
							"variable": [
								{
									"key": "remove",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Client",
			"item": [
				{
					"name": "Get Client info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/{{client_id}}?views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"{{client_id}}"
							],
							"query": [
								{
									"key": "views",
									"value": "FULL"
								},
								{
									"key": "fields",
									"value": "ID",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Active Clients",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/active?page=1&limit=10&views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"active"
							],
							"query": [
								{
									"key": "locationIds",
									"value": "{{floor_id}}",
									"disabled": true
								},
								{
									"key": "deviceIds",
									"value": "{{id}}",
									"disabled": true
								},
								{
									"key": "vlans",
									"value": "200",
									"disabled": true
								},
								{
									"key": "userProfileNames",
									"value": null,
									"disabled": true
								},
								{
									"key": "ssids",
									"value": "SSID Name",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "views",
									"value": "FULL"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get client summary metrics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"connected_wireless_client_count\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/summary",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"summary"
							],
							"query": [
								{
									"key": "locationIds",
									"value": "{{floor_id}}",
									"disabled": true
								},
								{
									"key": "deviceIds",
									"value": "{{id}}",
									"disabled": true
								},
								{
									"key": "vlans",
									"value": "92",
									"disabled": true
								},
								{
									"key": "userProfileNames",
									"value": null,
									"disabled": true
								},
								{
									"key": "ssids",
									"value": "SSID Name",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get usage per client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"Dec 19, 2021 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Dec 20, 2021 12:30:00\"); // Your timezone!",
									"pm.environment.set(\"myStartTime\", startTime.getTime());",
									"pm.environment.set(\"myEndTime\", endTime.getTime());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/usage?clientIds={{client_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"usage"
							],
							"query": [
								{
									"key": "clientIds",
									"value": "{{client_id}}"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Application",
			"item": [
				{
					"name": "List the applications",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/applications?page=1&limit=10&predefined=true",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"applications"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "predefined",
									"value": "true"
								},
								{
									"key": "name",
									"value": "ACROBAT.COM",
									"disabled": true
								},
								{
									"key": "detectionProtocol",
									"value": "HTTPS",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "NAME",
									"disabled": true
								},
								{
									"key": "order",
									"value": "DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List the TopN clients for a application",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5;",
									"//enter start and end times",
									"var startTime = new Date(\"Dec 19, 2021 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Dec 20, 2021 12:30:00\"); // Your timezone!",
									"pm.environment.set(\"myStartTime\", startTime.getTime());",
									"pm.environment.set(\"myEndTime\", endTime.getTime());",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/applications/{{app_id}}/clients/top{{count}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"applications",
								"{{app_id}}",
								"clients",
								"top{{count}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List the TopN applications",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5;",
									"//enter start and end times",
									"var startTime = new Date(\"Dec 19, 2021 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Dec 20, 2021 12:30:00\"); // Your timezone!",
									"pm.environment.set(\"myStartTime\", startTime.getTime());",
									"pm.environment.set(\"myEndTime\", endTime.getTime());",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/applications/top{{count}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"applications",
								"top{{count}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Log",
			"item": [
				{
					"name": "List Accounting Logs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/accounting?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"accounting"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "username",
									"value": "",
									"disabled": true
								},
								{
									"key": "callingStationId",
									"value": "",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Audit Logs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/audit?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"audit"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "category",
									"value": "",
									"disabled": true
								},
								{
									"key": "username",
									"value": "",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Auth Logs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/auth?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"auth"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "username",
									"value": "",
									"disabled": true
								},
								{
									"key": "callingStationId",
									"value": "",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Credential Logs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/credential?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"credential"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "username",
									"value": "",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Email Logs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/email?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"email"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "username",
									"value": "",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List SMS logs",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/sms?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"sms"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "phoneNumber",
									"value": "",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notification",
			"item": [
				{
					"name": "List Webhook subscriptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"message_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/subscriptions/webhook",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"subscriptions",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Webhook subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"application\": \"example-app\",\n    \"url\": \"https://webhook_endpoint-example-123\",\n    \"secret\": \"erw3245cq3dasbjtyj\",\n    \"message_type\": \"LOCATION_AP_CENTRIC\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/subscriptions/webhook",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"subscriptions",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Webhook subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/subscriptions/webhook/{{web_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"subscriptions",
								"webhook",
								"{{web_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Deployment",
			"item": [
				{
					"name": "Push config and update firmaware",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"request_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      {{id}}\n    ]\n  },\n  \"policy\": {\n    \"enable_complete_configuration_update\": true,\n    \"firmware_upgrade_policy\": {\n      \"enable_enforce_upgrade\": true,\n      \"enable_distributed_upgrade\": true\n    },\n    \"firmware_activate_option\": {\n      \"enable_activate_at_next_reboot\": true,\n      \"activation_delay_seconds\": 0,\n      \"activation_time\": 0\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get configuration deployment overview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"request_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      {{id}}\n    ]\n  },\n  \"policy\": {\n    \"enable_complete_configuration_update\": true,\n    \"firmware_upgrade_policy\": {\n      \"enable_enforce_upgrade\": true,\n      \"enable_distributed_upgrade\": true\n    },\n    \"firmware_activate_option\": {\n      \"enable_activate_at_next_reboot\": true,\n      \"activation_delay_seconds\": 0,\n      \"activation_time\": 0\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments/overview",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments",
								"overview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get configuration deployment status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"request_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      {{id}}\n    ]\n  },\n  \"policy\": {\n    \"enable_complete_configuration_update\": true,\n    \"firmware_upgrade_policy\": {\n      \"enable_enforce_upgrade\": true,\n      \"enable_distributed_upgrade\": true\n    },\n    \"firmware_activate_option\": {\n      \"enable_activate_at_next_reboot\": true,\n      \"activation_delay_seconds\": 0,\n      \"activation_time\": 0\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments/status?deviceIds={{id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments",
								"status"
							],
							"query": [
								{
									"key": "deviceIds",
									"value": "{{id}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Basic",
			"item": [
				{
					"name": "List VLAN profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create VLAN profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"default_vlan_id\": 0,\n  \"enable_classification\": true,\n  \"classified_entries\": [\n    {\n      \"vlan_id\": 0,\n      \"classification_rule_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a VLAN profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles/{{vlan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles",
								"{{vlan_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a VLAN profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles/{{vlan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles",
								"{{vlan_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Configuration - User Management",
			"item": [
				{
					"name": "List Email templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/email-templates",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"email-templates"
							],
							"query": [
								{
									"key": "passwordType",
									"value": "RADIUS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List end users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "user_group_ids",
									"value": "{{group_id}}",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an end users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_group_id\": {{group_id}},\n  \"name\": \"string\",\n  \"user_name\": \"string\",\n  \"organization\": \"string\",\n  \"visit_purpose\": \"string\",\n  \"description\": \"string\",\n  \"email_address\": \"string\",\n  \"phone_number\": \"string\",\n  \"password\": \"string\",\n  \"email_password_delivery\": \"string\",\n  \"sms_password_delivery\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an end users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_group_id\": {{group_id}},\n  \"name\": \"string\",\n  \"user_name\": \"string\",\n  \"organization\": \"string\",\n  \"visit_purpose\": \"string\",\n  \"description\": \"string\",\n  \"email_address\": \"string\",\n  \"phone_number\": \"string\",\n  \"password\": \"string\",\n  \"email_password_delivery\": \"string\",\n  \"sms_password_delivery\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers/{{user_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an end users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers/{{user_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all Key Based PCG entries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based"
							]
						}
					},
					"response": []
				},
				{
					"name": "Setup a Key-based Private Client Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"policy_name\":\"0\",\"ssid_name\":\"0\",\"users\":[{\"name\":\"0\",\"email\":\"0\",\"user_group_name\":\"0\"}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Private Client Group from a network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{policy_id}}?ids={{pcgk_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{policy_id}}"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{pcgk_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Key-based Private Client Group for a network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ssid_name\": \"string\",\n  \"enabled\": true,\n  \"user_ids\": [\n    0\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{policy_id}}/:onboard",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{policy_id}}",
								":onboard"
							],
							"variable": [
								{
									"key": "onboard",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send keys to specified users in PCG-enabled network policy via Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{policy_id}}/keys/:email?userIds={{user_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{policy_id}}",
								"keys",
								":email"
							],
							"query": [
								{
									"key": "userIds",
									"value": "{{user_id}}"
								}
							],
							"variable": [
								{
									"key": "email",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate/regenerate shared keys for specified users in PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{policy_id}}/keys/:generate?userIds={{user_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{policy_id}}",
								"keys",
								":generate"
							],
							"query": [
								{
									"key": "userIds",
									"value": "{{user_id}}"
								}
							],
							"variable": [
								{
									"key": "generate",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get port assignments for devices (only support AP150W now) in a network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"policy_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{policy_id}}/port-assignments",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{policy_id}}",
								"port-assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign ports for devices (only support AP150W now) in a network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"policy_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"port_assignments\": [\n    {\n      \"device_id\": 0,\n      \"eth1_user_id\": 0,\n      \"eth2_user_id\": 0,\n      \"eth3_user_id\": 0\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{policy_id}}/port-assignments",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{policy_id}}",
								"port-assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get users for a PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{policy_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{policy_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Replace all users in a PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"users\": [\n    {\n      \"name\": \"string\",\n      \"email\": \"string\",\n      \"user_group_name\": \"string\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{policy_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{policy_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add users to a PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"users\": [\n    {\n      \"name\": \"string\",\n      \"email\": \"string\",\n      \"user_group_name\": \"string\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{policy_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{policy_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete users from a PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_ids\": [\n    {{pcgu_id}}\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{policy_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{policy_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "List SMS templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/sms-templates",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"sms-templates"
							],
							"query": [
								{
									"key": "passwordType",
									"value": "PPSK",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List user groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "password_db_location",
									"value": "CLOUD",
									"disabled": true
								},
								{
									"key": "passwordType",
									"value": "PPSK",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"password_db_location\": \"CLOUD\",\n  \"ppsk_use_only\": true,\n  \"password_type\": \"PPSK\",\n  \"enable_max_clients_per_ppsk\": true,\n  \"max_clients_per_ppsk\": 0,\n  \"pcg_use_only\": true,\n  \"pcg_type\": \"AP_BASED\",\n  \"enable_cwp_reg\": true,\n  \"password_settings\": {\n    \"enable_letters\": true,\n    \"enable_numbers\": true,\n    \"enable_special_characters\": true,\n    \"password_concat_string\": \"string\",\n    \"psk_generation_method\": \"PASSWORD_ONLY\",\n    \"password_character_types\": \"INCLUDE_ALL_CHARACTER_TYPE_ENABLED\",\n    \"password_length\": 8\n  },\n  \"expiration_settings\": {\n    \"expiration_type\": \"NEVER_EXPIRE\",\n    \"valid_during_dates\": {\n      \"start_date_time\": {\n        \"day_of_month\": 0,\n        \"month\": 0,\n        \"year\": 0,\n        \"hour_of_day\": 0,\n        \"minute_of_hour\": 0\n      },\n      \"end_date_time\": {\n        \"day_of_month\": 0,\n        \"month\": 0,\n        \"year\": 0,\n        \"hour_of_day\": 0,\n        \"minute_of_hour\": 0\n      },\n      \"time_zone\": \"string\"\n    },\n    \"valid_for_time_period\": {\n      \"valid_time_period_after\": \"ID_CREATION\",\n      \"after_id_creation_settings\": {\n        \"valid_time_period\": 0,\n        \"valid_time_period_unit\": \"MINUTE\"\n      },\n      \"after_first_login_settings\": {\n        \"valid_time_period\": 0,\n        \"valid_time_period_unit\": \"MINUTE\",\n        \"first_login_within\": 0,\n        \"first_login_within_unit\": \"MINUTE\"\n      }\n    },\n    \"valid_daily\": {\n      \"daily_start_hour\": 0,\n      \"daily_start_minute\": 0,\n      \"daily_end_hour\": 0,\n      \"daily_end_minute\": 0\n    },\n    \"expiration_action\": \"SHOW_MESSAGE\",\n    \"post_expiration_action\": {\n      \"enable_credentials_renewal\": true,\n      \"enable_delete_immediately\": true,\n      \"delete_after_value\": 0,\n      \"delete_after_unit\": \"MINUTE\"\n    }\n  },\n  \"delivery_settings\": {\n    \"email_template_id\": 0,\n    \"sms_template_id\": 0\n  }\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string test\",\n  \"password_db_location\": \"CLOUD\",\n  \"ppsk_use_only\": true,\n  \"password_type\": \"PPSK\",\n  \"enable_max_clients_per_ppsk\": true,\n  \"max_clients_per_ppsk\": 0,\n  \"pcg_use_only\": true,\n  \"pcg_type\": \"AP_BASED\",\n  \"enable_cwp_reg\": true,\n  \"password_settings\": {\n    \"enable_letters\": true,\n    \"enable_numbers\": true,\n    \"enable_special_characters\": true,\n    \"password_concat_string\": \"string\",\n    \"psk_generation_method\": \"PASSWORD_ONLY\",\n    \"password_character_types\": \"INCLUDE_ALL_CHARACTER_TYPE_ENABLED\",\n    \"password_length\": 8\n  },\n  \"expiration_settings\": {\n    \"expiration_type\": \"NEVER_EXPIRE\",\n    \"valid_during_dates\": {\n      \"start_date_time\": {\n        \"day_of_month\": 0,\n        \"month\": 0,\n        \"year\": 0,\n        \"hour_of_day\": 0,\n        \"minute_of_hour\": 0\n      },\n      \"end_date_time\": {\n        \"day_of_month\": 0,\n        \"month\": 0,\n        \"year\": 0,\n        \"hour_of_day\": 0,\n        \"minute_of_hour\": 0\n      },\n      \"time_zone\": \"string\"\n    },\n    \"valid_for_time_period\": {\n      \"valid_time_period_after\": \"ID_CREATION\",\n      \"after_id_creation_settings\": {\n        \"valid_time_period\": 0,\n        \"valid_time_period_unit\": \"MINUTE\"\n      },\n      \"after_first_login_settings\": {\n        \"valid_time_period\": 0,\n        \"valid_time_period_unit\": \"MINUTE\",\n        \"first_login_within\": 0,\n        \"first_login_within_unit\": \"MINUTE\"\n      }\n    },\n    \"valid_daily\": {\n      \"daily_start_hour\": 0,\n      \"daily_start_minute\": 0,\n      \"daily_end_hour\": 0,\n      \"daily_end_minute\": 0\n    },\n    \"expiration_action\": \"SHOW_MESSAGE\",\n    \"post_expiration_action\": {\n      \"enable_credentials_renewal\": true,\n      \"enable_delete_immediately\": true,\n      \"delete_after_value\": 0,\n      \"delete_after_unit\": \"MINUTE\"\n    }\n  },\n  \"delivery_settings\": {\n    \"email_template_id\": 0,\n    \"sms_template_id\": 0\n  }\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups/{{group_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups",
								"{{group_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups/{{group_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups",
								"{{group_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Policy",
			"item": [
				{
					"name": "List all cloud config groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new cloud config group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"NameOfCGG\",\n  \"description\": \"Add New CCG\",\n  \"device_ids\": [\n    44238164,\n    45054207\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cloud Config group by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs/{{ccg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs",
								"{{ccg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cloud Config group information Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"\",\n  \"description\": \"Update CCG device list\",\n  \"device_ids\": [\n    {{id}}\n    \n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs/{{ccg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs",
								"{{ccg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Cloud Config Group by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs/{{ccg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs",
								"{{ccg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List classification rules",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create classification rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"classifications\": [\n    {\n      \"classification_type\": \"CLASSIFICATION_TYPE_UNSPECIFIED\",\n      \"match\": true,\n      \"classification_type_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a classification rule by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules/{{class_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules",
								"{{class_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a classification rule by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"classifications\": [\n    {\n      \"classification_type\": \"CLASSIFICATION_TYPE_UNSPECIFIED\",\n      \"match\": true,\n      \"classification_type_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules/{{class_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules",
								"{{class_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a classification rule by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules/{{class_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules",
								"{{class_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List L3 address profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/l3-address-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"l3-address-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "List SSIDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Rename SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "string",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/:rename",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								":rename"
							],
							"variable": [
								{
									"key": "rename",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach CWP to an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "CWP ID",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/cwp/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"cwp",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable the CWP on an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/cwp/:disable",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"cwp",
								":disable"
							],
							"variable": [
								{
									"key": "disable",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable and attach the CWP on an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "New CWP ID",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/cwp/:enable",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"cwp",
								":enable"
							],
							"variable": [
								{
									"key": "enable",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to 802.1X",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_management\": \"WPA3_8021X\",\n  \"encryption_method\": \"CCMP\",\n  \"enable_idm\": true,\n  \"transition_mode\": true,\n  \"radius_server_group_id\": 0,\n  \"user_group_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/dot1x",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"dot1x"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to open access",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/open",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"open"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to PPSK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_management\": \"WPA_PSK\",\n  \"encryption_method\": \"CCMP\",\n  \"user_group_ids\": [\n    0\n  ],\n  \"enable_max_clients_per_ppsk\": true,\n  \"max_clients_per_ppsk\": 0,\n  \"enable_mac_bind\": true,\n  \"max_macs_per_ppsk\": 0,\n  \"ppsk_server_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/ppsk",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"ppsk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to PSK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_management\": \"WPA_PSK\",\n  \"encryption_method\": \"CCMP\",\n  \"anti_logging_threshold\": 0,\n  \"key_type\": \"ASCII\",\n  \"key_value\": \"string\",\n  \"sae_group\": \"ALL\",\n  \"transition_mode\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/psk",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"psk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to WEP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_management\": \"WEP_8021X\",\n  \"encryption_method\": \"WEP104\",\n  \"authentication_method\": \"OPEN\",\n  \"default_key\": \"FIRST\",\n  \"key_type\": \"ASCII\",\n  \"key_value\": \"abcd123456789\",\n  \"key_value2\": \"string\",\n  \"key_value3\": \"string\",\n  \"key_value4\": \"string\",\n  \"radius_server_group_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/wep",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"wep"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID PSK password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "string",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/psk/password",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"psk",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach radius server group to an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "Radius-server-group-id",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/radius-server-group/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"radius-server-group",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach user profile to an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "user-profile-id",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/user-profile/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"user-profile",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List user profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a user profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Testing\",\n  \"vlan_profile_id\": {{vlan_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"vlan_profile_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Authentication",
			"item": [
				{
					"name": "List active directory servers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ad-servers?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ad-servers"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List captive web portals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/cwps?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"cwps"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List LDAP servers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create LDAP server",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"test-ldap-server\",\n  \"description\": \"test ldap server\",\n  \"enable_tls\": true,\n  \"bind_dn\": \"extreme.com\",\n  \"bind_dn_password\": \"123456\",\n  \"base_dn\": \"extreme.com\",\n  \"l3_address_profile_id\": 10,\n  \"protocol_type\": \"LDAP\",\n  \"enable_strip_realm_name\": false,\n  \"destination_port\": 10,\n  \"verification_mode\": \"TRY\",\n  \"ca_certificate_id\": 1000,\n  \"client_certificate_id\": 2000,\n  \"client_key_id\": 30000,\n  \"client_key_password\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get LDAP server by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers/{{ldap_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers",
								"{{ldap_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update LDAP server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"test-ldap-server-1\",\n  \"description\": \"test ldap server 1\",\n  \"enable_tls\": true,\n  \"bind_dn\": \"extremenetworks.com\",\n  \"bind_dn_password\": \"888888\",\n  \"base_dn\": \"extremenetworks.com\",\n  \"l3_address_profile_id\": 1,\n  \"protocol_type\": \"LDAPS\",\n  \"enable_strip_realm_name\": false,\n  \"destination_port\": 20,\n  \"verification_mode\": \"DEMAND\",\n  \"ca_certificate_id\": 100,\n  \"client_certificate_id\": 200,\n  \"client_key_id\": 300,\n  \"client_key_password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers/{{ldap_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers",
								"{{ldap_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete LDAP server",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers/{{ldap_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers",
								"{{ldap_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List RADIUS client objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create RADIUS client objects configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"enable_inject_operator_name_attribute\": true,\n  \"enable_message_authenticator_attribute\": true,\n  \"enable_permit_dynamic_authorization_message_change\": true,\n  \"retry_interval\": 0,\n  \"accounting_interim_update_interval\": 0,\n  \"entries\": [\n    {\n      \"server_role\": \"PRIMARY\",\n      \"server_type\": \"EXTERNAL_RADIUS_SERVER\",\n      \"radius_server_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS client object by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update RADIUS client object configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"enable_inject_operator_name_attribute\": true,\n  \"enable_message_authenticator_attribute\": true,\n  \"enable_permit_dynamic_authorization_message_change\": true,\n  \"retry_interval\": 0,\n  \"accounting_interim_update_interval\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete RADIUS client object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS proxies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-proxies?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-proxies"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create RADIUS proxy configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"radius-proxy-1\",\n  \"description\": \"Radius Proxy 1\",\n  \"format_type\": \"NAI\",\n  \"retry_count\": 3,\n  \"retry_delay\": 5,\n  \"dead_time\": 300,\n  \"enable_inject_operator_name_attribute\": false,\n  \"device_ids\": [\n    1\n  ],\n  \"clients\": [\n    {\n      \"shared_secret\": \"123456\",\n      \"description\": \"\",\n      \"l3_address_profile_id\": 1000\n    }\n  ],\n  \"realms\": [\n    {\n      \"name\": \"NULL\",\n      \"enable_strip_realm_name\": false,\n      \"radius_client_object_id\": 2000\n    },\n    {\n      \"name\": \"DEFAULT\",\n      \"enable_strip_realm_name\": false,\n      \"radius_client_object_id\": 3000\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS proxy configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_proxy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_proxy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update RADIUS proxy configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"radius-proxy-1\",\n  \"description\": \"Radius Proxy 1\",\n  \"format_type\": \"NAI\",\n  \"retry_count\": 3,\n  \"retry_delay\": 5,\n  \"dead_time\": 300,\n  \"enable_inject_operator_name_attribute\": false,\n  \"clients\": [\n    {\n      \"id\": 1\n    },\n    {\n      \"shared_secret\": \"123456\",\n      \"description\": \"\",\n      \"l3_address_profile_id\": 1000\n    }\n  ],\n  \"realms\": [\n    {\n      \"id\": 1\n    },\n    {\n      \"id\": 2\n    },\n    {\n      \"name\": \"test-realm\",\n      \"enable_strip_realm_name\": false,\n      \"radius_client_object_id\": 3000\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_proxy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_proxy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete RADIUS proxy configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_proxy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_proxy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS proxies Devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-proxies/devices?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-proxies",
								"devices"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List external RADIUS servers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create external RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"shared_secret\": \"string\",\n  \"authentication_port\": 0,\n  \"accounting_port\": 0,\n  \"server_type\": \"BOTH\",\n  \"ip_addr\": \"string\",\n  \"enable_a3\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get external RADIUS server by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{ex_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{ex_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update external RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"shared_secret\": \"string\",\n  \"authentication_port\": 0,\n  \"accounting_port\": 0,\n  \"server_type\": \"BOTH\",\n  \"ip_addr\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{ex_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{ex_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete external RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{ex_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{ex_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List internal RADIUS servers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create internal RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"authentication_method_group\": \"TLS_PEAP_TTLS_LEAP_MD5\",\n  \"default_authentication_method\": \"TLS\",\n  \"enable_verify_server_cert\": true,\n  \"server_key_password\": \"string\",\n  \"enable_check_cert_common_name\": true,\n  \"enable_check_user_for_tls_auth\": true,\n  \"enable_check_user_for_peap_auth\": true,\n  \"enable_check_user_for_ttls_auth\": true,\n  \"enable_authentication_server\": true,\n  \"enable_radius_accounting_settings\": true,\n  \"authentication_server_port\": 0,\n  \"active_session_limit\": 0,\n  \"active_session_age_timeout\": 0,\n  \"external_user_directory\": {\n    \"ldap_retry_interval\": 0,\n    \"local_check_interval\": 0,\n    \"remote_check_interval\": 0,\n    \"enable_radius_server_credential_caching\": true,\n    \"cache_lifetime\": 0,\n    \"user_group_attribute\": \"memberOf\",\n    \"external_user_directory_type\": \"OPEN_LDAP\",\n    \"entries\": [\n      {\n        \"default_server_id\": 0,\n        \"server_role\": \"PRIMARY\"\n      }\n    ]\n  },\n  \"ca_certificate_id\": 0,\n  \"server_certificate_id\": 0,\n  \"server_key_id\": 0,\n  \"device_ids\": [\n    0\n  ],\n  \"clients\": [\n    {\n      \"id\": 0,\n      \"shared_secret\": \"string\",\n      \"description\": \"string\",\n      \"l3_address_profile_id\": 0\n    }\n  ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get internal RADIUS server by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{int_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{int_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update internal RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"authentication_method_group\": \"TLS_PEAP_TTLS_LEAP_MD5\",\n  \"default_authentication_method\": \"TLS\",\n  \"enable_verify_server_cert\": true,\n  \"server_key_password\": \"string\",\n  \"enable_check_cert_common_name\": true,\n  \"enable_check_user_for_tls_auth\": true,\n  \"enable_check_user_for_peap_auth\": true,\n  \"enable_check_user_for_ttls_auth\": true,\n  \"enable_authentication_server\": true,\n  \"enable_radius_accounting_settings\": true,\n  \"authentication_server_port\": 0,\n  \"active_session_limit\": 0,\n  \"active_session_age_timeout\": 0,\n  \"ca_certificate_id\": 0,\n  \"server_certificate_id\": 0,\n  \"server_key_id\": 0,\n  \"clients\": [\n    {\n      \"id\": 0,\n      \"shared_secret\": \"string\",\n      \"description\": \"string\",\n      \"l3_address_profile_id\": 0\n    }\n  ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{int_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{int_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete internal RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{int_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{int_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all internal RADIUS devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal/devices?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal",
								"devices"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Conifguration - Certificate",
			"item": [
				{
					"name": "List certificates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"cert_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/certificates?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"certificates"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "certType",
									"value": "CERT",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var authServiceUrl = pm.collectionVariables.get('authService');",
					"var gatewayBaseUrl = pm.collectionVariables.get('gatewayBaseUrl');",
					"var un = pm.environment.get('username');",
					"var pw = pm.environment.get('password');",
					"",
					"var sdk = require('postman-collection');",
					"",
					"if (pm.info.requestName === \"Login\"){",
					"    pm.environment.set(\"jwttoken\", \"123\");",
					"    console.log('Token has been reset');",
					"};",
					"",
					"var isValidTokenRequest = new sdk.Request({",
					"    url: gatewayBaseUrl + \"/account/info\", // Use an endpoint that requires being authenticated",
					"    method: 'GET',",
					"    header: [",
					"        new sdk.Header({",
					"            key: 'content-type',",
					"            value: 'application/json',",
					"        }),",
					"        new sdk.Header({",
					"            key: 'acccept',",
					"            value: 'application/json',",
					"        }),",
					"        new sdk.Header({",
					"            key: 'Authorization',",
					"            value: 'Bearer ' + pm.environment.get(\"jwttoken\"),",
					"        }),",
					"    ]",
					"});",
					"",
					"pm.sendRequest(isValidTokenRequest, function (err, response) {",
					"    if (response.code === 401) {",
					"        console.log('Token is unauthorized');",
					"        refreshToken();",
					"    }",
					"    else if (response.code === 200)",
					"    {",
					"        console.log('Valid Token');",
					"    }",
					"});",
					"",
					"function refreshToken() {",
					"    var tokenRequest = new sdk.Request({",
					"    url: authServiceUrl,",
					"    method: 'POST',",
					"    header: [",
					"        new sdk.Header({",
					"            key: 'content-type',",
					"            value: 'application/json'",
					"        }),",
					"        new sdk.Header({",
					"            key: 'acccept',",
					"            value: '*/*'",
					"        }),",
					"    ],",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({",
					"            username: un,",
					"            password: pw",
					"        })",
					"    } ",
					"  });",
					"",
					"  pm.sendRequest(tokenRequest, function (err, response) {",
					"      if (err) {",
					"          throw err;",
					"      }",
					"      ",
					"      if (response.code !== 200) {",
					"          throw new Error('Could not log in.');",
					"      }",
					"      ",
					"      pm.environment.set(\"jwttoken\", response.json().access_token);",
					"      console.log(`New token has been set: ${response.json().access_token}`);",
					"  });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "authService",
			"value": "https://api.extremecloudiq.com/login"
		},
		{
			"key": "gatewayBaseUrl",
			"value": "https://api.extremecloudiq.com"
		},
		{
			"key": "jwttoken",
			"value": ""
		},
		{
			"key": "manage",
			"value": ":manage"
		},
		{
			"key": "check",
			"value": ":check"
		},
		{
			"key": "deploy",
			"value": ":deploy"
		},
		{
			"key": "cli",
			"value": ":cli"
		},
		{
			"key": "reboot",
			"value": ":reboot"
		},
		{
			"key": "unmanage",
			"value": ":unmanage"
		},
		{
			"key": "rename",
			"value": ":rename"
		}
	]
}