{
	"info": {
		"_postman_id": "86da20f6-263a-47a3-8135-3e0aa0ef6a01",
		"name": "XIQ APIv2 25r2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4056946",
		"_collection_link": "https://gold-escape-604608.postman.co/workspace/XIQ-Workflows---Github~7c6c76b6-b57f-4ebb-8d87-9786462c68e3/collection/4056946-86da20f6-263a-47a3-8135-3e0aa0ef6a01?action=share&source=collection_link&creator=4056946"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login Basic authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include access token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"jwttoken\", jsonData['access_token']);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/login",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout - Revoke token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logout",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authorization",
			"item": [
				{
					"name": "POST ​/auth​/apitoken Generate new API token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myDate = new Date(\"July 2, 2022 02:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myEpoch\", myDate.getTime()/1000.0); //myEpoch is used in the body of this call. This is Epoch time in seconds."
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include access token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"jwttoken\", jsonData['access_token']);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Token for read account only\",\n  \"expire_time\": {{myEpoch}},\n  \"permissions\": [\n    \"account:r\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/apitoken",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"apitoken"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST ​/auth​/apitoken/:validate Validate JWT format API token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{jwttoken}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/apitoken/:validate",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"apitoken",
								":validate"
							],
							"variable": [
								{
									"key": "validate",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/apitoken/info Get current API token details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include role\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"role\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/apitoken/info",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"apitoken",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/permissions Get permissions for current login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/permissions",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/permissions/:check Check permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include permissions\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"permissions\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"uri\": \"https://api.extremecloudiq.com/auth/apitoken/info\",\n  \"method\": \"get\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/permissions/:check",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"permissions",
								":check"
							],
							"variable": [
								{
									"key": "check",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Operation",
			"item": [
				{
					"name": "Get the Long-Running Operation (LRO) status and result.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/operations/{{operation_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"operations",
								"{{operation_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Long-Running Operation (LRO)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/operations/{{operation_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"operations",
								"{{operation_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Long-Running Operation (LRO) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/operations/{{operation_id}}/:cancel",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"operations",
								"{{operation_id}}",
								":cancel"
							],
							"variable": [
								{
									"key": "cancel",
									"value": "cancel"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "Account Switch - Switch to another XIQ account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/:switch?id={{viq_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								":switch"
							],
							"query": [
								{
									"key": "id",
									"value": "{{viq_id}}",
									"description": "The account ID to switch, switch back to home ExtremeCloud IQ account if not provide"
								}
							],
							"variable": [
								{
									"key": "switch",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Account External - List accessible external guest XIQ accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/external",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"external"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account Home - Get home XIQ account info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"account_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/home",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"home"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Third Party Applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/third-party-applications",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"third-party-applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Vhm Setting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/vhm/setting",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"vhm",
								"setting"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Vhm Setting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enable_copilot\": true,\n  \"enable_ssh\": true,\n  \"enable_supplemental_cli\": true,\n  \"enable_wireless_onboarding\": true,\n  \"enable_password_for_exos_voss\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/account/vhm/setting/{{vhm_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"vhm",
								"setting",
								"{{vhm_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Vhm Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"vhm_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/vhm/status",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"vhm",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account VIQ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include VIQ info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"entitlement_key\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account VIQ Backup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq/:backup",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq",
								":backup"
							],
							"variable": [
								{
									"key": "backup",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Account VIQ Reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq/:reset",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq",
								":reset"
							],
							"variable": [
								{
									"key": "reset",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the default device password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"password\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq/default-device-password",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq",
								"default-device-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the default device password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "password",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq/default-device-password",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq",
								"default-device-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download VIQ data file and logs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq/download?reportName=string",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq",
								"download"
							],
							"query": [
								{
									"key": "reportName",
									"value": "string",
									"description": "The full report name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[LRO] Export VIQ data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"export_file_name\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq/export",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq",
								"export"
							],
							"query": [
								{
									"key": "timeoutInSeconds",
									"value": "1800",
									"description": "The maximum export duration\n\nDefault value : 1800",
									"disabled": true
								},
								{
									"key": "excludeDeviceFirmware",
									"value": "false",
									"description": "Whether exclude device firmwares from VIQ export file or not\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get running export/import status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"vhm_id\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq/export-import-status?viqOperationType=EXPORT",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq",
								"export-import-status"
							],
							"query": [
								{
									"key": "viqOperationType",
									"value": "EXPORT",
									"description": "Select the type of operation to get status\n\nAvailable values : EXPORT, IMPORT"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[LRO] Import VIQ data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"export_file_name\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "importFile",
									"description": "Select a file to import. Accepted formats are: .tar.gz and .tar",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq/import",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq",
								"import"
							],
							"query": [
								{
									"key": "timeoutInSeconds",
									"value": "1800",
									"description": "The maximum export duration\n\nDefault value : 1800",
									"disabled": true
								},
								{
									"key": "excludeDeviceFirmware",
									"value": "false",
									"description": "Whether exclude device firmwares from VIQ export file or not\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Backup History Restore",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/backup/history/:restore?backupFile=filename",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"backup",
								"history",
								":restore"
							],
							"query": [
								{
									"key": "backupFile",
									"value": "filename",
									"description": "The backup file that needs to be restored."
								}
							],
							"variable": [
								{
									"key": "restore",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Backup History Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful Delete request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/backup/history/delete?backupFile=filename",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"backup",
								"history",
								"delete"
							],
							"query": [
								{
									"key": "backupFile",
									"value": "filename",
									"description": "The backup file that needs to be restored."
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Backup History grid",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/backup/history/grid?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"backup",
								"history",
								"grid"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 10\n\nDefault value : 10"
								},
								{
									"key": "keyword",
									"value": null,
									"description": "The keyword to search - Display name",
									"disabled": true
								},
								{
									"key": "order",
									"value": "ASC",
									"description": "The sort order (descending by default) - on backup date\n\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the default device password in the account (with validation)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"string\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/backup/history/grid",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"backup",
								"history",
								"grid"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "list all users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login_name\": \"example1@company.com\",\n  \"display_name\": \"example1\",\n  \"idle_timeout\": 30,\n  \"user_role\": \"ADMINISTRATOR\",\n  \"location_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user info by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PATCH request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login_name\": \"newlogin1@company.com\",\n  \"display_name\": \"New Name1\",\n  \"idle_timeout\": \"30\",\n  \"user_role\": \"OBSERVER\",\n  \"location_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all external users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Grant user external access",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login_name\": \"example1@company.com\",\n  \"user_role\": \"ADMINISTRATOR\",\n  \"org_id\":0,\n  \"location_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the external user information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete external user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update external user information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PATCH request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_role\": \"OPERATOR\",\n  \"org_id\": 0,\n  \"location_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current User Info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users/me",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HIQ",
			"item": [
				{
					"name": "Get HIQ context",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"reading_org_ids\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set HIQ Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reading_org_ids\": [\n   1\n  ],\n  \"creating_org_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get organization for creating new data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/creating",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"creating"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Organization for creating new data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "1"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/creating",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"creating"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get organizations for reading data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/reading",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"reading"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set organizations for reading data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  123\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/reading",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"reading"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all organizations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include organisation info \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"color\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an  existing organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful Delete request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations/{{org_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations",
								"{{org_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "rename an  existing organization Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"test\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations/{{org_id}}/:rename",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations",
								"{{org_id}}",
								":rename"
							],
							"variable": [
								{
									"key": "rename",
									"value": ":rename"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HIQ Status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include HIQ info \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"enabled\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/status",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Location",
			"item": [
				{
					"name": "Create location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });",
									"",
									"var jsonData = JSON.parse(responseBody);   ",
									"pm.environment.set(\"loc_id\", jsonData[\"id\"]);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{loc_id}}\",\n  \"name\": \"Location Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Initialize orgination location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"organization\": \"string\",\n  \"country\": \"AFGHANISTAN_4\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/:init",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								":init"
							],
							"variable": [
								{
									"key": "init",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update location by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"95135\",\n  \"name\": \"NewLocationName\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/{{loc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"{{loc_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete location by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/{{loc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"{{loc_id}}"
							],
							"query": [
								{
									"key": "force_delete",
									"value": "false",
									"description": "Force deletion of this location and its descendants recursively",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List buildings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/building?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"building"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "name",
									"value": "",
									"description": "List buildings by name (case insensitive)",
									"disabled": true
								},
								{
									"key": "order",
									"value": "",
									"description": "The sort order by name (ascending by default)\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "ids",
									"value": null,
									"description": "array List buildings by IDs",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create building",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });",
									"",
									"",
									"var jsonData = JSON.parse(pm.response.text());  ",
									"pm.environment.set(\"building_id\", jsonData[\"id\"]);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{loc_id}}\",\n  \"name\": \"TheBuildingName\",\n  \"address\": {\n    \"address\": \"string\",\n    \"address2\": \"string\",\n    \"city\": \"string\",\n    \"state\": \"string\",\n    \"postal_code\": \"string\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/building",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"building"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Building by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/building/{{building_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"building",
								"{{building_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update building by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{loc_id}}\",\n  \"name\": \"NewBuildingName\",\n  \"address\": {\n    \"address\": \"string\",\n    \"address2\": \"string\",\n    \"city\": \"string\",\n    \"state\": \"string\",\n    \"postal_code\": \"string\"\n  }\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/building/{{building_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"building",
								"{{building_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete building by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/building/{{building_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"building",
								"{{building_id}}"
							],
							"query": [
								{
									"key": "force_delete",
									"value": "false",
									"description": "Force deletion of this building and its descendants recursively",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List floors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floor?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floor"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "name",
									"value": "",
									"description": "List floors by name. It's case insensitive.",
									"disabled": true
								},
								{
									"key": "order",
									"value": "",
									"description": "The sort order by name (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "ids",
									"value": null,
									"description": "array List floors by IDs",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create floor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });",
									"",
									"var jsonData = JSON.parse(pm.response.text());   ",
									"pm.environment.set(\"floor_id\", jsonData[\"id\"]);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{building_id}}\",\n  \"name\": \"TheFloorName\",\n  \"environment\": \"AUTO_ESTIMATE\",\n  \"db_attenuation\": \"15\",\n  \"measurement_unit\": \"FEET\",\n  \"installation_height\": \"12\",\n  \"map_size_width\": \"12\",\n  \"map_size_height\": \"12\",\n  \"map_name\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floor",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floor"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Floor by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floor/{{floor_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floor",
								"{{floor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update floor by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{building_id}}\",\n  \"name\": \"string\",\n  \"environment\": \"AUTO_ESTIMATE\",\n  \"db_attenuation\": \"15\",\n  \"measurement_unit\": \"FEET\",\n  \"installation_height\": \"12\",\n  \"map_size_width\": \"12\",\n  \"map_size_height\": \"12\",\n  \"map_name\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floor/{{floor_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floor",
								"{{floor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete floor by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floor/{{floor_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floor",
								"{{floor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload floorplan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 2500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(2500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "The floorplan image file to upload. For better performance, Extreme Networks recommends that the image file (.png .jpeg) be less than 10 MB",
									"type": "file",
									"src": "/Users/timsmith/Documents/FloorPlans/TestMainFloor.png"
								}
							]
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floorplan",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floorplan"
							]
						}
					},
					"response": []
				},
				{
					"name": "[LRO] Import one or more floors from an Ekahau archive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 2500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(2500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "multipart/form-data'"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "The Ekahau archive to import floors from.",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/import/ekahau?floorAssociations=[{\"floorName\":\"1st floor\",\"parentBuildingId\":1}]&outdoorSiteAssociations=[{\"floorName\":\"2nd floor\",\"parentSiteGroupId\":2,\"countryCode\":124}]",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"import",
								"ekahau"
							],
							"query": [
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode.\n\nDefault value : false",
									"disabled": true
								},
								{
									"key": "floorAssociations",
									"value": "[{\"floorName\":\"1st floor\",\"parentBuildingId\":1}]",
									"description": "Describes how Ekahau floors are imported into XIQ as floors in buildings.\narray[object]\n[{\"floorName\":\"1st floor\",\"parentBuildingId\":1}]"
								},
								{
									"key": "outdoorSiteAssociations",
									"value": "[{\"floorName\":\"2nd floor\",\"parentSiteGroupId\":2,\"countryCode\":124}]",
									"description": "Describes how Ekahau floors are Imported into XIQ as outdoor sites in site groups.\narray[object]\n[{\"floorName\":\"2nd floor\",\"parentSiteGroupId\":2,\"countryCode\":124}]"
								},
								{
									"key": "importCustomApConfigurations",
									"value": "true",
									"description": "Whether to also import or not the custom AP configurations such as: Hostname, TX Power & Channel.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List sites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/site?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"site"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "name",
									"value": "",
									"description": "List sites by name (case insensitive)",
									"disabled": true
								},
								{
									"key": "order",
									"value": "",
									"description": "The sort order by name (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "ids",
									"value": "",
									"description": "array List sites by IDs",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });",
									"",
									"",
									"var jsonData = JSON.parse(pm.response.text());  ",
									"pm.environment.set(\"site_id\", jsonData.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": {{loc_id}},\n  \"name\": \"Site Name\",\n  \"address\": {\n    \"address\": \"string\",\n    \"address2\": \"string\",\n    \"city\": \"string\",\n    \"state\": \"string\",\n    \"postal_code\": \"string\"\n  },\n  \"country_code\": 840\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/site",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"site"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a site by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/site/{{site_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"site",
								"{{site_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update site by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{loc_id}}\",\n  \"name\": \"NewSiteName\",\n  \"address\": {\n    \"address\": \"string\",\n    \"address2\": \"string\",\n    \"city\": \"string\",\n    \"state\": \"string\",\n    \"postal_code\": \"string\"\n  },\n  \"country_code\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/site/{{site_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"site",
								"{{site_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete site by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/site/{{site_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"site",
								"{{site_id}}"
							],
							"query": [
								{
									"key": "force_delete",
									"value": "false",
									"description": "Force deletion of this location and its descendants recursively",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get location tree",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/tree?expandChildren=true",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"tree"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{loc_id}}",
									"description": "The parent location ID, return root locations if parent is null",
									"disabled": true
								},
								{
									"key": "expandChildren",
									"value": "true",
									"description": "Whether to return the child locations recursively, default is true. Set it to false to improve performance when there are a lot of child locations.\nDefault value : true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get devices on the location hierachy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/tree/devices?page=1&limit=10&locationId={{loc_id}}&expandChildren=true",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"tree",
								"devices"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100"
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The location ID, or null for all locations."
								},
								{
									"key": "expandChildren",
									"value": "true",
									"description": "Whether to return the child locations recursively, default is true. Set it to false to improve performance when there are a lot of child locations"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get maps on the location hierachy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/tree/maps?page=1&limit=10&locationId={{loc_id}}&expandChildren=true",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"tree",
								"maps"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100"
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The location ID, or null for all locations."
								},
								{
									"key": "expandChildren",
									"value": "true",
									"description": "Whether to return the child locations recursively, default is true. Set it to false to improve performance when there are a lot of child locations"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Device",
			"item": [
				{
					"name": "List Devices [LRO]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hostname\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices?page=1&limit=50&views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "locationId",
									"value": "{{floor_id}}",
									"description": "Location id",
									"disabled": true
								},
								{
									"key": "connected",
									"value": "true",
									"description": "The device connect status",
									"disabled": true
								},
								{
									"key": "adminStates",
									"value": "MANAGED",
									"description": "The device admin states\n\nAvailable values : NEW, BOOTSTRAP, STAGED, MANAGED, UNMANAGED",
									"disabled": true
								},
								{
									"key": "macAddresses",
									"value": "",
									"description": "The device mac addresses",
									"disabled": true
								},
								{
									"key": "sns",
									"value": "",
									"description": "The device serial numbers",
									"disabled": true
								},
								{
									"key": "hostnames",
									"value": "",
									"description": "The device host names",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "SN",
									"description": "The sort field\n\nAvailable values : MAC, SN",
									"disabled": true
								},
								{
									"key": "order",
									"value": "ASC",
									"description": "The sort order (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "views",
									"value": "FULL",
									"description": "The views to return device fields (Check fields for each view at XiqDeviceView schema)\n\nAvailable values : BASIC, FULL, STATUS, LOCATION, CLIENT, DETAIL"
								},
								{
									"key": "fields",
									"value": "ID",
									"description": "The device fields to return.\n[All available fields]: ID, CREATE_TIME, UPDATE_TIME, ORG_ID, SERIAL_NUMBER, SERVICE_TAG, MAC_ADDRESS, DEVICE_FUNCTION, PRODUCT_TYPE, HOSTNAME, IP_ADDRESS, SOFTWARE_VERSION, DEVICE_ADMIN_STATE, CONNECTED, LAST_CONNECT_TIME, NETWORK_POLICY_NAME, NETWORK_POLICY_ID, NTP_SERVER_ADDRESS, DNS_SERVER_ADDRESS, SUBNET_MASK, DEFAULT_GATEWAY, IPV6_ADDRESS, IPV6_NETMASK, SIMULATED, DISPLAY_VERSION, ACTIVE_CLIENTS, LOCATION_ID, LOCATIONS, DESCRIPTION, COUNTRY_CODE, LLDP_CDP_INFO",
									"disabled": true
								},
								{
									"key": "deviceTypes",
									"value": "REAL",
									"description": "The device types to return\n\nAvailable values : REAL, DIGITAL_TWIN, SIMULATED\n\nDefault value : List [ \"REAL\" ]",
									"disabled": true
								},
								{
									"key": "locationIds",
									"value": "[{{floor_id}}]",
									"description": "array[integer]\nThe location IDs",
									"disabled": true
								},
								{
									"key": "nullField",
									"value": "LOCATION_ID",
									"description": "The device empty field, only returns the selected field that is null\n\nAvailable values : LOCATION_ID, NETWORK_POLICY_ID",
									"disabled": true
								},
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								},
								{
									"key": "configMismatch",
									"value": "true",
									"description": "Config audit status(MATCHED(false) or UNMATCHED(true))",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Advanced Onboard Devices [LRO]",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"success_devices\"|\"failure_devices\");",
									"    console.log(pm.test)",
									"});",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(5000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"extreme\": [\n    {\n      \"serial_number\": \"string\",\n      \"location\": {\n        \"location_id\": 0,\n        \"x\": 0,\n        \"y\": 0,\n        \"latitude\": 0,\n        \"longitude\": 0\n      },\n      \"network_policy_id\": 0,\n      \"hostname\": \"string\"\n    }\n  ],\n  \"exos\": [\n    {\n      \"serial_number\": \"string\",\n      \"location\": {\n        \"location_id\": 0,\n        \"x\": 0,\n        \"y\": 0,\n        \"latitude\": 0,\n        \"longitude\": 0\n      },\n      \"network_policy_id\": 0,\n      \"hostname\": \"string\"\n    }\n  ],\n  \"voss\": [\n    {\n      \"serial_number\": \"string\",\n      \"location\": {\n        \"location_id\": 0,\n        \"x\": 0,\n        \"y\": 0,\n        \"latitude\": 0,\n        \"longitude\": 0\n      },\n      \"network_policy_id\": 0,\n      \"hostname\": \"string\"\n    }\n  ],\n  \"wing\": [\n    {\n      \"serial_number\": \"string\",\n      \"mac_address\": \"string\",\n      \"location\": {\n        \"location_id\": 0,\n        \"x\": 0,\n        \"y\": 0,\n        \"latitude\": 0,\n        \"longitude\": 0\n      },\n      \"network_policy_id\": 0,\n      \"hostname\": \"string\"\n    }\n  ],\n  \"dell\": [\n    {\n      \"serial_number\": \"string\",\n      \"service_tag\": \"string\",\n      \"location\": {\n        \"location_id\": 0,\n        \"x\": 0,\n        \"y\": 0,\n        \"latitude\": 0,\n        \"longitude\": 0\n      },\n      \"network_policy_id\": 0,\n      \"hostname\": \"string\"\n    }\n  ],\n  \"dt\": [\n    {\n      \"digital_twin_device\": {\n        \"make\": \"SWITCH_ENGINE\",\n        \"model\": \"DT_5320_16P_4XE\",\n        \"os_type\": \"string\",\n        \"os_version\": \"string\",\n        \"vim_modules\": [\n          \"DT_5520_VIM_4X\"\n        ],\n        \"feat_licenses\": [\n          \"PRD_5000_PRMR\"\n        ]\n      },\n      \"location\": {\n        \"location_id\": 0,\n        \"x\": 0,\n        \"y\": 0,\n        \"latitude\": 0,\n        \"longitude\": 0\n      },\n      \"network_policy_id\": 0,\n      \"hostname\": \"string\"\n    }\n  ],\n  \"unmanaged\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:advanced-onboard",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":advanced-onboard"
							],
							"query": [
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "advanced-onboard",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check caller is allowed to access the device",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(5000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{{sn}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:check-ownership",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":check-ownership"
							],
							"variable": [
								{
									"key": "check-ownership",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send CLI to device [LRO]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"CLI_RESPONSE_CODE_SUCCEED\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      {{device_id}}\n    ]\n  },\n  \"clis\": [\n    \"string\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:cli",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":cli"
							],
							"query": [
								{
									"key": "async",
									"value": "true",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "cli",
									"value": ":cli"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{device_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:delete",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":delete"
							],
							"query": [
								{
									"key": "force_delete",
									"value": "false",
									"description": "Force deletion of devices\nDefault value : false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "delete",
									"value": ":delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Managed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{device_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:manage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":manage"
							],
							"variable": [
								{
									"key": "manage",
									"value": ":manage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Onboard Devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"extreme\": {\n    \"sns\": [\n      \"string\"\n    ]\n  },\n  \"exos\": {\n    \"sns\": [\n      \"string\"\n    ]\n  },\n  \"voss\": {\n    \"sns\": [\n      \"string\"\n    ]\n  },\n  \"wing\": {\n    \"sn_to_mac\": {\n      \"additionalProp1\": \"string\",\n      \"additionalProp2\": \"string\",\n      \"additionalProp3\": \"string\"\n    }\n  },\n  \"dell\": {\n    \"sn_to_st\": {\n      \"additionalProp1\": \"string\",\n      \"additionalProp2\": \"string\",\n      \"additionalProp3\": \"string\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:onboard",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":onboard"
							],
							"variable": [
								{
									"key": "onboard",
									"value": ":onboard"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reboot Devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{device_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:reboot",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":reboot"
							],
							"variable": [
								{
									"key": "reboot",
									"value": ":reboot"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Unmanaged",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[{{device_id}}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:unmanage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":unmanage"
							],
							"variable": [
								{
									"key": "unmanage",
									"value": ":unmanage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device details for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hostname\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}?views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}"
							],
							"query": [
								{
									"key": "views",
									"value": "FULL",
									"description": "The views to return device fields (Check fields for each view at XiqDeviceView schema)\n\nAvailable values : BASIC, FULL, STATUS, LOCATION, CLIENT, DETAIL"
								},
								{
									"key": "fields",
									"value": "ID",
									"description": "The device fields to return\n\nAvailable values : ID, CREATE_TIME, UPDATE_TIME, ORG_ID, SERIAL_NUMBER, SERVICE_TAG, MAC_ADDRESS, DEVICE_FUNCTION, PRODUCT_TYPE, HOSTNAME, IP_ADDRESS, SOFTWARE_VERSION, DEVICE_ADMIN_STATE, CONNECTED, LAST_CONNECT_TIME, NETWORK_POLICY_NAME, NETWORK_POLICY_ID, NTP_SERVER_ADDRESS, DNS_SERVER_ADDRESS, SUBNET_MASK, DEFAULT_GATEWAY, IPV6_ADDRESS, IPV6_NETMASK, SIMULATED, DISPLAY_VERSION, ACTIVE_CLIENTS, LOCATION_ID, LOCATIONS, DESCRIPTION, COUNTRY_CODE",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}"
							],
							"query": [
								{
									"key": "force_delete",
									"value": "false",
									"description": "Force deletion of device\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send CLI to one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"CLI_RESPONSE_CODE_SUCCEED\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"string\"]"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/:cli",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								":cli"
							],
							"variable": [
								{
									"key": "cli",
									"value": ":cli"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Managed for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/:manage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								":manage"
							],
							"variable": [
								{
									"key": "manage",
									"value": ":manage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reboot one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/:reboot",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								":reboot"
							],
							"variable": [
								{
									"key": "reboot",
									"value": ":reboot"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset one device [LRO]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/:reset",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								":reset"
							],
							"query": [
								{
									"key": "async",
									"value": "true",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "reset",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Unmanaged for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/:unmanage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								":unmanage"
							],
							"variable": [
								{
									"key": "unmanage",
									"value": ":unmanage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List alarms for device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"page\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"Dec 19, 2021 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 18, 2022 12:30:00\"); // Your timezone!",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/alarms?page=1&limit=10&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"alarms"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time for query alarm"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time for query alarm"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Bounce port of a device (EXOS, VOSS, and SR Switches)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_id\": {{device_id}},\n  \"port_number\": \"6\",\n  \"bounce_port_reason\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/bounce-port",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"bounce-port"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get client monitor setting for a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_monitor_profile_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/client-monitor",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"client-monitor"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign client monitor settings to a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_monitor_profile_id\": 0,\n  \"enable\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/client-monitor",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"client-monitor"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke client monitor setting for a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/client-monitor",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"client-monitor"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change description for a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 100ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "string"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/description",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"description"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get FTM settings by device ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/ftm-settings",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"ftm-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configure (create/update) device FTM settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"wgs84_override\": true,\n  \"wgs84\": {\n    \"latitude\": 0,\n    \"longitude\": 0,\n    \"altitude\": 0\n  },\n  \"zsubelement_override\": true,\n  \"zsubelement\": {\n    \"expected_to_move\": true,\n    \"floor_number\": 0,\n    \"above_floor\": {\n      \"height\": 0,\n      \"height_uncertainty\": 0\n    }\n  },\n  \"civic_address_override\": true,\n  \"civic_address\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/ftm-settings",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"ftm-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete FTM Settings by device ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/ftm-settings",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"ftm-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Download device gallery image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/gallery-image?imageName=string",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"gallery-image"
							],
							"query": [
								{
									"key": "imageName",
									"value": "string",
									"description": "The image name"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get GEO Location for a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/geolocation",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"geolocation"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device CPU/memory usage history",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"average_cpu\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 20, 2022 10:30:00\"); // Your timezone!",
									"var endTime = new Date(\"APril 20, 2022 12:30:00\"); // Your timezone!",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/history/cpu-mem?startTime={{myStartTime}}&endTime={{myEndTime}}&interval=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"history",
								"cpu-mem"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "interval",
									"value": "10",
									"description": "The aggregate interval in minutes, min= 10'\nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change hostname for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/hostname?hostname=string",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"hostname"
							],
							"query": [
								{
									"key": "hostname",
									"value": "string",
									"description": "The new hostname"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the device iBeacon setting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"enable_monitoring\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/ibeacon",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"ibeacon"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the device installation report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes onboarded \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"onboarded\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/installation-report",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"installation-report"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the device WiFi interfaces stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes frequency \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"frequency\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 9, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 9, 2023 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/interfaces/wifi?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"interfaces",
								"wifi"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time for collecting the wifi interface stats, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time for collecting the wifi interface stats, epoch time in milliseconds since 1/1/1970"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the device IOT Wireless Interface settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes frequency \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"frequency\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 9, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 9, 2023 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/iot",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"iot"
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable IoT Wireless Interface settings on device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes frequency \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"frequency\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 9, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 9, 2023 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/iot/:disable",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"iot",
								":disable"
							],
							"variable": [
								{
									"key": "disable",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable IoT Wireless Interface settings on device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes frequency \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"frequency\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 9, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 9, 2023 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/iot/:enable",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"iot",
								":enable"
							],
							"variable": [
								{
									"key": "enable",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get location for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"location_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/location",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign location to one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"location_id\":{{floor_id}},\n    \"x\":10,\n    \"y\":10,\n    \"latitude\":null,\n    \"longitude\":null\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/location",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke location for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/location",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Monitor refresh a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"test_key\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/monitor/:refresh",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"monitor",
								":refresh"
							],
							"query": [
								{
									"key": "function",
									"value": "ROUTE",
									"description": "Monitor refresh function\n\nAvailable values : ROUTE, MAC, UNRECOGNIZED\n\nDefault value : ROUTE",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "refresh",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Monitor refresh a device status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/monitor/refresh/status?taskKey=string",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"monitor",
								"refresh",
								"status"
							],
							"query": [
								{
									"key": "taskKey",
									"value": "string",
									"description": "Monitor refresh task key"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get network policy for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/network-policy",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"network-policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign network policy to one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/network-policy?networkPolicyId={{np_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"network-policy"
							],
							"query": [
								{
									"key": "networkPolicyId",
									"value": "{{np_id}}",
									"description": "The network policy ID to assign"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke network policy for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/network-policy",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"network-policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the Device radio operating mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"radio_operating_mode\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/radio-operating-mode",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"radio-operating-mode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configure Radio Operating mode for a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"radio_operating_mode\": \"GENERIC\",\n  \"wireless_interfaces\": [\n    {\n      \"name\": \"WIFI0\",\n      \"radio_profile_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/radio-operating-mode",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"radio-operating-mode"
							]
						}
					},
					"response": []
				},
				{
					"name": "Override SSID For a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ssid_id\": 0,\n  \"ssid\": \"string\",\n  \"passphrase\": \"string\"\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/ssid/:override",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"ssid",
								":override"
							],
							"variable": [
								{
									"key": "override",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SSID status for a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/ssid/status",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"ssid",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable or Disable SSID for a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ssid_ids\": [\n    {{ssid_id}}\n  ],\n  \"if_names\": [\n    \"WIFI0\"\n  ],\n  \"enabled\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/ssid/status/:change",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"ssid",
								"status",
								":change"
							],
							"variable": [
								{
									"key": "change",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Start Thread Commissioner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_id\": 0,\n  \"comm_timeout\": 2000000,\n  \"interface_name\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/thread/commissioner/:start",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"thread",
								"commissioner",
								":start"
							],
							"variable": [
								{
									"key": "start",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop Thread Commissioner",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_id\": 0,\n  \"interface_name\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/thread/commissioner/:stop",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"thread",
								"commissioner",
								":stop"
							],
							"variable": [
								{
									"key": "stop",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the visible status of a device in a floor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_id\": 0,\n  \"interface_name\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{device_id}}/visible?visible=true",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{device_id}}",
								"visible"
							],
							"query": [
								{
									"key": "visible",
									"value": "true",
									"description": "The new visible status of a device in a floor"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign client monitor setting to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      0\n    ]\n  },\n  \"client_monitor\": {\n    \"client_monitor_profile_id\": 0,\n    \"enable\": true\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/client-monitor/:assign",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"client-monitor",
								":assign"
							],
							"variable": [
								{
									"key": "assign",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke client monitor setting for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/client-monitor/:revoke",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"client-monitor",
								":revoke"
							],
							"variable": [
								{
									"key": "revoke",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query client monitor setting for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/client-monitor/:query",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"client-monitor",
								":query"
							],
							"variable": [
								{
									"key": "query",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign a country code to devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      {{device_id}}\n    ]\n  },\n  \"country_code\": \"AFGHANISTAN_4\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/country-code/:assign",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"country-code",
								":assign"
							],
							"variable": [
								{
									"key": "assign",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Digital Twin Product information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"page\");",
									"    console.log(pm.test)",
									"    ",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/digital-twin?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"digital-twin"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "makes",
									"value": "",
									"description": "List by makes or any with null/empty makes.\n\nAvailable values : SWITCH_ENGINE, FABRIC_ENGINE",
									"disabled": true
								},
								{
									"key": "models",
									"value": "",
									"description": "List by makes or any with null/empty models.\n\nAvailable values : DT_5320_16P_4XE, DT_5320_16P_4XE_DC, DT_5320_24P_8XE, DT_5320_24T_8XE, DT_5320_48P_8XE, DT_5320_48T_8XE, DT_5420F_16MW_32P_4XE, DT_5420F_16W_32P_4XE, DT_5420F_24P_4XE, DT_5420F_24S_4XE, DT_5420F_24T_4XE, DT_5420F_48P_4XE, DT_5420F_48P_4XL, DT_5420F_48T_4XE, DT_5420F_8W_16P_4XE, DT_5420M_16MW_32P_4YE, DT_5420M_24T_4YE, DT_5420M_24W_4YE, DT_5420M_48T_4YE, DT_5420M_48W_4YE, DT_5520_12MW_36W, DT_5520_24T, DT_5520_24W, DT_5520_24X, DT_5520_48SE, DT_5520_48T, DT_5520_48W, DT_5720_24MW, DT_5720_24MXW, DT_5720_48MW, DT_5720_48MXW, DT_7520_48XT_6C, DT_7520_48Y_8C, DT_7720_32C",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change iBeacon settings for devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_ids\": [\n    0\n  ],\n  \"enabled\": true,\n  \"major\": 65535,\n  \"minor\": 65535,\n  \"power\": 127,\n  \"enable_monitoring\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/ibeacon",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"ibeacon"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign location to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      0\n    ]\n  },\n  \"device_location\": {\n    \"location_id\": 0,\n    \"x\": 0,\n    \"y\": 0,\n    \"latitude\": 0,\n    \"longitude\": 0\n  }\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/location/:assign",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"location",
								":assign"
							],
							"variable": [
								{
									"key": "assign",
									"value": ":assign"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query location to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"location_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[0]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/location/:query",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"location",
								":query"
							],
							"variable": [
								{
									"key": "query",
									"value": ":query"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke location for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[0]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/location/:revoke",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"location",
								":revoke"
							],
							"variable": [
								{
									"key": "revoke",
									"value": ":revoke"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign network policy to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"devices\":{\"ids\":[{{device_id}}]},\"network_policy_id\":{{np_id}}}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/:assign",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								":assign"
							],
							"variable": [
								{
									"key": "assign",
									"value": ":assign"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query network policy for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[{{device_id}}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/:query",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								":query"
							],
							"variable": [
								{
									"key": "query",
									"value": ":query"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke network policy for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[{{device_id}}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/:revoke",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								":revoke"
							],
							"variable": [
								{
									"key": "revoke",
									"value": ":revoke"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List assigned devices for network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/{{np_id}}?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								"{{np_id}}"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change device OS mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_ids\": [\n    {{device_id}}\n  ],\n  \"target_os\": \"WiNG\"\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/os/:change",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"os",
								":change"
							],
							"variable": [
								{
									"key": "change",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Devices Radio Information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/radio-information?page=1&limit=10&deviceIds={{device_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"radio-information"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 50 \nDefault value : 10"
								},
								{
									"key": "includeDisabledRadio",
									"value": "false",
									"description": "Include Disabled Radios",
									"disabled": true
								},
								{
									"key": "deviceIds",
									"value": "{{device_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign RADIUS proxy to devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/radius-proxy/:assign?ids={{device_id}}&radiusProxyId={{radius_proxy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"radius-proxy",
								":assign"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{device_id}}",
									"description": "The device IDs"
								},
								{
									"key": "radiusProxyId",
									"value": "{{radius_proxy_id}}",
									"description": "The RADIUS proxy ID to assign"
								}
							],
							"variable": [
								{
									"key": "assign",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke RADIUS proxy from multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/radius-proxy/:revoke?ids={{device_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"radius-proxy",
								":revoke"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{device_id}}",
									"description": "The device IDs"
								}
							],
							"variable": [
								{
									"key": "revoke",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Connection Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_devices\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/rm-devices-connection-status",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"rm-devices-connection-status"
							],
							"query": [
								{
									"key": "deviceCategory",
									"value": "WIRELESS",
									"description": "The device category - wired, wireless\n\nAvailable values : WIRED, WIRELESS",
									"disabled": true
								},
								{
									"key": "deviceTypes",
									"value": "REAL",
									"description": "The device types to return\n\nAvailable values : REAL, DIGITAL_TWIN, SIMULATED",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device List metadata",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"product_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/rm-devices-metadata",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"rm-devices-metadata"
							],
							"query": [
								{
									"key": "deviceCategory",
									"value": "WIRELESS",
									"description": "The device category - wired, wireless\n\nAvailable values : WIRED, WIRELESS",
									"disabled": true
								},
								{
									"key": "adminStates",
									"value": "NEW",
									"description": "The device admin states to filter\n\nAvailable values : NEW, BOOTSTRAP, STAGED, MANAGED, UNMANAGED",
									"disabled": true
								},
								{
									"key": "deviceTypes",
									"value": "REAL",
									"description": "The device types to return\n\nAvailable values : REAL, DIGITAL_TWIN, SIMULATED",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "RM Device Page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ],\n  \"sns\": [\n    \"string\"\n  ],\n  \"mac_addresses\": [\n    \"string\"\n  ],\n  \"hostnames\": [\n    \"string\"\n  ],\n  \"default_gateway_ips\": [\n    \"string\"\n  ],\n  \"product_types\": [\n    \"string\"\n  ],\n  \"firmware_versions\": [\n    \"string\"\n  ],\n  \"country_codes\": [\n    0\n  ],\n  \"managed_by\": [\n    \"string\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/rm-devices-page?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"rm-devices-page"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "keyword",
									"value": null,
									"description": "The keyword to search",
									"disabled": true
								},
								{
									"key": "connected",
									"value": "true",
									"description": "The device connect status",
									"disabled": true
								},
								{
									"key": "adminStates",
									"value": "NEW",
									"description": "The device admin states to filter\n\nAvailable values : NEW, BOOTSTRAP, STAGED, MANAGED, UNMANAGED",
									"disabled": true
								},
								{
									"key": "deviceCategory",
									"value": "WIRELESS",
									"description": "The device category - wired, wireless\n\nAvailable values : WIRED, WIRELESS",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "HOSTNAME",
									"description": "The sort field\n\nAvailable values : HOSTNAME, MAC, SN, CONNECTION_STATUS",
									"disabled": true
								},
								{
									"key": "order",
									"value": "ASC",
									"description": "The sort order (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "deviceTypes",
									"value": "REAL",
									"description": "The device types to return\n\nAvailable values : REAL, DIGITAL_TWIN, SIMULATED",
									"disabled": true
								},
								{
									"key": "configMismatch",
									"value": "True",
									"description": "Config audit status(MATCHED(false) or UNMATCHED(true))",
									"disabled": true
								},
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Export RM devices data to CSV",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ],\n  \"sns\": [\n    \"string\"\n  ],\n  \"mac_addresses\": [\n    \"string\"\n  ],\n  \"hostnames\": [\n    \"string\"\n  ],\n  \"default_gateway_ips\": [\n    \"string\"\n  ],\n  \"product_types\": [\n    \"string\"\n  ],\n  \"firmware_versions\": [\n    \"string\"\n  ],\n  \"country_codes\": [\n    0\n  ],\n  \"managed_by\": [\n    \"string\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/rm-devices-page/export",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"rm-devices-page",
								"export"
							],
							"query": [
								{
									"key": "keyword",
									"value": "",
									"description": "The keyword to search",
									"disabled": true
								},
								{
									"key": "connected",
									"value": "true",
									"description": "The device connect status",
									"disabled": true
								},
								{
									"key": "adminStates",
									"value": "NEW",
									"description": "The device admin states to filter\n\nAvailable values : NEW, BOOTSTRAP, STAGED, MANAGED, UNMANAGED",
									"disabled": true
								},
								{
									"key": "deviceCategory",
									"value": "WIRELESS",
									"description": "The device category - wired, wireless\n\nAvailable values : WIRED, WIRELESS",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "HOSTNAME",
									"description": "The sort field\n\nAvailable values : HOSTNAME, MAC, SN, CONNECTION_STATUS",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "deviceTypes",
									"value": "REAL",
									"description": "The device types to return\n\nAvailable values : REAL, DIGITAL_TWIN, SIMULATED",
									"disabled": true
								},
								{
									"key": "configMismatch",
									"value": "True",
									"description": "Config audit status(MATCHED(false) or UNMATCHED(true))",
									"disabled": true
								},
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Stack Member info for a given stack id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/rm-devices-stack/{{stack_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"rm-devices-stack",
								"{{stack_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List device stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/stats",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"stats"
							],
							"query": [
								{
									"key": "locationID",
									"value": "{{floor_id}}",
									"description": "The Location ID",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Network Policy",
			"item": [
				{
					"name": "List Network Policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "policyNames",
									"value": "Policy Name",
									"description": "The list of full network policy names to filter the query",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "string",
									"description": "The keyword to partial search by network policy name",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "ID",
									"description": "The network policy fields to return\n\nAvailable values : ID, CREATE_TIME, UPDATE_TIME, ORG_ID, NAME, DESCRIPTION, TYPE, PREDEFINED",
									"disabled": true
								},
								{
									"key": "view",
									"value": "FULL",
									"description": "The views to return network policy fields (Check fields for each view at XiqNetworkPolicyView schema)\n\nAvailable values : BASIC, FULL",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"type\": \"NETWORK_ACCESS_AND_SWITCHING\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"type\": \"NETWORK_ACCESS_AND_SWITCHING\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List SSIDs for a Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}/ssids?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}",
								"ssids"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add SSIDs to a Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {{ssid_id}}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}/ssids/:add",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}",
								"ssids",
								":add"
							],
							"variable": [
								{
									"key": "add",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Removes SSIDs from a Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {{ssid_id}}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}/ssids/:remove",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}",
								"ssids",
								":remove"
							],
							"variable": [
								{
									"key": "remove",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Client",
			"item": [
				{
					"name": "Get Client info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/{{client_id}}?views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"{{client_id}}"
							],
							"query": [
								{
									"key": "views",
									"value": "FULL",
									"description": "The views to return client fields (Check fields for each view at XiqClientView schema)\n\nAvailable values : BASIC, FULL, STATUS, DETAIL, LOCATION, METRICS, IOT"
								},
								{
									"key": "fields",
									"value": "ID",
									"description": "The client fields to return\n\nAvailable values : ID, CREATE_TIME, UPDATE_TIME, ORG_ID, ORG_NAME, LOCATION_ID, LOCATIONS, HOSTNAME, MAC_ADDRESS, IP_ADDRESS, IPV6_ADDRESS, OS_TYPE, DEVICE_ID, DEVICE_FUNCTION, DEVICE_NAME, USERNAME, USER_PROFILE_NAME, CONNECTED, ONLINE_TIME, OFFLINE_TIME, VLAN, CONNECTION_TYPE, SSID, PORT, BSSID, PORT_TYPE_NAME, INTERFACE_NAME, AUTH, ENCRYPTION_METHOD, CHANNEL, CLIENT_HEALTH, APPLICATION_HEALTH, NETWORK_HEALTH, RADIO_HEALTH, HEALTH_UPDATE_TIME, RSSI, RSSI_UPDATE_TIME, SNR, SNR_UPDATE_TIME, RADIO_TYPE, WING_AP, VENDOR, MOBILITY, CATEGORY, DESCRIPTION, DEVICE_MAC_ADDRESS, ALIAS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Active Clients",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/active?page=1&limit=10&views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"active"
							],
							"query": [
								{
									"key": "locationIds",
									"value": "{{floor_id}}",
									"description": "The Location IDs",
									"disabled": true
								},
								{
									"key": "deviceIds",
									"value": "{{device_id}}",
									"description": "the Device IDs",
									"disabled": true
								},
								{
									"key": "vlans",
									"value": "200",
									"description": "The associate vlan IDs",
									"disabled": true
								},
								{
									"key": "userProfileNames",
									"value": "Profile Name",
									"description": "The user profile names",
									"disabled": true
								},
								{
									"key": "ssids",
									"value": "SSID Name",
									"description": "The SSIDs",
									"disabled": true
								},
								{
									"key": "clientOsNames",
									"value": "",
									"description": "The client os names",
									"disabled": true
								},
								{
									"key": "clientConnectionTypes",
									"value": "WIRELESS",
									"description": "The client connection types: 1 - WIRELESS, 2 - WIRED, -1 - UNDETERMINED",
									"disabled": true
								},
								{
									"key": "clientHealthStatus",
									"value": "POOR",
									"description": "The client health status: 1 - HEALTHY, 2 - POOR",
									"disabled": true
								},
								{
									"key": "excludeLocallyManaged",
									"value": "false",
									"description": "Default value : false\nReturn Cloud managed Devices' clients",
									"disabled": true
								},
								{
									"key": "usernames",
									"value": "",
									"description": "The user names - Array",
									"disabled": true
								},
								{
									"key": "searchString",
									"value": "",
									"description": "The search string",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "sortField",
									"value": "",
									"description": "Available values : AUTH_METHOD, CHANNEL, CONNECTED_VIA, CONNECTION_TYPE, DEVICE_NAME, HOST_NAME, IPV4, IPV6, MAC, NAC_DETAILS, NAC_PROFILE, OS_TYPE, REPORTED_BY, START_TIME, USER_NAME, USER_PROFILE, VLAN",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "Sort order (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "views",
									"value": "FULL",
									"description": "The views to return client fields (Check fields for each view at XiqClientView schema)\n\nAvailable values : BASIC, FULL, STATUS, DETAIL, LOCATION, METRICS, IOT"
								},
								{
									"key": "fields",
									"value": "id",
									"description": "The client fields to return\n\nAvailable values : ID, CREATE_TIME, UPDATE_TIME, ORG_ID, ORG_NAME, LOCATION_ID, LOCATIONS, HOSTNAME, MAC_ADDRESS, IP_ADDRESS, IPV6_ADDRESS, OS_TYPE, DEVICE_ID, DEVICE_FUNCTION, DEVICE_NAME, USERNAME, USER_PROFILE_NAME, CONNECTED, ONLINE_TIME, OFFLINE_TIME, VLAN, CONNECTION_TYPE, SSID, PORT, BSSID, PORT_TYPE_NAME, INTERFACE_NAME, AUTH, ENCRYPTION_METHOD, CHANNEL, CLIENT_HEALTH, APPLICATION_HEALTH, NETWORK_HEALTH, RADIO_HEALTH, HEALTH_UPDATE_TIME, RSSI, RSSI_UPDATE_TIME, SNR, SNR_UPDATE_TIME, RADIO_TYPE, WING_AP, VENDOR, MOBILITY, CATEGORY, DESCRIPTION, DEVICE_MAC_ADDRESS, ALIAS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active Clients count",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/active/count",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"active",
								"count"
							],
							"query": [
								{
									"key": "locationIds",
									"value": "{{floor_id}}",
									"description": "The Location IDs",
									"disabled": true
								},
								{
									"key": "deviceIds",
									"value": "{{device_id}}",
									"description": "the Device IDs",
									"disabled": true
								},
								{
									"key": "vlans",
									"value": "200",
									"description": "The associate vlan IDs",
									"disabled": true
								},
								{
									"key": "userProfileNames",
									"value": "Profile Name",
									"description": "The user profile names",
									"disabled": true
								},
								{
									"key": "ssids",
									"value": "SSID Name",
									"description": "The SSIDs",
									"disabled": true
								},
								{
									"key": "clientOsNames",
									"value": "",
									"description": "The client os names",
									"disabled": true
								},
								{
									"key": "clientConnectionTypes",
									"value": "WIRELESS",
									"description": "The client connection types: 1 - WIRELESS, 2 - WIRED, -1 - UNDETERMINED",
									"disabled": true
								},
								{
									"key": "clientHealthStatus",
									"value": "POOR",
									"description": "The client health status: 1 - HEALTHY, 2 - POOR",
									"disabled": true
								},
								{
									"key": "excludeLocallyManaged",
									"value": "false",
									"description": "Default value : false\nReturn Cloud managed Devices' clients count",
									"disabled": true
								},
								{
									"key": "searchString",
									"value": "",
									"description": "The search string",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Set the aliases for multiple clients",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"mac_address\": \"stringstring\",\n    \"alias\": \"string\"\n  }\n]"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/alias",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"alias"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get client info by MAC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/byMac/{{client_mac}}?views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"byMac",
								"{{client_mac}}"
							],
							"query": [
								{
									"key": "views",
									"value": "FULL",
									"description": "The views to return client fields (Check fields for each view at XiqClientView schema)\n\nAvailable values : BASIC, FULL, STATUS, DETAIL, LOCATION, METRICS, IOT"
								},
								{
									"key": "fields",
									"value": null,
									"description": "The client fields to return\n\nAvailable values : ID, CREATE_TIME, UPDATE_TIME, ORG_ID, ORG_NAME, LOCATION_ID, LOCATIONS, HOSTNAME, MAC_ADDRESS, IP_ADDRESS, IPV6_ADDRESS, OS_TYPE, DEVICE_ID, DEVICE_FUNCTION, DEVICE_NAME, USERNAME, USER_PROFILE_NAME, CONNECTED, ONLINE_TIME, OFFLINE_TIME, VLAN, CONNECTION_TYPE, SSID, PORT, BSSID, PORT_TYPE_NAME, INTERFACE_NAME, AUTH, ENCRYPTION_METHOD, CHANNEL, CLIENT_HEALTH, APPLICATION_HEALTH, NETWORK_HEALTH, RADIO_HEALTH, RSSI, SNR, RADIO_TYPE, WING_AP, VENDOR, MOBILITY, CATEGORY, DESCRIPTION, DEVICE_MAC_ADDRESS, ALIAS, PRODUCT_TYPE",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Disconnect the client by MAC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/byMac/{{client_mac}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"byMac",
								"{{client_mac}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get client summary metrics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"connected_wireless_client_count\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/summary",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"summary"
							],
							"query": [
								{
									"key": "locationIds",
									"value": "{{floor_id}}",
									"description": "The Location IDs",
									"disabled": true
								},
								{
									"key": "deviceIds",
									"value": "{{device_id}}",
									"description": "The Device IDs",
									"disabled": true
								},
								{
									"key": "vlans",
									"value": "92",
									"description": "The associate vlan IDs",
									"disabled": true
								},
								{
									"key": "userProfileNames",
									"value": "Profile Name",
									"description": "The user profile names",
									"disabled": true
								},
								{
									"key": "ssids",
									"value": "SSID Name",
									"description": "The SSIDs",
									"disabled": true
								},
								{
									"key": "clientOsNames",
									"value": "",
									"description": "The client os names",
									"disabled": true
								},
								{
									"key": "clientHealthStatus",
									"value": "POOR",
									"description": "The client health status: 1 - HEALTHY, 2 - POOR",
									"disabled": true
								},
								{
									"key": "excludeLocallyManaged",
									"value": "false",
									"description": "Default value : false\nReturn Cloud managed Devices' clients count",
									"disabled": true
								},
								{
									"key": "searchString",
									"value": "",
									"description": "The search string",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get usage per client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2024 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 19, 2024 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 2000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(2000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/usage?clientIds={{client_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"usage"
							],
							"query": [
								{
									"key": "clientIds",
									"value": "{{client_id}}",
									"description": "The Client IDs"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Client - Details",
			"item": [
				{
					"name": "Get Client chart data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/client-details/overview/chart-data/{{client_id}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"client-details",
								"overview",
								"chart-data",
								"{{client_id}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "precision",
									"value": "600000",
									"description": "The precision in milliseconds since 1/1/1970\n\nDefault value : 600000",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Client Details Info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"device_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/client-details/overview/info/{{client_id}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"client-details",
								"overview",
								"info",
								"{{client_id}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "precision",
									"value": "600000",
									"description": "The precision in milliseconds since 1/1/1970\n\nDefault value : 600000",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "D360",
			"item": [
				{
					"name": "List a list of connected clients for Device 360 API",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/client/graph?deviceId={{device_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}&filter=ALL_CLIENTS",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"client",
								"graph"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "filter",
									"value": "ALL_CLIENTS",
									"description": "The filter type\n\nAvailable values : CONNECTED_CLIENTS, UNIQUE_CLIENTS, POOR_HEALTH_CLIENTS, ALL_CLIENTS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Client Grid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number_filter\": [\n    {\n      \"column_name\": \"string\",\n      \"filter_type\": \"GT\",\n      \"value\": 0,\n      \"min\": 0,\n      \"max\": 0\n    }\n  ],\n  \"alias\": [\n    \"string\"\n  ],\n  \"auth_methods\": [\n    \"string\"\n  ],\n  \"encryption_methods\": [\n    \"string\"\n  ],\n  \"operating_systems\": [\n    \"string\"\n  ],\n  \"ssids\": [\n    \"string\"\n  ],\n  \"user_profiles\": [\n    \"string\"\n  ],\n  \"frequency\": [\n    \"string\"\n  ],\n  \"category_assignments\": [\n    \"string\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/client/grid?page=1&limit=10&deviceId={{device_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"client",
								"grid"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1\n\n"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "keyword",
									"value": null,
									"description": "The search string",
									"disabled": true
								},
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "clientStatus",
									"value": "TOTAL",
									"description": "Available values : TOTAL, POOR_HEALTH, UNIQUE",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": null,
									"description": "Available values : CONNECTION_STATUS, CLIENT_HOSTNAME, SNR, RSSI, CHANNEL_UTILIZATION_SCORE, ASSOCIATION_ISSUE, AUTHENTICATION_ISSUE, IP_ADDRESS_ISSUE, ROAMING_ISSUE, IPV4, CONNECTED_DEVICE_MAC, SSID, VLAN, LAST_SESSION_START_TIME, OPERATING_SYSTEM, CLIENT_MAC, USERNAME, AUTHENTICATION, USER_NAME, ALIAS, IPV6",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "Available values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "connectionStatus",
									"value": "CONNECTED",
									"description": "Available values : CONNECTED, DISCONNECTED",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Client Grid Filter Metadata",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/client/grid/metadata?deviceId={{device_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"client",
								"grid",
								"metadata"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Client Stats Information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_clients\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/client/stats?deviceId={{device_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"client",
								"stats"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "selectedType",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Wifi interfaces per Device Information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"wifi_interface_type_list\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/device/interfaces?deviceModel=AP_5010",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"device",
								"interfaces"
							],
							"query": [
								{
									"key": "deviceModel",
									"value": "AP_5010",
									"description": "The Enum for device model\n\nAvailable values : AP_650, AP_650X, AP_4000, AP_4000U, AP_302W, AP_510C, AP_510CX, AP_410C, AP_460C, AP_305C, AP_305CX, AP_460S6C, AP_460S12C, AP_5010, AP_5010U, AP_5050U, AP_5050D, AP_3000, AP_3000X, AP_5020"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Issues",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"authentication_failures\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/device/issues?deviceId={{device_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"device",
								"issues"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Metadata",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"xiq_device_data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/device/metadata?deviceId={{device_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"device",
								"metadata"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device Stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"device_hostname\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/device/stats?deviceId={{device_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"device",
								"stats"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List summary of device details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"connected_status\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/overview/devices-summary?deviceId={{device_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"overview",
								"devices-summary"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SSID Metadata",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"ssids\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/ssid-metadata?deviceId={{device_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"ssid-metadata"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Wireless Interface Graph",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/wireless/interfaces-graph?deviceId={{device_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}&channel=WIFI0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"wireless",
								"interfaces-graph"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "channel",
									"value": "WIFI0",
									"description": "The channel utilization type\n\nAvailable values : WIFI0, WIFI1, WIFI2"
								},
								{
									"key": "source",
									"value": "CHANNEL_UTILIZATION",
									"description": "The source type as channel utilization or connected clients (By default both are shown)\n\nAvailable values : CHANNEL_UTILIZATION, CONNECTED_CLIENTS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Wifi Information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"wifi0\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/wireless/interfaces-stats?deviceId={{device_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"wireless",
								"interfaces-stats"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "seletecTime",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a list of SurroundingAps",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"March 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"March 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"number_filters\": [\n    {\n      \"column_name\": \"string\",\n      \"filter_type\": \"GT\",\n      \"value\": 0,\n      \"min\": 0,\n      \"max\": 0\n    }\n  ],\n  \"ssids\": [\n    \"string\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/d360/wireless/surrounding-aps?page=1&limit=10&deviceId={{device_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"d360",
								"wireless",
								"surrounding-aps"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1\n\n"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "seletecTime",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboard",
			"item": [
				{
					"name": "Alert statistics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"critical\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/alerts",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"alerts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Asset statistics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_devices\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/assets",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"assets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Client Health statistics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_clients\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/clients",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"clients"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all diagnostics device types",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/device-types",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"device-types"
							]
						}
					},
					"response": []
				},
				{
					"name": "Device Health statistics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_devices\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/devices",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"devices"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export all dashboard data to CSV",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/export",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"export"
							],
							"query": [
								{
									"key": "sortField",
									"value": "Alerts",
									"description": "Sort Field\n\nAvailable values : ALERTS, STATUS, DEVICE_HEALTH, CLIENT_HEALTH, USAGE_CAPACITY, SITE_NAME",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "Sort Order\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": null,
									"description": "The Site Name Filter",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Sites with issues",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/sites-with-issues?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"sites-with-issues"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "sortField",
									"value": "Alerts",
									"description": "Sort Field\n\nAvailable values : ALERTS, STATUS, DEVICE_HEALTH, CLIENT_HEALTH, USAGE_CAPACITY, SITE_NAME",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "Sort Order\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "",
									"description": "The Site Name Filter",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Usage and capacity statistics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_usage_and_capacity_issues\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/usage-capacity",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"usage-capacity"
							]
						}
					},
					"response": []
				},
				{
					"name": "Criteria for Wireless Diagnostic Dashboard",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_health_criteria_param\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/dashboard/criteria",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"dashboard",
								"criteria"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Criteria for Wireless Diagnostic Dashboard",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_health_criteria_param\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_health_criteria\": {\n    \"cpu_utilization\": 0,\n    \"memory_utilization\": 0,\n    \"poe\": 0,\n    \"wired_port_multicast\": 0,\n    \"wired_port_broadcast\": 0\n  },\n  \"client_health_criteria\": {\n    \"assoc_param_slow\": 0,\n    \"assoc_unit_slow\": \"string\",\n    \"auth_param_slow\": 0,\n    \"auth_unit_slow\": \"string\",\n    \"dhcp_param_slow\": 0,\n    \"dhcp_unit_slow\": \"string\",\n    \"roams_param_slow\": 0,\n    \"roams_unit_slow\": \"string\",\n    \"rssi_param\": 0,\n    \"rssi_unit\": \"string\",\n    \"snr_param\": 0,\n    \"snr_unit\": \"string\",\n    \"onboard_param\": 0,\n    \"onboard_unit\": \"string\"\n  },\n  \"usage_capacity_criteria\": {\n    \"channel_utilization\": 0,\n    \"lnk_err\": 0,\n    \"retries\": 0,\n    \"pkt_loss\": 0,\n    \"interference\": 0,\n    \"noise\": 0,\n    \"noise_unit\": \"string\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/dashboard/criteria",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"dashboard",
								"criteria"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboard Wireless Usage and Capacity",
			"item": [
				{
					"name": "Count of APs with excessive packet loss",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"excessive_packet_loss_ap_count\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/usage-capacity/excessive-packet-loss",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"usage-capacity",
								"excessive-packet-loss"
							]
						}
					},
					"response": []
				},
				{
					"name": "Count of APs with excessive retries",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"excessive_retires_ap_count\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/usage-capacity/excessive-retries",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"usage-capacity",
								"excessive-retries"
							]
						}
					},
					"response": []
				},
				{
					"name": "Count of APs with excessive utilization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_ap_count\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/usage-capacity/excessive-utilization",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"usage-capacity",
								"excessive-utilization"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export all Wireless Usage Capacity Data to CSV",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ],\n  \"device_ids\": [\n    {{device_id}}\n  ],\n  \"building_ids\": [\n    {{building_id}}\n  ],\n  \"buildings\": [\n    \"string\"\n  ],\n  \"floors\": [\n    \"string\"\n  ],\n  \"has_usage_capacity_issues\": true,\n  \"number_filters\": [\n    {\n      \"column_name\": \"string\",\n      \"filter_type\": \"GT\",\n      \"value\": 0,\n      \"min\": 0,\n      \"max\": 0\n    }\n  ],\n  \"has_packet_loss_issues\": true,\n  \"has_retries_issues\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/usage-capacity/export",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"usage-capacity",
								"export"
							],
							"query": [
								{
									"key": "keyword",
									"value": null,
									"description": "The keyword to search - site name, device hostname, device MAC",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": null,
									"description": "The sort field\n\nAvailable values : HOSTNAME, SITE, RADIO_2DOT4G_UTILIZATION_SCORE, RADIO_5G_UTILIZATION_SCORE, RADIO_6G_UTILIZATION_SCORE, WIFI0_RETRY_SCORE, WIFI1_RETRY_SCORE, WIFI2_RETRY_SCORE, WIFI0_PACKET_LOSS, WIFI1_PACKET_LOSS, WIFI2_PACKET_LOSS, ETH0_UNICAST_SCORE, ETH0_BROADCAST_SCORE, ETH0_MULTICAST_SCORE, ETH1_UNICAST_SCORE, ETH1_BROADCAST_SCORE, ETH1_MULTICAST_SCORE, WIFI0_INTERFERENCE_SCORE, WIFI1_INTERFERENCE_SCORE, WIFI2_INTERFERENCE_SCORE, WIFI0_NOISE, WIFI1_NOISE, WIFI2_NOISE, TOTAL_ETH0_SCORE, TOTAL_ETH1_SCORE",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (descending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Wireless usage and capacity grid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ],\n  \"device_ids\": [\n    {{device_id}}\n  ],\n  \"building_ids\": [\n    {{building_id}}\n  ],\n  \"buildings\": [\n    \"string\"\n  ],\n  \"floors\": [\n    \"string\"\n  ],\n  \"has_usage_capacity_issues\": true,\n  \"number_filters\": [\n    {\n      \"column_name\": \"string\",\n      \"filter_type\": \"GT\",\n      \"value\": 0,\n      \"min\": 0,\n      \"max\": 0\n    }\n  ],\n  \"has_packet_loss_issues\": true,\n  \"has_retries_issues\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/usage-capacity/grid?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"usage-capacity",
								"grid"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "keyword",
									"value": null,
									"description": "The keyword to search - site name, device hostname, device MAC",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": null,
									"description": "The sort field\n\nAvailable values : HOSTNAME, SITE, RADIO_2DOT4G_UTILIZATION_SCORE, RADIO_5G_UTILIZATION_SCORE, RADIO_6G_UTILIZATION_SCORE, WIFI0_RETRY_SCORE, WIFI1_RETRY_SCORE, WIFI2_RETRY_SCORE, WIFI0_PACKET_LOSS, WIFI1_PACKET_LOSS, WIFI2_PACKET_LOSS, ETH0_UNICAST_SCORE, ETH0_BROADCAST_SCORE, ETH0_MULTICAST_SCORE, ETH1_UNICAST_SCORE, ETH1_BROADCAST_SCORE, ETH1_MULTICAST_SCORE, WIFI0_INTERFERENCE_SCORE, WIFI1_INTERFERENCE_SCORE, WIFI2_INTERFERENCE_SCORE, WIFI0_NOISE, WIFI1_NOISE, WIFI2_NOISE, TOTAL_ETH0_SCORE, TOTAL_ETH1_SCORE",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (descending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboard Wireless Client Health",
			"item": [
				{
					"name": "Wireless clients count with connectivity issues",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_clients\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/client-health/connectivity-issues",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"client-health",
								"connectivity-issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export all Client Health Data to CSV",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ],\n  \"device_ids\": [\n    {{device_id}}\n  ],\n  \"number_filter\": [\n    {\n      \"column_name\": \"string\",\n      \"filter_type\": \"GT\",\n      \"value\": 0,\n      \"min\": 0,\n      \"max\": 0\n    }\n  ],\n  \"alias\": [\n    \"string\"\n  ],\n  \"auth_methods\": [\n    \"string\"\n  ],\n  \"encryption_methods\": [\n    \"string\"\n  ],\n  \"operating_systems\": [\n    \"string\"\n  ],\n  \"ssids\": [\n    \"string\"\n  ],\n  \"user_profiles\": [\n    \"string\"\n  ],\n  \"frequency\": [\n    \"string\"\n  ],\n  \"category_assignments\": [\n    \"string\"\n  ],\n  \"has_authentication_issues\": true,\n  \"has_association_issues\": true,\n  \"has_ip_address_issues\": true,\n  \"has_roaming_issues\": true,\n  \"is_client_unhealthy\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/client-health/export",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"client-health",
								"export"
							],
							"query": [
								{
									"key": "keyword",
									"value": "",
									"description": "The keyword to search - site name, device hostname, device MAC",
									"disabled": true
								},
								{
									"key": "connectionStatus",
									"value": "CONNECTED",
									"description": "Connection Status\n\nAvailable values : CONNECTED, DISCONNECTED, UNKNOWN",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "",
									"description": "Sort Field\n\nAvailable values : OPERATING_SYSTEM, FREQUENCY, SSID, CONNECTION_STATUS, ALIAS, CLIENT_MAC, CATEGORY_ASSIGNMENT, USER_PROFILE, CLIENT_IP, CONNECTED_DEVICE_MAC, ENCRYPTION, IPV4, IPV6, VLAN, RSSI, SNR, AIR_TIME, CLIENT_DEVICE_ID, RX_CLIENT_RETIRES, TX_CLIENT_RETIRES, AUTHENTICATION",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (descending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Wireless clients health filter metadata",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"connection_status\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/client-health/filter-metadata",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"client-health",
								"filter-metadata"
							]
						}
					},
					"response": []
				},
				{
					"name": "Wireless clients count with frequency distribution",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_clients\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/client-health/frequency-distribution",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"client-health",
								"frequency-distribution"
							]
						}
					},
					"response": []
				},
				{
					"name": "Wireless client health grid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ],\n  \"device_ids\": [\n    {{device_id}}\n  ],\n  \"number_filter\": [\n    {\n      \"column_name\": \"string\",\n      \"filter_type\": \"GT\",\n      \"value\": 0,\n      \"min\": 0,\n      \"max\": 0\n    }\n  ],\n  \"alias\": [\n    \"string\"\n  ],\n  \"auth_methods\": [\n    \"string\"\n  ],\n  \"encryption_methods\": [\n    \"string\"\n  ],\n  \"operating_systems\": [\n    \"string\"\n  ],\n  \"ssids\": [\n    \"string\"\n  ],\n  \"user_profiles\": [\n    \"string\"\n  ],\n  \"frequency\": [\n    \"string\"\n  ],\n  \"category_assignments\": [\n    \"string\"\n  ],\n  \"has_authentication_issues\": true,\n  \"has_association_issues\": true,\n  \"has_ip_address_issues\": true,\n  \"has_roaming_issues\": true,\n  \"is_client_unhealthy\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/client-health/grid?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"client-health",
								"grid"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "keyword",
									"value": "",
									"description": "The keyword to search - site name, device hostname, device MAC",
									"disabled": true
								},
								{
									"key": "connectionStatus",
									"value": "CONNECTED",
									"description": "Connection Status\n\nAvailable values : CONNECTED, DISCONNECTED, UNKNOWN",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "",
									"description": "Sort Field\n\nAvailable values : OPERATING_SYSTEM, FREQUENCY, SSID, CONNECTION_STATUS, ALIAS, CLIENT_MAC, CATEGORY_ASSIGNMENT, USER_PROFILE, CLIENT_IP, CONNECTED_DEVICE_MAC, ENCRYPTION, IPV4, IPV6, VLAN, RSSI, SNR, AIR_TIME, CLIENT_DEVICE_ID, RX_CLIENT_RETIRES, TX_CLIENT_RETIRES, AUTHENTICATION",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (descending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Association issue for wireless client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/client-health/issue/association?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"client-health",
								"issue",
								"association"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "macAddress",
									"value": "",
									"description": "macAddress",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Authentication issue for wireless client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/client-health/issue/authentication?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"client-health",
								"issue",
								"authentication"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "macAddress",
									"value": "",
									"description": "macAddress",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Ip Address issue for wireless client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/client-health/issue/ipaddress?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"client-health",
								"issue",
								"ipaddress"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "macAddress",
									"value": "",
									"description": "macAddress",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Roaming issue for wireless client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/client-health/issue/roaming?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"client-health",
								"issue",
								"roaming"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "macAddress",
									"value": "",
									"description": "macAddress",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Wireless clients count with roaming issues",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_clients\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/client-health/roaming-issues",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"client-health",
								"roaming-issues"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboard Wireless Device Health",
			"item": [
				{
					"name": "Export all Wireless Device Health Data to CSV",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ],\n  \"device_ids\": [\n    {{device_id}}\n  ],\n  \"has_device_health_issues\": true,\n  \"number_filter\": [\n    {\n      \"column_name\": \"string\",\n      \"filter_type\": \"GT\",\n      \"value\": 0,\n      \"min\": 0,\n      \"max\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/device-health/export",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"device-health",
								"export"
							],
							"query": [
								{
									"key": "keyword",
									"value": "",
									"description": "The keyword to search - site name, device hostname, device MAC",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "",
									"description": "Sort Field\n\nAvailable values : OPERATING_SYSTEM, FREQUENCY, SSID, CONNECTION_STATUS, ALIAS, CLIENT_MAC, CATEGORY_ASSIGNMENT, USER_PROFILE, CLIENT_IP, CONNECTED_DEVICE_MAC, ENCRYPTION, IPV4, IPV6, VLAN, RSSI, SNR, AIR_TIME, CLIENT_DEVICE_ID, RX_CLIENT_RETIRES, TX_CLIENT_RETIRES, AUTHENTICATION",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (descending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Wireless device health grid",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ],\n  \"device_ids\": [\n    {{device_id}}\n  ],\n  \"has_device_health_issues\": true,\n  \"number_filter\": [\n    {\n      \"column_name\": \"string\",\n      \"filter_type\": \"GT\",\n      \"value\": 0,\n      \"min\": 0,\n      \"max\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/device-health/grid?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"device-health",
								"grid"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "sortField",
									"value": "",
									"description": "Sort Field\n\nAvailable values : OPERATING_SYSTEM, FREQUENCY, SSID, CONNECTION_STATUS, ALIAS, CLIENT_MAC, CATEGORY_ASSIGNMENT, USER_PROFILE, CLIENT_IP, CONNECTED_DEVICE_MAC, ENCRYPTION, IPV4, IPV6, VLAN, RSSI, SNR, AIR_TIME, CLIENT_DEVICE_ID, RX_CLIENT_RETIRES, TX_CLIENT_RETIRES, AUTHENTICATION",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (descending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CPU usage issues for wireless devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"cpu_usage_issue_device_count\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/device-health/issues/cpu-usage-issues",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"device-health",
								"issues",
								"cpu-usage-issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Memory usage issues for wireless devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"memory_usage_issue_device_count\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/device-health/issues/memory-usage-issues",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"device-health",
								"issues",
								"memory-usage-issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "PoE usage issues for wireless devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"poe_usage_issue_device_count\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/device-health/issues/poe-usage-issues",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"device-health",
								"issues",
								"poe-usage-issues"
							]
						}
					},
					"response": []
				},
				{
					"name": "Wireless device reboot summary",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/device-health/reboot/summary?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"device-health",
								"reboot",
								"summary"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device Id",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Device health summary for wireless devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"wireless_devices\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/dashboard/wireless/device-health/summary",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"dashboard",
								"wireless",
								"device-health",
								"summary"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Geo View",
			"item": [
				{
					"name": "Get GeoView Data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/geo-view",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"geo-view"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Application",
			"item": [
				{
					"name": "List the applications",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/applications?page=1&limit=10&predefined=true",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"applications"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "name",
									"value": "ACROBAT.COM",
									"description": "Application Name",
									"disabled": true
								},
								{
									"key": "detectionProtocol",
									"value": "HTTPS",
									"description": "Application Detection Protocol, only for custom Application\n\nAvailable values : HTTP, HTTPS",
									"disabled": true
								},
								{
									"key": "detectionType",
									"value": "HOST_NAME",
									"description": "Application Detection Type, only for custom Application\n\nAvailable values : HOST_NAME, SERVER_IP_ADDRESS, PORT_NUMBER",
									"disabled": true
								},
								{
									"key": "predefined",
									"value": "true",
									"description": "Flag to filter predefined or custom Application\n\nExample : true"
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "The sort field\n\nAvailable values : NAME, CATEGORY",
									"disabled": true
								},
								{
									"key": "order",
									"value": "DESC",
									"description": "The sort order (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List the TopN clients for a application",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/applications/{{app_id}}/clients/top{{count}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"applications",
								"{{app_id}}",
								"clients",
								"top{{count}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time for querying top client usage of application"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time for querying top application usage of application"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List the TopN applications",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //count to be used in url TopN number",
									"//enter start and end times",
									"var startTime = new Date(\"Sept 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Sept 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 155000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(15000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/applications/top{{count}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"applications",
								"top{{count}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time for querying top application usage"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time for querying top application usage"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Alert",
			"item": [
				{
					"name": "List all alert policies",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"event_rules_overview\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-policies"
							],
							"query": [
								{
									"key": "keyword",
									"value": "",
									"description": "The keyword to filter, such as summary, severity, source, etc.",
									"disabled": true
								},
								{
									"key": "policyType",
									"value": null,
									"description": "The policy type to filter, such as site or global\n\nAvailable values : GLOBAL, SITE",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a site based alert policy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"event_rules_overview\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get details of an alert policy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"event_rules_overview\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-policies/{{alert_policy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-policies",
								"{{alert_policy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a site-based alert policy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"event_rules_overview\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"site_ids\": [\n    {{site_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-policies/{{alert_policy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-policies",
								"{{alert_policy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a site-based alert policy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-policies/{{alert_policy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-policies",
								"{{alert_policy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get details of an alert rule",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-policies/{{alert_policy_id}}/rules/{{alert_rule_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-policies",
								"{{alert_policy_id}}",
								"rules",
								"{{alert_rule_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an alert rule",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"string\",\n  \"severity_id\": 0,\n  \"trigger_type\": \"string\",\n  \"duration\": 0,\n  \"time_window\": 0,\n  \"count\": 0,\n  \"threshold\": 0,\n  \"operator\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-policies/{{alert_policy_id}}/rules/{{alert_rule_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-policies",
								"{{alert_policy_id}}",
								"rules",
								"{{alert_rule_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable a rule from an alert policy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-policies/{{alert_policy_id}}/rules/{{alert_rule_id}}/:disable",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-policies",
								"{{alert_policy_id}}",
								"rules",
								"{{alert_rule_id}}",
								":disable"
							],
							"variable": [
								{
									"key": "disable",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable a rule from an alert policy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-policies/{{alert_policy_id}}/rules/{{alert_rule_id}}/:enable",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-policies",
								"{{alert_policy_id}}",
								"rules",
								"{{alert_rule_id}}",
								":enable"
							],
							"variable": [
								{
									"key": "enable",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "The list of current owner's available sitess",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"site_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-policies/available-sites",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-policies",
								"available-sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "List alert email subscriptions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"email\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/emails",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"emails"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create alert email subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"email\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"string\",\n  \"is_enabled\": true,\n  \"is_subscribe_all\": true,\n  \"alert_policy_ids\": [\n    {{alert_policy_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/emails",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"emails"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete alert email subscription in bulk",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"result\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/emails/:delete",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"emails",
								":delete"
							],
							"query": [
								{
									"key": "async",
									"value": "",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "delete",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get alert email subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"email\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/emails/{{email_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"emails",
								"{{email_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update alert email subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"email\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"string\",\n  \"is_enabled\": true,\n  \"is_subscribe_all\": true,\n  \"alert_policy_ids\": [\n    {{alert_policy_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/emails/{{email_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"emails",
								"{{email_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete alert email subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/emails/{{email_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"emails",
								"{{email_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Email Varification",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"string\",\n  \"is_enabled\": true,\n  \"is_subscribe_all\": true,\n  \"alert_policy_ids\": [\n    {{alert_policy_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/emails/{{email_id}}/:verify",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"emails",
								"{{email_id}}",
								":verify"
							],
							"variable": [
								{
									"key": "verify",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List ServiceNow subscriptions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"servicenow_account_email\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/servicenow",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"servicenow"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ServiceNow subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"servicenow_account_email\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"servicenow_account_email\": \"string\",\n  \"is_enabled\": true,\n  \"is_subscribe_all\": true,\n  \"alert_policy_ids\": [\n    {{alert_policy_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/servicenow",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"servicenow"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete alert ServiceNow subscription in bulk",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"result\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{servicenow_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/servicenow/:delete",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"servicenow",
								":delete"
							],
							"query": [
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "delete",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a specific ServiceNow subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"servicenow_account_email\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/servicenow/{{servicenow_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"servicenow",
								"{{servicenow_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update ServiceNow subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"servicenow_account_email\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"servicenow_account_email\": \"string\",\n  \"is_enabled\": true,\n  \"is_subscribe_all\": true,\n  \"alert_policy_ids\": [\n    {{alert_policy_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/servicenow/{{servicenow_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"servicenow",
								"{{servicenow_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partial or full update ServiceNow subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PATCH request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"servicenow_account_email\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"servicenow_account_email\": \"string\",\n  \"is_enabled\": true,\n  \"is_subscribe_all\": true,\n  \"alert_policy_ids\": [\n    {{alert_policy_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/servicenow/{{servicenow_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"servicenow",
								"{{servicenow_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List alert webhook subscriptions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"url\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/webhooks",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"webhooks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create alert webhook subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"url\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"url\": \"string\",\n  \"secret\": \"string\",\n  \"is_enabled\": true,\n  \"is_subscribe_all\": true,\n  \"alert_policy_ids\": [\n    {{alert_policy_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/webhooks",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"webhooks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete alert webhook subscription in bulk",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"result\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/webhooks/:delete",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"webhooks",
								":delete"
							],
							"variable": [
								{
									"key": "delete",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get alert webhook subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"url\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/webhooks/{{webhook_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"webhooks",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update alert webhook subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"url\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"url\": \"string\",\n  \"secret\": \"string\",\n  \"is_enabled\": true,\n  \"is_subscribe_all\": true,\n  \"alert_policy_ids\": [\n    {{alert_policy_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/webhooks/{{webhook_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"webhooks",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete alert webhook subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alert-subscriptions/webhooks/{{webhook_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alert-subscriptions",
								"webhooks",
								"{{webhook_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List the alerts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alerts?page=1&limit=10&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alerts"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time for querying top client usage of application"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time for querying top application usage of application"
								},
								{
									"key": "severityIds",
									"value": "",
									"description": "The alert severity identifiers to filter. The currently supported severity IDs are 1 for critical, 2 for warning, and 3 for info.",
									"disabled": true
								},
								{
									"key": "categoryIds",
									"value": "",
									"description": "The alert category ID to filter",
									"disabled": true
								},
								{
									"key": "mesaegMetadataIds",
									"value": "",
									"description": "The message metadata ID list to filter",
									"disabled": true
								},
								{
									"key": "acknowledged",
									"value": "",
									"description": "The acknowledged to filter, return global data if not specified\nTrue, False",
									"disabled": true
								},
								{
									"key": "siteId",
									"value": "",
									"description": "The site id to filter",
									"disabled": true
								},
								{
									"key": "floorId",
									"value": null,
									"description": "The floor id to filter",
									"disabled": true
								},
								{
									"key": "buildingId",
									"value": null,
									"description": "The building id to filter",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "",
									"description": "The keyword to filter, such as summary, severity, source, etc.",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "",
									"description": "The sort field\n\nAvailable values : TIMESTAMP, SOURCE",
									"disabled": true
								},
								{
									"key": "order",
									"value": "",
									"description": "The sort order (descending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Acknowledge the alert",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"alert_ids\": [\n    \"string\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/alerts/:acknowledge",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alerts",
								":acknowledge"
							],
							"variable": [
								{
									"key": "acknowledge",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Count the alerts by different grouping",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alerts/count-by-{{alert_group}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alerts",
								"count-by-{{alert_group}}"
							],
							"query": [
								{
									"key": "acknowledged",
									"value": null,
									"description": "The acknowledged to filter, return global data if not specified",
									"disabled": true
								},
								{
									"key": "siteId",
									"value": null,
									"description": "The site id for counting the alerts, default to global",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "[LRO] Create the alerts report",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alerts/report?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alerts",
								"report"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time for querying alerts in milliseconds"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time for querying alerts in milliseconds"
								},
								{
									"key": "serverityIds",
									"value": null,
									"description": "The severity identifier. The currently supported severity IDs are 1 for critical, 2 for warning, and 3 for info.",
									"disabled": true
								},
								{
									"key": "categoryIds",
									"value": null,
									"description": "The alert category Id to filter",
									"disabled": true
								},
								{
									"key": "messageMetadataIds",
									"value": null,
									"description": "The alert type to filter",
									"disabled": true
								},
								{
									"key": "acknowledged",
									"value": null,
									"description": "Boolean\nThe site to filter, return global data if not specified",
									"disabled": true
								},
								{
									"key": "siteId",
									"value": null,
									"description": "The site id to filter",
									"disabled": true
								},
								{
									"key": "timeZoneOffset",
									"value": null,
									"description": "The time zone to setup the timestamp",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": null,
									"description": "The keyword to filter, such as source name or description",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": null,
									"description": "The sort field\n\nAvailable values : TIMESTAMP, SOURCE",
									"disabled": true
								},
								{
									"key": "order",
									"value": null,
									"description": "The sort order (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "async",
									"value": null,
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download the alerts report",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alerts/reports/{{alert_report_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alerts",
								"reports",
								"{{alert_report_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Log",
			"item": [
				{
					"name": "List Accounting Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"username\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/accounting?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"accounting"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "username",
									"value": "",
									"description": "The user login name",
									"disabled": true
								},
								{
									"key": "callingStationId",
									"value": "",
									"description": "The calling station ID",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970, default is 0 if not specified or is negative",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970, default is now if not specified or is negative",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Audit Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/audit?page=1&limit=10&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"audit"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 500 \nDefault value : 10"
								},
								{
									"key": "sortField",
									"value": "TIMESTAMP",
									"description": "The field for sorting\n\nAvailable values : TIMESTAMP",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sorting order\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "category",
									"value": "ADMIN",
									"description": "Audit category\n\nAvailable values : ADMIN, SYSTEM, DEPLOYMENT, CONFIG, MONITOR, ALARM",
									"disabled": true
								},
								{
									"key": "username",
									"value": "User Name",
									"description": "The user login name",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970. Note: endTime - startTime must be no greater than 2592000000 (30 days)"
								},
								{
									"key": "keyword",
									"value": "",
									"description": "The case-insensitive keyword to search in description",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get audit log full descriptions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/audit/full-descriptions/{{audit_log_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"audit",
								"full-descriptions",
								"{{audit_log_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "[LRO] Create audit logs report",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"October 13, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"October 15, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });",
									"",
									"var jsonData = JSON.parse(pm.response.text());  ",
									"pm.environment.set(\"audit_report_id\", jsonData[\"id\"]);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/audit/reports?startTime={{myStartTime}}&endTime={{myEndTime}}&timeZoneOffset=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"audit",
								"reports"
							],
							"query": [
								{
									"key": "sortField",
									"value": "TIMESTAMP",
									"description": "The field for sorting\n\nAvailable values : TIMESTAMP",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sorting order\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "category",
									"value": "ADMIN",
									"description": "Audit category\n\nAvailable values : ADMIN, SYSTEM, DEPLOYMENT, CONFIG, MONITOR, ALARM",
									"disabled": true
								},
								{
									"key": "username",
									"value": "User Name",
									"description": "The user login name",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970. Note: endTime - startTime must be no greater than 2592000000 (30 days)"
								},
								{
									"key": "timeZoneOffset",
									"value": "0",
									"description": "The time zone off set (integer($int32))"
								},
								{
									"key": "keyword",
									"value": "",
									"description": "The case-insensitive keyword to search in description",
									"disabled": true
								},
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Download audit logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/audit/reports/{{audit_report_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"audit",
								"reports",
								"{{audit_report_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Auth Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/auth?page=1&limit=10&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"auth"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 500 \nDefault value : 10"
								},
								{
									"key": "username",
									"value": "User Name",
									"description": "The user login name",
									"disabled": true
								},
								{
									"key": "callingStationId",
									"value": "",
									"description": "The calling station ID",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970, default is 0 if not specified or is negative"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970, default is now if not specified or is negative"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Credential Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndtime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/credential?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"credential"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "username",
									"value": "User Name",
									"description": "The user login name",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970, default is 0 if not specified or is negative",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970, default is now if not specified or is negative",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Email Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/email?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"email"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "username",
									"value": "User Name",
									"description": "The user login name",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970, default is 0 if not specified or is negative",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970, default is now if not specified or is negative",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List SMS logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/sms?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"sms"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "phoneNumber",
									"value": "Phone Number",
									"description": "The phone number",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970, default is 0 if not specified or is negative",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970, default is now if not specified or is negative",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notification",
			"item": [
				{
					"name": "List Webhook subscriptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"message_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/subscriptions/webhook?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"subscriptions",
								"webhook"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "order",
									"value": "ASC",
									"description": "The sort order (descending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": null,
									"description": "The keyword - url",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Webhook subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"application\": \"example-app\",\n    \"url\": \"https://webhook_endpoint-example-123\",\n    \"secret\": \"erw3245cq3dasbjtyj\",\n    \"message_type\": \"LOCATION_AP_CENTRIC\",\n    \"status\": \"ENABLED\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/subscriptions/webhook",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"subscriptions",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Webhook subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/subscriptions/webhook/:delete?ids={{web_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"subscriptions",
								"webhook",
								":delete"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{web_id}}",
									"description": "The Webhook subscription IDs"
								}
							],
							"variable": [
								{
									"key": "delete",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Webhook subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"application\": \"example-app\",\n    \"url\": \"https://webhook_endpoint-example-123\",\n    \"secret\": \"erw3245cq3dasbjtyj\",\n    \"message_type\": \"LOCATION_AP_CENTRIC\",\n    \"status\": \"ENABLED\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/subscriptions/webhook/{{web_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"subscriptions",
								"webhook",
								"{{web_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export all webhook subscriptions to CSV",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/subscriptions/webhook/export",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"subscriptions",
								"webhook",
								"export"
							],
							"query": [
								{
									"key": "order",
									"value": "ASC",
									"description": "The sort order (descending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "",
									"description": "The keyword - url",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Administration",
			"item": [
				{
					"name": "List API Access Tokens",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/acct-api-token?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"acct-api-token"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "order",
									"value": "ASC",
									"description": "The sort order (descending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "",
									"description": "The keyword - application name or grantor",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "GRANTOR",
									"description": "The sort field\n\nAvailable values : GRANTOR, EXPIRATION, GENERATEDON\n\n",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an API Access token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/acct-api-token?clientId=clientId&tokenExpireInDay=30",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"acct-api-token"
							],
							"query": [
								{
									"key": "clientId",
									"value": "clientId",
									"description": "The client ID"
								},
								{
									"key": "tokenExpireInDay",
									"value": "30",
									"description": "The expire time in days"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Bulk Delete API Access token by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/acct-api-token/:delete?ids={{leg_token_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"acct-api-token",
								":delete"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{leg_token_id}}",
									"description": "The API Access Token IDs"
								}
							],
							"variable": [
								{
									"key": "delete",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete API Access token by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/acct-api-token/{{leg_token_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"acct-api-token",
								"{{leg_token_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update API Access token by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PATCH request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"token_expire_in_day\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/acct-api-token/{{leg_token_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"acct-api-token",
								"{{leg_token_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Export all API access tokens to CSV",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/acct-api-token/export",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"acct-api-token",
								"export"
							],
							"query": [
								{
									"key": "order",
									"value": "ASC",
									"description": "The sort order (descending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "",
									"description": "The keyword - application name or grantor",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "GRANTOR",
									"description": "The sort field\n\nAvailable values : GRANTOR, EXPIRATION, GENERATEDON\n\n",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Credential Distribution Groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/credential-distribution-groups?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"credential-distribution-groups"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100"
								},
								{
									"key": "order",
									"value": "ASC",
									"description": "The sort order (descending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "GROUP_NAME",
									"description": "The sort field\n\nAvailable values : GROUP_NAME, USER_ALLOWED",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "",
									"description": "The keyword to search - Group Name, Member of, User Detail or User Group",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Credential Distribution Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"enable_email_approval\": true,\n  \"enable_user_limitation\": true,\n  \"employee_group_type\": \"ADMIN\",\n  \"employee_groups\": [\n    {\n      \"name\": \"string\"\n    }\n  ],\n  \"restrict_number\": 0,\n  \"user_group_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/credential-distribution-groups",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"credential-distribution-groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Credential Distribution Group by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"enable_email_approval\": true,\n  \"enable_user_limitation\": true,\n  \"employee_group_type\": \"ADMIN\",\n  \"employee_groups\": [\n    {\n      \"name\": \"string\"\n    }\n  ],\n  \"restrict_number\": 0,\n  \"user_group_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/credential-distribution-groups?ids={{cdg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"credential-distribution-groups"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{cdg_id}}",
									"description": "The Credential Distribution Group IDs"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Credential Distribution Group by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"enable_email_approval\": true,\n  \"enable_user_limitation\": true,\n  \"employee_group_type\": \"ADMIN\",\n  \"employee_groups\": [\n    {\n      \"name\": \"string\"\n    }\n  ],\n  \"restrict_number\": 0,\n  \"user_group_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/credential-distribution-groups/{{cdg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"credential-distribution-groups",
								"{{cdg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List third party api connections",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"api_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/third-party-api-connection",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"third-party-api-connection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a third party api connection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"api_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"api_token\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/third-party-api-connection",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"third-party-api-connection"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a third party api connection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/third-party-api-connection",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"third-party-api-connection"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "NOS",
			"item": []
		},
		{
			"name": "Configuration - Deployment",
			"item": [
				{
					"name": "Get list of deployments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Push config and update firmaware [LRO]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"schedule\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter epoch times",
									"var epochTime = new Date(\"Oct 1, 2024 02:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myEpoch\", epochTime.getTime()); // myEpoch is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"schedule\": {\n    \"start_time\": {{myEpoch}}\n  },\n  \"devices\": {\n    \"ids\": [\n      {{device_id}}\n    ],\n    \"site_ids\": [\n      {{site_id}}\n    ]\n  },\n  \"policy\": {\n    \"enable_complete_configuration_update\": true,\n    \"firmware_upgrade_policy\": {\n      \"enable_enforce_upgrade\": true,\n      \"enable_distributed_upgrade\": true\n    },\n    \"firmware_upgrade_versions\": [\n      {\n        \"firmware_id\": 0,\n        \"device_id\": 0,\n        \"product_type\": \"string\"\n      }\n    ],\n    \"firmware_activate_option\": {\n      \"enable_activate_at_next_reboot\": true,\n      \"activation_delay_seconds\": 0,\n      \"activation_time\": 0\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments"
							],
							"query": [
								{
									"key": "async",
									"value": "False",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get deployment details by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"deployment_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments/{{deployment_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments",
								"{{deployment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update schedule with deployment ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter epoch times",
									"var epochTime = new Date(\"Sept 1, 2024 02:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myEpoch\", epochTime.getTime()); // myEpoch is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"schedule\": {\n    \"start_time\": {{myEpoch}}\n  },\n  \"devices\": {\n    \"ids\": [\n      {{device_id}}\n    ],\n    \"site_ids\": [\n      {{site_id}}\n    ]\n  },\n  \"policy\": {\n    \"enable_complete_configuration_update\": true,\n    \"firmware_upgrade_policy\": {\n      \"enable_enforce_upgrade\": true,\n      \"enable_distributed_upgrade\": true\n    },\n    \"firmware_upgrade_versions\": [\n      {\n        \"firmware_id\": 0,\n        \"device_id\": 0,\n        \"product_type\": \"string\"\n      }\n    ],\n    \"firmware_activate_option\": {\n      \"enable_activate_at_next_reboot\": true,\n      \"activation_delay_seconds\": 0,\n      \"activation_time\": 0\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments/{{deployment_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments",
								"{{deployment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the deployment schedule by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments/{{deployment_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments",
								"{{deployment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get firmware deployment status by ID [LRO]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"schedule_status\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments/{{deployment_id}}/status",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments",
								"{{deployment_id}}",
								"status"
							],
							"query": [
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Device firmware metadatas",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"firmware_metadatas\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_ids\": [\n    {{device_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments/firmware-metadatas",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments",
								"firmware-metadatas"
							],
							"query": [
								{
									"key": "async",
									"value": "False",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get configuration deployment overview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"request_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments/overview",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments",
								"overview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get configuration deployment status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"request_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments/status?deviceIds={{device_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments",
								"status"
							],
							"query": [
								{
									"key": "deviceIds",
									"value": "{{device_id}}",
									"description": "The target device IDs"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Basic",
			"item": [
				{
					"name": "List VLAN profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create VLAN profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"default_vlan_id\": 0,\n  \"enable_classification\": true,\n  \"classified_entries\": [\n    {\n      \"vlan_id\": 0,\n      \"classification_rule_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "[LRO] Delete Vlan profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles/:delete",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles",
								":delete"
							],
							"query": [
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "delete",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a VLAN profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles/{{vlan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles",
								"{{vlan_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a VLAN profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles/{{vlan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles",
								"{{vlan_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a VLAN profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PATCH request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"default_vlan_id\": 0,\n  \"enable_classification\": true,\n  \"classified_entries\": [\n    {\n      \"vlan_id\": 0,\n      \"classification_rule_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles/{{vlan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles",
								"{{vlan_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Configuration - User Management",
			"item": [
				{
					"name": "List Email templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/email-templates?passwordType=PPSK",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"email-templates"
							],
							"query": [
								{
									"key": "passwordType",
									"value": "PPSK",
									"description": "The password type\n\nAvailable values : PPSK, RADIUS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List end users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "user_group_ids",
									"value": "{{group_id}}",
									"description": "The user group IDs",
									"disabled": true
								},
								{
									"key": "usernames",
									"value": "",
									"description": "The list of username",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an end users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_group_id\": {{group_id}},\n  \"name\": \"string\",\n  \"user_name\": \"string\",\n  \"organization\": \"string\",\n  \"visit_purpose\": \"string\",\n  \"description\": \"string\",\n  \"email_address\": \"string\",\n  \"phone_number\": \"string\",\n  \"password\": \"string\",\n  \"email_password_delivery\": \"string\",\n  \"sms_password_delivery\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an end users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_group_id\": {{group_id}},\n  \"name\": \"string\",\n  \"user_name\": \"string\",\n  \"organization\": \"string\",\n  \"visit_purpose\": \"string\",\n  \"description\": \"string\",\n  \"email_address\": \"string\",\n  \"phone_number\": \"string\",\n  \"password\": \"string\",\n  \"email_password_delivery\": \"string\",\n  \"sms_password_delivery\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers/{{user_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an end users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers/{{user_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Regenerate password for an end user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"password\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers/{{user_id}}/:regenerate-password",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers",
								"{{user_id}}",
								":regenerate-password"
							],
							"variable": [
								{
									"key": "regenerate-password",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Key-based Private Client Groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based"
							]
						}
					},
					"response": []
				},
				{
					"name": "Setup a Key-based Private Client Group [LRO]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"policy_name\": \"string\",\n  \"ssid_name\": \"string\",\n  \"users\": [\n    {\n      \"name\": \"string\",\n      \"email\": \"string\",\n      \"user_group_name\": \"string\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based"
							],
							"query": [
								{
									"key": "async",
									"value": "False",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Private Client Group from a network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}?ids={{pcgk_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{pcgk_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Key-based Private Client Group for a network policy [LRO]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ssid_name\": \"string\",\n  \"enabled\": true,\n  \"user_ids\": [\n    0\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/:onboard",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								":onboard"
							],
							"query": [
								{
									"key": "async",
									"value": "False",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "onboard",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send keys to specified users in PCG-enabled network policy via Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/keys/:email?userIds={{user_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"keys",
								":email"
							],
							"query": [
								{
									"key": "userIds",
									"value": "{{user_id}}",
									"description": "The user IDs"
								}
							],
							"variable": [
								{
									"key": "email",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate/regenerate shared keys for specified users in PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/keys/:generate?userIds={{user_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"keys",
								":generate"
							],
							"query": [
								{
									"key": "userIds",
									"value": "{{user_id}}",
									"description": "The user IDs"
								}
							],
							"variable": [
								{
									"key": "generate",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get port assignments for devices (currently support for AP150W & AP302W) in a network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"policy_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/port-assignments",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"port-assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign ports for devices (currently support for AP150W & AP302W) in a network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"policy_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"port_assignments\": [\n    {\n      \"device_id\": 0,\n      \"eth1_user_id\": 0,\n      \"eth2_user_id\": 0,\n      \"eth3_user_id\": 0\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/port-assignments",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"port-assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get users for a PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Replace all users in a PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"users\": [\n    {\n      \"name\": \"string\",\n      \"email\": \"string\",\n      \"user_group_name\": \"string\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add users to a PCG-enabled network policy [LRO]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"users\": [\n    {\n      \"name\": \"string\",\n      \"email\": \"string\",\n      \"user_group_name\": \"string\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"users"
							],
							"query": [
								{
									"key": "async",
									"value": "False",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete users from a PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_ids\": [\n    {{pcgu_id}}\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "List SMS templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/sms-templates",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"sms-templates"
							],
							"query": [
								{
									"key": "passwordType",
									"value": "PPSK",
									"description": "The password type\n\nAvailable values : PPSK, RADIUS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List user groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "password_db_location",
									"value": "CLOUD",
									"description": "The password DB location\n\nAvailable values : CLOUD, LOCAL",
									"disabled": true
								},
								{
									"key": "passwordType",
									"value": "PPSK",
									"description": "The password type\n\nAvailable values : PPSK, RADIUS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"password_db_location\": \"CLOUD\",\n  \"ppsk_use_only\": true,\n  \"password_type\": \"PPSK\",\n  \"enable_max_clients_per_ppsk\": true,\n  \"max_clients_per_ppsk\": 0,\n  \"pcg_use_only\": true,\n  \"pcg_type\": \"AP_BASED\",\n  \"enable_cwp_reg\": true,\n  \"password_settings\": {\n    \"enable_letters\": true,\n    \"enable_numbers\": true,\n    \"enable_special_characters\": true,\n    \"password_concat_string\": \"string\",\n    \"psk_generation_method\": \"PASSWORD_ONLY\",\n    \"password_character_types\": \"INCLUDE_ALL_CHARACTER_TYPE_ENABLED\",\n    \"password_length\": 0\n  },\n  \"expiration_settings\": {\n    \"expiration_type\": \"NEVER_EXPIRE\",\n    \"valid_during_dates\": {\n      \"start_date_time\": {\n        \"day_of_month\": 0,\n        \"month\": 0,\n        \"year\": 0,\n        \"hour_of_day\": 0,\n        \"minute_of_hour\": 0\n      },\n      \"end_date_time\": {\n        \"day_of_month\": 0,\n        \"month\": 0,\n        \"year\": 0,\n        \"hour_of_day\": 0,\n        \"minute_of_hour\": 0\n      },\n      \"time_zone\": \"string\"\n    },\n    \"valid_for_time_period\": {\n      \"valid_time_period_after\": \"ID_CREATION\",\n      \"after_id_creation_settings\": {\n        \"valid_time_period\": 0,\n        \"valid_time_period_unit\": \"MINUTE\"\n      },\n      \"after_first_login_settings\": {\n        \"valid_time_period\": 0,\n        \"valid_time_period_unit\": \"MINUTE\",\n        \"first_login_within\": 0,\n        \"first_login_within_unit\": \"MINUTE\"\n      }\n    },\n    \"valid_daily\": {\n      \"daily_start_hour\": 0,\n      \"daily_start_minute\": 0,\n      \"daily_end_hour\": 0,\n      \"daily_end_minute\": 0\n    },\n    \"expiration_action\": \"SHOW_MESSAGE\",\n    \"post_expiration_action\": {\n      \"enable_credentials_renewal\": true,\n      \"enable_delete_immediately\": true,\n      \"delete_after_value\": 0,\n      \"delete_after_unit\": \"MINUTE\"\n    }\n  },\n  \"delivery_settings\": {\n    \"email_template_id\": 0,\n    \"sms_template_id\": 0\n  }\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "List unique user group names",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups/:unique",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups",
								":unique"
							],
							"variable": [
								{
									"key": "unique",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string test\",\n  \"password_db_location\": \"CLOUD\",\n  \"ppsk_use_only\": true,\n  \"password_type\": \"PPSK\",\n  \"enable_max_clients_per_ppsk\": true,\n  \"max_clients_per_ppsk\": 0,\n  \"pcg_use_only\": true,\n  \"pcg_type\": \"AP_BASED\",\n  \"enable_cwp_reg\": true,\n  \"password_settings\": {\n    \"enable_letters\": true,\n    \"enable_numbers\": true,\n    \"enable_special_characters\": true,\n    \"password_concat_string\": \"string\",\n    \"psk_generation_method\": \"PASSWORD_ONLY\",\n    \"password_character_types\": \"INCLUDE_ALL_CHARACTER_TYPE_ENABLED\",\n    \"password_length\": 0\n  },\n  \"expiration_settings\": {\n    \"expiration_type\": \"NEVER_EXPIRE\",\n    \"valid_during_dates\": {\n      \"start_date_time\": {\n        \"day_of_month\": 0,\n        \"month\": 0,\n        \"year\": 0,\n        \"hour_of_day\": 0,\n        \"minute_of_hour\": 0\n      },\n      \"end_date_time\": {\n        \"day_of_month\": 0,\n        \"month\": 0,\n        \"year\": 0,\n        \"hour_of_day\": 0,\n        \"minute_of_hour\": 0\n      },\n      \"time_zone\": \"string\"\n    },\n    \"valid_for_time_period\": {\n      \"valid_time_period_after\": \"ID_CREATION\",\n      \"after_id_creation_settings\": {\n        \"valid_time_period\": 0,\n        \"valid_time_period_unit\": \"MINUTE\"\n      },\n      \"after_first_login_settings\": {\n        \"valid_time_period\": 0,\n        \"valid_time_period_unit\": \"MINUTE\",\n        \"first_login_within\": 0,\n        \"first_login_within_unit\": \"MINUTE\"\n      }\n    },\n    \"valid_daily\": {\n      \"daily_start_hour\": 0,\n      \"daily_start_minute\": 0,\n      \"daily_end_hour\": 0,\n      \"daily_end_minute\": 0\n    },\n    \"expiration_action\": \"SHOW_MESSAGE\",\n    \"post_expiration_action\": {\n      \"enable_credentials_renewal\": true,\n      \"enable_delete_immediately\": true,\n      \"delete_after_value\": 0,\n      \"delete_after_unit\": \"MINUTE\"\n    }\n  },\n  \"delivery_settings\": {\n    \"email_template_id\": 0,\n    \"sms_template_id\": 0\n  }\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups/{{group_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups",
								"{{group_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups/{{group_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups",
								"{{group_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Policy",
			"item": [
				{
					"name": "List all cloud config groups [LRO]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "The Sort field (Name by default)\n\nAvailable values : NAME, DESCRIPTION, ZONE_NAME, READ_ONLY",
									"disabled": true
								},
								{
									"key": "order",
									"value": "ASC",
									"description": "The Sort order (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new cloud config group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"NameOfCGG\",\n  \"description\": \"Add New CCG\",\n  \"device_ids\": [\n    44238164,\n    45054207\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cloud Config group by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs/{{ccg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs",
								"{{ccg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cloud Config group information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"\",\n  \"description\": \"Update CCG device list\",\n  \"device_ids\": [\n    {{device_id}}\n    \n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs/{{ccg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs",
								"{{ccg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Cloud Config Group by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs/{{ccg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs",
								"{{ccg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List classification rules",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create classification rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"classifications\": [\n    {\n      \"classification_type\": \"CLASSIFICATION_TYPE_UNSPECIFIED\",\n      \"match\": true,\n      \"classification_type_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a classification rule by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules/{{class_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules",
								"{{class_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a classification rule by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"classifications\": [\n    {\n      \"classification_type\": \"CLASSIFICATION_TYPE_UNSPECIFIED\",\n      \"match\": true,\n      \"classification_type_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules/{{class_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules",
								"{{class_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a classification rule by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules/{{class_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules",
								"{{class_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List client monitor profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/client-monitor-profiles?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"client-monitor-profiles"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a client monitor profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"association\": {\n    \"trigger_times\": 10,\n    \"report_interval\": 3600\n  },\n  \"authentication\": {\n    \"trigger_times\": 10,\n    \"report_interval\": 3600\n  },\n  \"networking\": {\n    \"trigger_times\": 10,\n    \"report_interval\": 3600\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/client-monitor-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"client-monitor-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a client monitor profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/client-monitor-profiles/{{cient_mon_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"client-monitor-profiles",
								"{{cient_mon_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update client monitor profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"classifications\": [\n    {\n      \"classification_type\": \"CLASSIFICATION_TYPE_UNSPECIFIED\",\n      \"match\": true,\n      \"classification_type_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/client-monitor-profiles/{{cient_mon_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"client-monitor-profiles",
								"{{cient_mon_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Client Monitor Profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/client-monitor-profiles/{{cient_mon_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"client-monitor-profiles",
								"{{cient_mon_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Hotspot profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/hotspot-profiles?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hotspot-profiles"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Hotspot profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"hessid\": \"71:4A:5C:6C:Fa:e1\",\n  \"domain_name\": \"string\",\n  \"operator_names\": [\n    {\n      \"name\": \"string\",\n      \"language\": \"mnt\"\n    }\n  ],\n  \"venue\": {\n    \"venue_group\": \"UNSPECIFIED\",\n    \"venue_type\": \"UNSPECIFIED\",\n    \"names\": [\n      {\n        \"name\": \"string\",\n        \"language\": \"nrc\"\n      }\n    ]\n  },\n  \"access_network_type\": \"PRIVATE\",\n  \"dgaf\": true,\n  \"ipv4_availability\": \"NOT_AVAILABLE\",\n  \"ipv6_availability\": \"NOT_AVAILABLE\",\n  \"wan_metrics\": {\n    \"status\": \"DOWN\",\n    \"downlink_speed\": 4194304,\n    \"uplink_speed\": 4194304\n  },\n  \"connection_capabilities\": [\n    {\n      \"protocol\": \"ESP\",\n      \"port_number\": 65535,\n      \"status\": \"CLOSED\"\n    }\n  ],\n  \"qos_map\": {\n    \"dscp_ranges\": [\n      {\n        \"ah_class\": 7,\n        \"dscp_range_start\": 63,\n        \"dscp_range_end\": 63\n      }\n    ],\n    \"dscp_exceptions\": [\n      {\n        \"ah_class\": 7,\n        \"dscp_value\": 63\n      }\n    ]\n  },\n  \"gas_comeback_delay\": 65535,\n  \"anqp_domain_id\": 65535,\n  \"online_signup\": {\n    \"network_auth_type\": \"ACCEPTANCE_TERMS\",\n    \"redirection_url\": \"string\",\n    \"ssid_id\": 0\n  },\n  \"nai_realms\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"eap_methods\": [\n        \"EAP_TTLS_PAP\"\n      ],\n      \"encoding_type\": \"RFC_4282\"\n    }\n  ],\n  \"roaming_consortiums\": [\n    {\n      \"consortium_id\": \"886eaD\",\n      \"description\": \"string\"\n    }\n  ],\n  \"cellular_networks\": [\n    {\n      \"mcc\": \"424\",\n      \"mnc\": \"98\",\n      \"description\": \"string\"\n    }\n  ],\n  \"service_provider_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hotspot-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hotspot-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hotspot profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/hotspot-profiles/{{hotspot_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hotspot-profiles",
								"{{hotspot_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Hotspot profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"hessid\": \"ba:aE:EC:84:81:70\",\n  \"domain_name\": \"string\",\n  \"operator_names\": [\n    {\n      \"name\": \"string\",\n      \"language\": \"qff\"\n    }\n  ],\n  \"venue\": {\n    \"venue_group\": \"UNSPECIFIED\",\n    \"venue_type\": \"UNSPECIFIED\",\n    \"names\": [\n      {\n        \"name\": \"string\",\n        \"language\": \"zju\"\n      }\n    ]\n  },\n  \"access_network_type\": \"PRIVATE\",\n  \"dgaf\": true,\n  \"ipv4_availability\": \"NOT_AVAILABLE\",\n  \"ipv6_availability\": \"NOT_AVAILABLE\",\n  \"wan_metrics\": {\n    \"status\": \"DOWN\",\n    \"downlink_speed\": 4194304,\n    \"uplink_speed\": 4194304\n  },\n  \"connection_capabilities\": [\n    {\n      \"protocol\": \"ESP\",\n      \"port_number\": 65535,\n      \"status\": \"CLOSED\"\n    }\n  ],\n  \"qos_map\": {\n    \"dscp_ranges\": [\n      {\n        \"ah_class\": 7,\n        \"dscp_range_start\": 63,\n        \"dscp_range_end\": 63\n      }\n    ],\n    \"dscp_exceptions\": [\n      {\n        \"ah_class\": 7,\n        \"dscp_value\": 63\n      }\n    ]\n  },\n  \"gas_comeback_delay\": 65535,\n  \"anqp_domain_id\": 65535,\n  \"online_signup\": {\n    \"network_auth_type\": \"ACCEPTANCE_TERMS\",\n    \"redirection_url\": \"string\",\n    \"ssid_id\": 0\n  },\n  \"nai_realms\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"eap_methods\": [\n        \"EAP_TTLS_PAP\"\n      ],\n      \"encoding_type\": \"RFC_4282\"\n    }\n  ],\n  \"roaming_consortiums\": [\n    {\n      \"consortium_id\": \"d22896b1d4a46137cF2BDE9f9\",\n      \"description\": \"string\"\n    }\n  ],\n  \"cellular_networks\": [\n    {\n      \"mcc\": \"246\",\n      \"mnc\": \"60\",\n      \"description\": \"string\"\n    }\n  ],\n  \"service_provider_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hotspot-profiles/{{hotspot_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hotspot-profiles",
								"{{hotspot_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Hotspot profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/hotspot-profiles/{{hotspot_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hotspot-profiles",
								"{{hotspot_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Hotspot Service Provider profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/hotspot-service-provider-profiles?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hotspot-service-provider-profiles"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Hotspot Service Provider profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"friendly_names\": [\n    {\n      \"name\": \"string\",\n      \"language\": \"qcc\"\n    }\n  ],\n  \"descriptions\": [\n    {\n      \"name\": \"string\",\n      \"language\": \"svp\"\n    }\n  ],\n  \"icon_files\": [\n    {\n      \"file_directory_name\": \"string\",\n      \"file\": \"string\",\n      \"language\": \"string\"\n    }\n  ],\n  \"nai_realms\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"eap_methods\": [\n        \"EAP_TTLS_PAP\"\n      ],\n      \"encoding_type\": \"RFC_4282\"\n    }\n  ],\n  \"roaming_consortiums\": [\n    {\n      \"consortium_id\": \"9b0E76e2717024\",\n      \"description\": \"string\"\n    }\n  ],\n  \"cellular_networks\": [\n    {\n      \"mcc\": \"408\",\n      \"mnc\": \"85\",\n      \"description\": \"string\"\n    }\n  ],\n  \"osu_uri\": \"string\",\n  \"osu_methods\": [\n    \"OMA_DM\"\n  ],\n  \"osu_nai\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hotspot-service-provider-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hotspot-service-provider-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Hotspot Service Provider profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/hotspot-service-provider-profiles/{{hotspot_service_provider_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hotspot-service-provider-profiles",
								"{{hotspot_service_provider_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Hotspot Service Provider profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"friendly_names\": [\n    {\n      \"name\": \"string\",\n      \"language\": \"ngf\"\n    }\n  ],\n  \"descriptions\": [\n    {\n      \"name\": \"string\",\n      \"language\": \"pxy\"\n    }\n  ],\n  \"icon_files\": [\n    {\n      \"file_directory_name\": \"string\",\n      \"file\": \"string\",\n      \"language\": \"string\"\n    }\n  ],\n  \"nai_realms\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"eap_methods\": [\n        \"EAP_TTLS_PAP\"\n      ],\n      \"encoding_type\": \"RFC_4282\"\n    }\n  ],\n  \"roaming_consortiums\": [\n    {\n      \"consortium_id\": \"Dab7c2C5a569C2a4A6\",\n      \"description\": \"string\"\n    }\n  ],\n  \"cellular_networks\": [\n    {\n      \"mcc\": \"055\",\n      \"mnc\": \"19\",\n      \"description\": \"string\"\n    }\n  ],\n  \"osu_uri\": \"string\",\n  \"osu_methods\": [\n    \"OMA_DM\"\n  ],\n  \"osu_nai\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hotspot-service-provider-profiles/{{hotspot_service_provider_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hotspot-service-provider-profiles",
								"{{hotspot_service_provider_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Hotspot Service Provider profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/hotspot-service-provider-profiles/{{hotspot_service_provider_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hotspot-service-provider-profiles",
								"{{hotspot_service_provider_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List IoT profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/iot-profiles?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"iot-profiles"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "appId",
									"value": "THREAD_GATEWAY",
									"description": "Application ID, e.g. THREAD_GATEWAY\n\nAvailable values : THREAD_GATEWAY",
									"disabled": true
								},
								{
									"key": "appSupported",
									"value": "SINGLE",
									"description": "Application Supported, e.g. SINGLE or MULTI\n\nAvailable values : SINGLE, MULTI",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a IoT profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"app_id\": \"THREAD_GATEWAY\",\n  \"thread_gateway\": {\n    \"short_pan_id\": \"stri\",\n    \"ext_pan_id\": \"stringstringstri\",\n    \"master_key\": \"stringstringstringstringstringst\",\n    \"network_name\": \"string\",\n    \"channel\": 0,\n    \"comm_credentials\": \"string\",\n    \"comm_timeout\": 2000000,\n    \"enable_nat64\": true,\n    \"white_list\": [\n      {\n        \"long_eui\": \"string\",\n        \"pskd\": \"string\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/iot-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"iot-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get IoT profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/iot-profiles/{{iot_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"iot-profiles",
								"{{iot_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update IoT profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"app_id\": \"THREAD_GATEWAY\",\n  \"thread_gateway\": {\n    \"short_pan_id\": \"stri\",\n    \"ext_pan_id\": \"stringstringstri\",\n    \"master_key\": \"stringstringstringstringstringst\",\n    \"network_name\": \"string\",\n    \"channel\": 0,\n    \"comm_credentials\": \"string\",\n    \"comm_timeout\": 2000000,\n    \"enable_nat64\": true,\n    \"white_list\": [\n      {\n        \"long_eui\": \"string\",\n        \"pskd\": \"string\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/iot-profiles/{{iot_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"iot-profiles",
								"{{iot_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete IoT profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/iot-profiles/{{iot_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"iot-profiles",
								"{{iot_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List IP Firewall policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ip-firewall-policies?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ip-firewall-policies"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create IP Firewall policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"rules\": [\n    {\n      \"action\": \"PERMIT\",\n      \"service_id\": 0,\n      \"source_ip_id\": 0,\n      \"destination_ip_id\": 0,\n      \"logging_type\": \"OFF\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ip-firewall-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ip-firewall-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get IP Firewall Policy by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ip-firewall-policies/{{ip_firewall_policy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ip-firewall-policies",
								"{{ip_firewall_policy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update IP Firewall Policy by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"rules\": [\n    {\n      \"action\": \"PERMIT\",\n      \"service_id\": 0,\n      \"source_ip_id\": 0,\n      \"destination_ip_id\": 0,\n      \"logging_type\": \"OFF\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ip-firewall-policies/{{ip_firewall_policy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ip-firewall-policies",
								"{{ip_firewall_policy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete IP Firewall Policy by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ip-firewall-policies/{{ip_firewall_policy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ip-firewall-policies",
								"{{ip_firewall_policy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach IP Firewall Rule to IP Firewall Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"PERMIT\",\n  \"service_id\": 0,\n  \"source_ip_id\": 0,\n  \"destination_ip_id\": 0,\n  \"logging_type\": \"OFF\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ip-firewall-policies/{{ip_firewall_policy_id}}/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ip-firewall-policies",
								"{{ip_firewall_policy_id}}",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Detach IP Firewall Rule to IP Firewall Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ip-firewall-policies/{{ip_firewall_policy_id}}/:detach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ip-firewall-policies",
								"{{ip_firewall_policy_id}}",
								":detach"
							],
							"variable": [
								{
									"key": "detach",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List L3 address profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/l3-address-profiles?addressType=L3_ADDRESS_TYPE_IP_ADDRESS",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"l3-address-profiles"
							],
							"query": [
								{
									"key": "addressType",
									"value": "L3_ADDRESS_TYPE_IP_ADDRESS",
									"description": "The address type\n\nAvailable values : L3_ADDRESS_TYPE_UNSPECIFIED, L3_ADDRESS_TYPE_IP_ADDRESS, L3_ADDRESS_TYPE_IP_SUBNET, L3_ADDRESS_TYPE_IP_RANGE, L3_ADDRESS_TYPE_HOST_NAME, L3_ADDRESS_TYPE_WILDCARD_HOST_NAME, L3_ADDRESS_TYPE_WILDCARD, UNRECOGNIZED"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a L3 address profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"ip_address_profile\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"value\": \"string\",\n  \"address_type\": \"IP_ADDRESS\",\n  \"enable_classification\": true,\n  \"classified_entries\": [\n    {\n      \"class_asgn_id\": 0,\n      \"value\": \"string\",\n      \"description\": \"string\",\n      \"netmask\": \"string\",\n      \"ip_address_end\": \"string\",\n      \"wildcard_mask\": \"string\"\n    }\n  ],\n  \"ip_address_end\": \"string\",\n  \"netmask\": \"string\",\n  \"wildcard_mask\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/l3-address-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"l3-address-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a L3 address profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"ip_address_profile\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/l3-address-profiles/{{l3_address_profile}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"l3-address-profiles",
								"{{l3_address_profile}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a L3 address profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"ip_address_profile\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"enable_classification\": true,\n  \"classified_entries\": [\n    {\n      \"class_asgn_id\": 0,\n      \"value\": \"string\",\n      \"description\": \"string\",\n      \"netmask\": \"string\",\n      \"ip_address_end\": \"string\",\n      \"wildcard_mask\": \"string\"\n    }\n  ],\n  \"ip_address_end\": \"string\",\n  \"netmask\": \"string\",\n  \"wildcard_mask\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/l3-address-profiles/{{l3_address_profile}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"l3-address-profiles",
								"{{l3_address_profile}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a L3 address profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/l3-address-profiles/{{l3_address_profile}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"l3-address-profiles",
								"{{l3_address_profile}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List MAC Firewall Policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/mac-firewall-policies?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"mac-firewall-policies"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create MAC Firewall Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"rules\": [\n    {\n      \"action\": \"PERMIT\",\n      \"source_mac\": 0,\n      \"destination_mac\": 0,\n      \"logging_type\": \"OFF\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/mac-firewall-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"mac-firewall-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Mac Firewall Policy by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/mac-firewall-policies/{{mac_firewall_policy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"mac-firewall-policies",
								"{{mac_firewall_policy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update MAC Firewall Policy by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"rules\": [\n    {\n      \"action\": \"PERMIT\",\n      \"source_mac\": 0,\n      \"destination_mac\": 0,\n      \"logging_type\": \"OFF\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/mac-firewall-policies/{{mac_firewall_policy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"mac-firewall-policies",
								"{{mac_firewall_policy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete MAC Firewall Policy by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/mac-firewall-policies/{{mac_firewall_policy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"mac-firewall-policies",
								"{{mac_firewall_policy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach MAC Firewall Rule to MAC Firewall Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"action\": \"PERMIT\",\n  \"source_mac\": 0,\n  \"destination_mac\": 0,\n  \"logging_type\": \"OFF\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/mac-firewall-policies/{{mac_firewall_policy_id}}/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"mac-firewall-policies",
								"{{mac_firewall_policy_id}}",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Detach MAC Firewall Rule to MAC Firewall Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/mac-firewall-policies/{{mac_firewall_policy_id}}/:detach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"mac-firewall-policies",
								"{{mac_firewall_policy_id}}",
								":detach"
							],
							"variable": [
								{
									"key": "detach",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List MAC Object Profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/mac-object-profiles?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"mac-object-profiles"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create MAC Object Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"value\": \"string\",\n  \"mac_type\": \"MAC_OUI\",\n  \"mac_address_end\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/mac-object-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"mac-object-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Mac Object by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/mac-object-profiles/{{mac_object_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"mac-object-profiles",
								"{{mac_object_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update MAC Object by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"value\": \"string\",\n  \"mac_address_end\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/mac-object-profiles/{{mac_object_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"mac-object-profiles",
								"{{mac_object_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete MAC Object by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/mac-object-profiles/{{mac_object_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"mac-object-profiles",
								"{{mac_object_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Radio Operating Modes by product type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"wireless_interface_list\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-operating-modes/{{productType}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-operating-modes",
								"{{productType}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List radio profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new radio profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"transmission_power\": 20,\n  \"max_transmit_power\": 20,\n  \"transmission_power_floor\": 20,\n  \"transmission_power_max_drop\": 18,\n  \"max_clients\": 255,\n  \"enable_client_transmission_power\": true,\n  \"client_transmission_power\": 20,\n  \"radio_mode\": \"B_G\",\n  \"enable_ofdma\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get radio profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/{{radio_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"{{radio_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update radio profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"transmission_power\": 20,\n  \"max_transmit_power\": 20,\n  \"transmission_power_floor\": 20,\n  \"transmission_power_max_drop\": 18,\n  \"max_clients\": 255,\n  \"enable_client_transmission_power\": true,\n  \"client_transmission_power\": 20,\n  \"radio_mode\": \"B_G\",\n  \"enable_ofdma\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/{{radio_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"{{radio_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete radio profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/{{radio_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"{{radio_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get channel selection settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"channel\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/channel-selection/{{channel_selection_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"channel-selection",
								"{{channel_selection_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update channel selection settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"channel\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enable_dynamic_channel_switching\": true,\n  \"channel_width\": \"string\",\n  \"enable_dynamic_frequency_selection\": true,\n  \"enable_static_channel\": true,\n  \"enable_zero_wait_dfs\": true,\n  \"enable_use_last_selection\": true,\n  \"exclude_channels\": \"string\",\n  \"exclude_channels_width\": \"string\",\n  \"channel\": 165,\n  \"enable_limit_channel_selection\": true,\n  \"channel_region\": \"string\",\n  \"channel_model\": 4,\n  \"channels\": \"string\",\n  \"enable_channel_auto_selection\": true,\n  \"channel_selection_start_time\": \"string\",\n  \"channel_selection_end_time\": \"string\",\n  \"enable_avoid_switch_channel_if_clients_connected\": true,\n  \"channel_selection_max_clients\": 100,\n  \"enable_switch_channel_if_exceed_threshold\": true,\n  \"rf_interference_threshold\": 80,\n  \"crc_error_threshold\": 80\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/channel-selection/{{channel_selection_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"channel-selection",
								"{{channel_selection_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List MAC OUI profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/mac-ouis?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"mac-ouis"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a  MAC OUI profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"value\": \"string\",\n  \"description\": \"string\",\n  \"mac_type\": \"string\",\n  \"defender_defined\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/mac-ouis",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"mac-ouis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get MAC OUI profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/mac-ouis/{{mac_oui_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"mac-ouis",
								"{{mac_oui_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update MAC OUI profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"value\": \"string\",\n  \"description\": \"string\",\n  \"mac_type\": \"string\",\n  \"defender_defined\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/mac-ouis/{{mac_oui_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"mac-ouis",
								"{{mac_oui_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete MAC OUI profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/mac-ouis/{{mac_oui_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"mac-ouis",
								"{{mac_oui_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get radio miscellaneous settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/miscellaneous/{{radio_misc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"miscellaneous",
								"{{radio_misc_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update radio miscellaneous settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sla_throughput_level\": \"string\",\n  \"radio_range\": 10000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/miscellaneous/{{radio_misc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"miscellaneous",
								"{{radio_misc_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get neighborhood analysis settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/neighborhood-analysis/{{neigh_analysis_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"neighborhood-analysis",
								"{{neigh_analysis_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update neighborhood analysis settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enable_background_scan\": true,\n  \"background_scan_interval\": 1440,\n  \"enable_skip_scan_when_clients_connected\": true,\n  \"enable_skip_scan_when_clients_in_power_save_mode\": true,\n  \"enable_skip_scan_when_process_voice_traffic\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/neighborhood-analysis/{{neigh_analysis_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"neighborhood-analysis",
								"{{neigh_analysis_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get radio usage optimization settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/radio-usage-opt/{{radio_usage_opt_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"radio-usage-opt",
								"{{radio_usage_opt_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update radio usage optimization settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"preamble\": \"string\",\n  \"beacon_period\": 3500,\n  \"enable_frame_burst\": true,\n  \"enable_smart_antenna\": true,\n  \"enable_backhaul_failover\": true,\n  \"wireless_backhaul_switch_trigger_time\": 5,\n  \"wired_backhaul_revert_hold_time\": 300,\n  \"enable_band_steering\": true,\n  \"band_steering_mode\": \"string\",\n  \"ratio_for5g_clients\": 100,\n  \"ignore_initial_client_connection_number\": 100,\n  \"enable_client_load_balancing\": true,\n  \"load_balancing_mode\": \"string\",\n  \"crc_error_rate_per_device\": 99,\n  \"rf_interference_per_device\": 99,\n  \"average_airtime_per_client\": 5,\n  \"anchor_period\": 600,\n  \"neighbor_query_interval\": 600,\n  \"enable_weak_signal_probe_request_suppression\": true,\n  \"weak_snr_threshold\": 100,\n  \"enable_safety_net\": true,\n  \"safety_net_period\": 300,\n  \"enable_high_density\": true,\n  \"management_frame_basic_data_rate\": \"string\",\n  \"enable_suppress_successive_probe_request\": true,\n  \"probe_response_reduction_option\": \"string\",\n  \"suppression_limit\": 10,\n  \"enable_radio_balance\": true,\n  \"mac_oui_ids\": [\n    0\n  ],\n  \"enable_ampdu\": true,\n  \"enable_mu_mimo\": true,\n  \"enable_ofdma_down_link\": true,\n  \"enable_ofdma_up_link\": true,\n  \"bss_coloring\": 63,\n  \"enable_target_weak_time\": true\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/radio-usage-opt/{{radio_usage_opt_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"radio-usage-opt",
								"{{radio_usage_opt_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get sensor scan settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/sensor-scan/{{sensor_scan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"sensor-scan",
								"{{sensor_scan_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update sensor scan settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enable_scan_all_channels\": true,\n  \"dwell_time\": \"string\",\n  \"scan_channels\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/sensor-scan/{{sensor_scan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"sensor-scan",
								"{{sensor_scan_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WMM QoS settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/wmm-qos/{{radio_qos_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"wmm-qos",
								"{{radio_qos_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update WMM QoS settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"arbitration_interframe_space\": 15,\n  \"min_contention_window\": 15,\n  \"max_contention_window\": 15,\n  \"transmission_opportunity_limit\": 8192,\n  \"enable_no_ack\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/wmm-qos/{{radio_qos_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"wmm-qos",
								"{{radio_qos_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List SSIDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Rename SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"string\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/:rename",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								":rename"
							],
							"variable": [
								{
									"key": "rename",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach client monitor profile to an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"client_monitor_profile_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/client-monitor-profile/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"client-monitor-profile",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach CWP to an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/cwp/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"cwp",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable the CWP on an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/cwp/:disable",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"cwp",
								":disable"
							],
							"variable": [
								{
									"key": "disable",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable and attach the CWP on an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/cwp/:enable",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"cwp",
								":enable"
							],
							"variable": [
								{
									"key": "enable",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to 802.1X",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_management\": \"WPA3_8021X\",\n  \"encryption_method\": \"CCMP\",\n  \"enable_idm\": true,\n  \"transition_mode\": true,\n  \"radius_server_group_id\": 0,\n  \"user_group_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/dot1x",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"dot1x"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to open access",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/open",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"open"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to PPSK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_management\": \"WPA_PSK\",\n  \"encryption_method\": \"CCMP\",\n  \"user_group_ids\": [\n    0\n  ],\n  \"enable_max_clients_per_ppsk\": true,\n  \"max_clients_per_ppsk\": 15,\n  \"enable_mac_bind\": true,\n  \"max_macs_per_ppsk\": 5,\n  \"ppsk_server_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/ppsk",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"ppsk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to PSK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_management\": \"WPA_PSK\",\n  \"encryption_method\": \"CCMP\",\n  \"anti_logging_threshold\": 0,\n  \"key_type\": \"ASCII\",\n  \"key_value\": \"string\",\n  \"sae_group\": \"ALL\",\n  \"transition_mode\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/psk",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"psk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to WEP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_management\": \"WEP_8021X\",\n  \"encryption_method\": \"WEP104\",\n  \"authentication_method\": \"OPEN\",\n  \"default_key\": \"FIRST\",\n  \"key_type\": \"ASCII\",\n  \"key_value\": \"abcd123456789\",\n  \"key_value2\": \"string\",\n  \"key_value3\": \"string\",\n  \"key_value4\": \"string\",\n  \"radius_server_group_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/wep",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"wep"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID PSK password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"string\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/psk/password",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"psk",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach RADIUS client profile to an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/radius-client-profile/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"radius-client-profile",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach radius server group to an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/radius-server-group/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"radius-server-group",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach user profile assignment to an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_profile_assignment_rules\": [\n    {\n      \"user_profile_id\": 0,\n      \"user_profile_assignment_id\": 0\n    }\n  ],\n  \"enable_user_profile_assignment\": true,\n  \"enable_radius_attribute_user_profile_assignment\": true,\n  \"attribute_type\": \"TUNNEL\",\n  \"attribute_key\": 0,\n  \"default_radius_client_object_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/user-profile-assignment/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"user-profile-assignment",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach user profile to an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/user-profile/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"user-profile",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SSID advanced settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/advanced-settings/{{ssid_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"advanced-settings",
								"{{ssid_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update SSID advanced settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enable802_dot11mc\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/advanced-settings/{{ssid_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"advanced-settings",
								"{{ssid_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List user profile assignments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profile-assignments?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profile-assignments"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a user profile assignment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"folder_ids\": [\n    0\n  ],\n  \"assignment_radius_attribute\": {\n    \"attribute_type\": \"TUNNEL\",\n    \"attribute_values\": \"string\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profile-assignments",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profile-assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user profile assignment by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profile-assignments/{{user_profile_assignment_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profile-assignments",
								"{{user_profile_assignment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an user profile assignment by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profile-assignments/{{user_profile_assignment_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profile-assignments",
								"{{user_profile_assignment_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List user profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a user profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Testing\",\n  \"vlan_profile_id\": {{vlan_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"vlan_profile_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach IP Firewall to an User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"policy_id\": {{ip_firewall_policy_id}},\n  \"traffic\": \"INBOUND\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}/ip-filrewall-policies/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}",
								"ip-filrewall-policies",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Detach IP Firewall to an User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"policy_id\": {{ip_firewall_policy_id}},\n  \"traffic\": \"INBOUND\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}/ip-filrewall-policies/:detach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}",
								"ip-filrewall-policies",
								":detach"
							],
							"variable": [
								{
									"key": "detach",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach MAC Firewall to an User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"policy_id\": {{mac_firewall_policy_id}},\n  \"traffic\": \"INBOUND\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}/mac-filrewall-policies/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}",
								"mac-filrewall-policies",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Detach MAC Firewall to an User Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"policy_id\": {{mac_firewall_policy_id}},\n  \"traffic\": \"INBOUND\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}/mac-filrewall-policies/:detach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}",
								"mac-filrewall-policies",
								":detach"
							],
							"variable": [
								{
									"key": "detach",
									"value": ""
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Network",
			"item": [
				{
					"name": "List Network Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-services?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-services"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "name",
									"value": null,
									"description": "Network Service name.",
									"disabled": true
								},
								{
									"key": "ipProtocol",
									"value": null,
									"description": "IP Protocol, only for custom Application\nTCP, UDP, SVP, CUSTOM",
									"disabled": true
								},
								{
									"key": "aigType",
									"value": null,
									"description": "Application Layer Gateway (ALG) type, only for custom Application\nNONE, FTP, TFTP, SIP, DNS, HTTP",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Network Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"ip_protocol\": \"TCP\",\n  \"protocol_number\": 0,\n  \"port_number\": 0,\n  \"alg_type\": \"NONE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-services",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Network Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-services/{{network_service_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-services",
								"{{network_service_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Tunnel Concentrators",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/tunnel-concentrators?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tunnel-concentrators"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Tunnel Concentrators",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"redundant\": true,\n  \"primary_tc\": 0,\n  \"backup_tc\": 0,\n  \"primary_listening_interface\": 4,\n  \"backup_listening_interface\": 4,\n  \"primary_bridging_interface\": 4,\n  \"backup_bridging_interface\": 4,\n  \"primary_ip\": \"string\",\n  \"backup_ip\": \"string\",\n  \"primary_vlan\": 4094,\n  \"backup_vlan\": 4094,\n  \"primary_tagged\": true,\n  \"backup_tagged\": true,\n  \"tunnel_address\": \"string\",\n  \"router_id\": 0,\n  \"gateway\": \"string\",\n  \"native_vlan\": 4094\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/tunnel-concentrators",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tunnel-concentrators"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Tunnel Concentrator By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/tunnel-concentrators/{{tunnel_conc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tunnel-concentrators",
								"{{tunnel_conc_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Tunnel Concentrator By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"redundant\": true,\n  \"primary_tc\": 0,\n  \"backup_tc\": 0,\n  \"primary_listening_interface\": 4,\n  \"backup_listening_interface\": 4,\n  \"primary_bridging_interface\": 4,\n  \"backup_bridging_interface\": 4,\n  \"primary_ip\": \"string\",\n  \"backup_ip\": \"string\",\n  \"primary_vlan\": 4094,\n  \"backup_vlan\": 4094,\n  \"primary_tagged\": true,\n  \"backup_tagged\": true,\n  \"tunnel_address\": \"string\",\n  \"router_id\": 0,\n  \"gateway\": \"string\",\n  \"native_vlan\": 4094\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/tunnel-concentrators/{{tunnel_conc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tunnel-concentrators",
								"{{tunnel_conc_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Tunnel Concentrator By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/tunnel-concentrators/{{tunnel_conc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tunnel-concentrators",
								"{{tunnel_conc_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Authentication",
			"item": [
				{
					"name": "List active directory servers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ad-servers?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ad-servers"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List captive web portals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/cwps?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"cwps"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List LDAP servers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create LDAP server",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"enable_tls\": true,\n  \"bind_dn\": \"string\",\n  \"bind_dn_password\": \"string\",\n  \"base_dn\": \"string\",\n  \"l3_address_profile_id\": 0,\n  \"protocol_type\": \"LDAP\",\n  \"enable_strip_realm_name\": false,\n  \"destination_port\": 10,\n  \"verification_mode\": \"TRY\",\n  \"ca_certificate_id\": 0,\n  \"client_certificate_id\": 0,\n  \"client_key_id\": 0,\n  \"client_key_password\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get LDAP server by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers/{{ldap_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers",
								"{{ldap_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update LDAP server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"enable_tls\": true,\n  \"bind_dn\": \"string\",\n  \"bind_dn_password\": \"string\",\n  \"base_dn\": \"string\",\n  \"l3_address_profile_id\": 0,\n  \"protocol_type\": \"LDAP\",\n  \"enable_strip_realm_name\": true,\n  \"destination_port\": 1,\n  \"verification_mode\": \"TRY\",\n  \"ca_certificate_id\": 0,\n  \"client_certificate_id\": 0,\n  \"client_key_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers/{{ldap_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers",
								"{{ldap_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete LDAP server",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers/{{ldap_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers",
								"{{ldap_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List RADIUS client objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create RADIUS client objects configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"enable_inject_operator_name_attribute\": true,\n  \"enable_message_authenticator_attribute\": true,\n  \"enable_permit_dynamic_authorization_message_change\": true,\n  \"retry_interval\": 100000000,\n  \"accounting_interim_update_interval\": 100000000,\n  \"entries\": [\n    {\n      \"server_role\": \"PRIMARY\",\n      \"server_type\": \"EXTERNAL_RADIUS_SERVER\",\n      \"radius_server_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS client object by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update RADIUS client object configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"enable_inject_operator_name_attribute\": true,\n  \"enable_message_authenticator_attribute\": true,\n  \"enable_permit_dynamic_authorization_message_change\": true,\n  \"retry_interval\": 100000000,\n  \"accounting_interim_update_interval\": 100000000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete RADIUS client object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS proxies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-proxies?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-proxies"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create RADIUS proxy configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"radius-proxy-1\",\n  \"description\": \"Radius Proxy 1\",\n  \"format_type\": \"NAI\",\n  \"retry_count\": 3,\n  \"retry_delay\": 5,\n  \"dead_time\": 300,\n  \"enable_inject_operator_name_attribute\": false,\n  \"device_ids\": [\n{{device_id}}\n  ],\n  \"clients\": [\n    {\n      \"shared_secret\": \"123456\",\n      \"description\": \"\",\n      \"l3_address_profile_id\": 1000\n    }\n  ],\n  \"realms\": [\n    {\n      \"name\": \"NULL\",\n      \"enable_strip_realm_name\": false,\n      \"radius_client_object_id\": 2000\n    },\n    {\n      \"name\": \"DEFAULT\",\n      \"enable_strip_realm_name\": false,\n      \"radius_client_object_id\": 3000\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-proxies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-proxies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS proxy configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-proxies/{{radius_proxy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-proxies",
								"{{radius_proxy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update RADIUS proxy configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"radius-proxy-1\",\n  \"description\": \"Radius Proxy 1\",\n  \"format_type\": \"NAI\",\n  \"retry_count\": 3,\n  \"retry_delay\": 5,\n  \"dead_time\": 300,\n  \"enable_inject_operator_name_attribute\": false,\n  \"clients\": [\n    {\n      \"id\": {{client_id}}\n    },\n    {\n      \"shared_secret\": \"123456\",\n      \"description\": \"\",\n      \"l3_address_profile_id\": 1000\n    }\n  ],\n  \"realms\": [\n    {\n      \"id\": 1\n    },\n    {\n      \"id\": 2\n    },\n    {\n      \"name\": \"test-realm\",\n      \"enable_strip_realm_name\": false,\n      \"radius_client_object_id\": 3000\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-proxies/{{radius_proxy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-proxies",
								"{{radius_proxy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete RADIUS proxy configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-proxies/{{radius_proxy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-proxies",
								"{{radius_proxy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS proxies Devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-proxies/devices?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-proxies",
								"devices"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List external RADIUS servers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create external RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"shared_secret\": \"string\",\n  \"authentication_port\": 1812,\n  \"accounting_port\": 1813,\n  \"server_type\": \"BOTH\",\n  \"ip_addr\": \"string\",\n  \"enable_a3\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get external RADIUS server by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{ex_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{ex_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update external RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"shared_secret\": \"string\",\n  \"authentication_port\": 1812,\n  \"accounting_port\": 1813,\n  \"server_type\": \"BOTH\",\n  \"ip_addr\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{ex_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{ex_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete external RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{ex_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{ex_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List internal RADIUS servers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create internal RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"authentication_method_group\": \"TLS_PEAP_TTLS_LEAP_MD5\",\n  \"default_authentication_method\": \"TLS\",\n  \"enable_verify_server_cert\": true,\n  \"server_key_password\": \"string\",\n  \"enable_check_cert_common_name\": true,\n  \"enable_check_user_for_tls_auth\": true,\n  \"enable_check_user_for_peap_auth\": true,\n  \"enable_check_user_for_ttls_auth\": true,\n  \"enable_authentication_server\": true,\n  \"enable_radius_accounting_settings\": true,\n  \"authentication_server_port\": 1812,\n  \"active_session_limit\": 0,\n  \"active_session_age_timeout\": 1800,\n  \"external_user_directory\": {\n    \"ldap_retry_interval\": 600,\n    \"local_check_interval\": 300,\n    \"remote_check_interval\": 30,\n    \"enable_radius_server_credential_caching\": true,\n    \"cache_lifetime\": 86400,\n    \"user_group_attribute\": \"memberOf\",\n    \"external_user_directory_type\": \"OPEN_LDAP\",\n    \"entries\": [\n      {\n        \"default_server_id\": 0,\n        \"server_role\": \"PRIMARY\"\n      }\n    ]\n  },\n  \"ca_certificate_id\": 0,\n  \"server_certificate_id\": 0,\n  \"server_key_id\": 0,\n  \"device_ids\": [\n    0\n  ],\n  \"clients\": [\n    {\n      \"id\": 0,\n      \"shared_secret\": \"string\",\n      \"description\": \"string\",\n      \"l3_address_profile_id\": 0\n    }\n  ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[LRO] Delete Multiple internal RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"authentication_method_group\": \"TLS_PEAP_TTLS_LEAP_MD5\",\n  \"default_authentication_method\": \"TLS\",\n  \"enable_verify_server_cert\": true,\n  \"server_key_password\": \"string\",\n  \"enable_check_cert_common_name\": true,\n  \"enable_check_user_for_tls_auth\": true,\n  \"enable_check_user_for_peap_auth\": true,\n  \"enable_check_user_for_ttls_auth\": true,\n  \"enable_authentication_server\": true,\n  \"enable_radius_accounting_settings\": true,\n  \"authentication_server_port\": 1812,\n  \"active_session_limit\": 0,\n  \"active_session_age_timeout\": 1800,\n  \"external_user_directory\": {\n    \"ldap_retry_interval\": 600,\n    \"local_check_interval\": 300,\n    \"remote_check_interval\": 30,\n    \"enable_radius_server_credential_caching\": true,\n    \"cache_lifetime\": 86400,\n    \"user_group_attribute\": \"memberOf\",\n    \"external_user_directory_type\": \"OPEN_LDAP\",\n    \"entries\": [\n      {\n        \"default_server_id\": 0,\n        \"server_role\": \"PRIMARY\"\n      }\n    ]\n  },\n  \"ca_certificate_id\": 0,\n  \"server_certificate_id\": 0,\n  \"server_key_id\": 0,\n  \"device_ids\": [\n    0\n  ],\n  \"clients\": [\n    {\n      \"id\": 0,\n      \"shared_secret\": \"string\",\n      \"description\": \"string\",\n      \"l3_address_profile_id\": 0\n    }\n  ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal?ids={{radius_id}}&async=false",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{radius_id}}",
									"description": "The internal RADIUS server IDs to be delete, min = 1 ID, max = 100 IDs"
								},
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get internal RADIUS server by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal/{{int_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal",
								"{{int_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update internal RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"authentication_method_group\": \"TLS_PEAP_TTLS_LEAP_MD5\",\n  \"default_authentication_method\": \"TLS\",\n  \"enable_verify_server_cert\": true,\n  \"server_key_password\": \"string\",\n  \"enable_check_cert_common_name\": true,\n  \"enable_check_user_for_tls_auth\": true,\n  \"enable_check_user_for_peap_auth\": true,\n  \"enable_check_user_for_ttls_auth\": true,\n  \"enable_authentication_server\": true,\n  \"enable_radius_accounting_settings\": true,\n  \"authentication_server_port\": 1812,\n  \"active_session_limit\": 0,\n  \"active_session_age_timeout\": 30,\n  \"ca_certificate_id\": 0,\n  \"server_certificate_id\": 0,\n  \"server_key_id\": 0,\n  \"clients\": [\n    {\n      \"id\": 0,\n      \"shared_secret\": \"string\",\n      \"description\": \"string\",\n      \"l3_address_profile_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal/{{int_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal",
								"{{int_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete internal RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal/{{int_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal",
								"{{int_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all internal RADIUS devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal/devices?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal",
								"devices"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Conifguration - Certificate",
			"item": [
				{
					"name": "List certificates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"cert_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/certificates?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"certificates"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "certType",
									"value": "CERT",
									"description": "The certificate type\n\nAvailable values : CERT, KEY",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Copilot - Connectivity Experience",
			"item": [
				{
					"name": "Copilot Connectivity Client-type",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sites_by_wireless\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/client-type?startTime={{myStartTime}}&endTime={{myEndTime}}&page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"client-type"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "locationId",
									"value": "",
									"description": "The location Id\n\nDefault value : 0",
									"disabled": true
								},
								{
									"key": "clientType",
									"value": "",
									"description": "The client type\n\nAvailable values : WIRELESS, WIRED, UNSPECIFIED",
									"disabled": true
								},
								{
									"key": "forensicBucket",
									"value": "",
									"description": "The time period bucket detected\n\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Connectivity Locations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/locations?startTime={{myStartTime}}&endTime={{myEndTime}}&page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"locations"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "sort by name or quality index\n\nAvailable values : NAME, QUALITY_INDEX",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (ascending by default)\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "",
									"description": "The location Id\n\nDefault value : 0",
									"disabled": true
								},
								{
									"key": "searchKey",
									"value": "",
									"description": "The search value",
									"disabled": true
								},
								{
									"key": "clientType",
									"value": "",
									"description": "The client type\n\nAvailable values : WIRELESS, WIRED",
									"disabled": true
								},
								{
									"key": "forensicBucket",
									"value": null,
									"description": "The time period bucket detected",
									"disabled": true
								},
								{
									"key": "query",
									"value": null,
									"description": "The quality index value",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wired Events",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wired/events?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&page=1&limit=10&forensicBucket=TWENTY_FOUR_HOURS&scoreType=PORT_ERRORS&locationId={{loc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wired",
								"events"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "sortBy",
									"value": "INTERFACE_ERRORS",
									"description": "The sort field\nAvailable values : INTERFACE_ERRORS",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (ascending by default)\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "viewId",
									"value": "",
									"description": "The view id based on view type",
									"disabled": true
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS"
								},
								{
									"key": "scoreType",
									"value": "PORT_ERRORS",
									"description": "The selected score type\nAvailable values : PORT_ERRORS"
								},
								{
									"key": "searchKey",
									"value": "",
									"description": "The selected search key\n\nDefault value :",
									"disabled": true
								},
								{
									"key": "locationType",
									"value": "BUILDING",
									"description": "The selected location type\n\nDefault value :",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The selected location id"
								},
								{
									"key": "timestamp",
									"value": "",
									"description": "The timestamp to query, epoch time in milliseconds since 1/1/1970",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wired Experience",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wired/experience?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wired",
								"experience"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "The sort field\nAvailable values : NAME, QUALITY_INDEX",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (ascending by default)\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wired Hardware",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"quality_index_graph\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wired/hardware?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&forensicBucket=TWENTY_FOUR_HOURS",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wired",
								"hardware"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": null,
									"description": "The view id based on view type",
									"disabled": true
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wired Locations Hardware",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"quality_index_graph\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wired/locations/hardware?startTime={{myStartTime}}&endTime={{myEndTime}}&forensicBucket=TWENTY_FOUR_HOURS",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wired",
								"locations",
								"hardware"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": "",
									"description": "The view id based on view type",
									"disabled": true
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wired Quality-Index",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Feb 15, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"quality_index\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wired/quality-index?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&forensicBucket=TWENTY_FOUR_HOURS",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wired",
								"quality-index"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": null,
									"description": "The view id based on view type",
									"disabled": true
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Apps",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_apps\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/apps?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&viewId=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"apps"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION, SSID, OS"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": "0",
									"description": "The view id based on view type"
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The location identifier\n\nDefault value : 0",
									"disabled": true
								},
								{
									"key": "locationType",
									"value": "BUILDING",
									"description": "The location type\n\nDefault value :",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Events",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/events?viewType=LOCATION&page=1&limit=10&startTime={{myStartTime}}&endTime={{myEndTime}}&scoreType=TIME_TO_AUTHENTICATE",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"events"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION, SSID, OS"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "sortField",
									"value": "AVERAGE_VALUE",
									"description": "the sort field\n\nAvailable values : AVERAGE_VALUE, AVG_RX_RETRY, AVG_TX_RETRY",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (ascending by default)\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "viewId",
									"value": "",
									"description": "The view id based on view type",
									"disabled": true
								},
								{
									"key": "scoreType",
									"value": "TIME_TO_AUTHENTICATE",
									"description": "The wireless score type\nAvailable values : TIME_TO_AUTHENTICATE, TIME_TO_ASSOCIATE, TIME_TO_DHCP, DNS, RETRIES"
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								},
								{
									"key": "searchKey",
									"value": "",
									"description": "The selected search key",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The selected location id",
									"disabled": true
								},
								{
									"key": "locationType",
									"value": "BUILDING",
									"description": "The selected location type",
									"disabled": true
								},
								{
									"key": "timestamp",
									"value": "",
									"description": "The timestamp to query, epoch time in milliseconds since 1/1/1970",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Experience",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/experience?viewType=LOCATION&page=1&limit=10&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"experience"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION, SSID, OS"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "The sort field\nAvailable values : NAME, QUALITY_INDEX",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (ascending by default)\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Location Events",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/locations/events?page=1&limit=10&startTime={{myStartTime}}&endTime={{myEndTime}}&scoreType=TIME_TO_AUTHENTICATE&locationId={{loc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"locations",
								"events"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "sortField",
									"value": "AVERAGE_VALUE",
									"description": "the sort field\n\nAvailable values : AVERAGE_VALUE, AVG_RX_RETRY, AVG_TX_RETRY",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (ascending by default)\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "scoreType",
									"value": "TIME_TO_AUTHENTICATE",
									"description": "The wireless score type\nAvailable values : TIME_TO_AUTHENTICATE, TIME_TO_ASSOCIATE, TIME_TO_DHCP, DNS, RETRIES"
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								},
								{
									"key": "searchKey",
									"value": "",
									"description": "The selected search key",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The selected location id"
								},
								{
									"key": "timestamp",
									"value": "",
									"description": "The timestamp to query, epoch time in milliseconds since 1/1/1970",
									"disabled": true
								},
								{
									"key": "ssid",
									"value": null,
									"description": "The ssid",
									"disabled": true
								},
								{
									"key": "osType",
									"value": null,
									"description": "The os type",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Locations Performance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"quality_index_graph\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/locations/performance?buildingId={{building_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"locations",
								"performance"
							],
							"query": [
								{
									"key": "buildingId",
									"value": "{{building_id}}",
									"description": "The location identifier for building"
								},
								{
									"key": "ssid",
									"value": "",
									"description": "The ssid",
									"disabled": true
								},
								{
									"key": "osType",
									"value": "",
									"description": "The client type",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Locations Quality-index",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"quality_index\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/locations/quality-index?buildingId={{building_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"locations",
								"quality-index"
							],
							"query": [
								{
									"key": "buildingId",
									"value": "{{building_id}}",
									"description": "The location identifier for building"
								},
								{
									"key": "ssid",
									"value": "",
									"description": "The ssid",
									"disabled": true
								},
								{
									"key": "osType",
									"value": "",
									"description": "The client type",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Locations Time to Connect",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"performance_score\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/locations/time-to-connect?buildingId={{building_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"locations",
								"time-to-connect"
							],
							"query": [
								{
									"key": "buildingId",
									"value": "{{building_id}}",
									"description": "The location identifier for building"
								},
								{
									"key": "ssid",
									"value": "",
									"description": "The ssid",
									"disabled": true
								},
								{
									"key": "osType",
									"value": "",
									"description": "The client type",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Performance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"quality_index_graph\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/performance?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&viewId=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"performance"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION, SSID, OS"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": "0",
									"description": "The view id based on view type"
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The location identifier\nDefault value : 0",
									"disabled": true
								},
								{
									"key": "locationType",
									"value": "BUILDING",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Quality-index",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"quality_index\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/quality-index?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"quality-index"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION, SSID, OS"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": "1",
									"description": "The view id based on view type",
									"disabled": true
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The location identifier\nDefault value : 0",
									"disabled": true
								},
								{
									"key": "locationType",
									"value": "BUILDING",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Time To Connect",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"performance_score\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/time-to-connect?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&viewId=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"time-to-connect"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION, SSID, OS"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": "0",
									"description": "The view id based on view type"
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The location identifier\nDefault value : 0",
									"disabled": true
								},
								{
									"key": "locationType",
									"value": "BUILDING",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Views",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"views_list_entities\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/views?viewType=SSID",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"views"
							],
							"query": [
								{
									"key": "viewType",
									"value": "SSID",
									"description": "The type of View\nAvailable values : SSID, OS"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Copilot - Anomalies",
			"item": [
				{
					"name": "Copilot Anomalies Adverse-traffic device stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"summary\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/adverse-traffic/device-stats?anomalyId={{anomaly_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"adverse-traffic",
								"device-stats"
							],
							"query": [
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Adverse-traffic packet counts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"summary\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/adverse-traffic/packet-counts?anomalyId={{anomaly_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"adverse-traffic",
								"packet-counts"
							],
							"query": [
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies - anomalies by category",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"anomalies_by_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/anomalies-by-category?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"anomalies-by-category"
							],
							"query": [
								{
									"key": "anomalyType",
									"value": "POE_FLAPPING",
									"description": "Anomaly type\n\nAvailable values : POE_FLAPPING, DFS_RECURRENCE, ADVERSE_TRAFFIC, PORT_EFFICIENCY, WIFI_CAPACITY, WIFI_EFFICIENCY",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "buildingId",
									"value": null,
									"description": "The location identifier",
									"disabled": true
								},
								{
									"key": "severity",
									"value": null,
									"description": "The severity od anomaly\n\nAvailable values : NONE, LOW, MEDIUM, HIGH",
									"disabled": true
								},
								{
									"key": "excludeMuted",
									"value": "false",
									"description": "exclude muted\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Devices by Location",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"location_entity\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/devices-by-location?anomalyType=POE_FLAPPING&locationIds={{loc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"devices-by-location"
							],
							"query": [
								{
									"key": "anomalyType",
									"value": "POE_FLAPPING",
									"description": "Anomaly type\n\nAvailable values : POE_FLAPPING, DFS_RECURRENCE, ADVERSE_TRAFFIC, PORT_EFFICIENCY, WIFI_CAPACITY, WIFI_EFFICIENCY"
								},
								{
									"key": "locationIds",
									"value": "{{loc_id}}",
									"description": "The location IDs\n\narray[integer]\n(query)"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Devices with Locations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"location_entity\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/devices-with-locations?page=1&limit=10&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"devices-with-locations"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of Records, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "anomalyType",
									"value": null,
									"description": "The type of anomaly\n\nAvailable values : POE_STABILITY, DFS_RECURRENCE, ADVERSE_TRAFFIC, PORT_EFFICIENCY, WIFI_CAPACITY, WIFI_EFFICIENCY",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "buildingId",
									"value": "{{building_id}}",
									"description": "The location identifier",
									"disabled": true
								},
								{
									"key": "severity",
									"value": null,
									"description": "The severity of anomaly\n\nAvailable values : NONE, LOW, MEDIUM, HIGH\n\n",
									"disabled": true
								},
								{
									"key": "excludeMuted",
									"value": "false",
									"description": "Exclude muted anomalies\n\nDefault value : false",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": null,
									"description": "The sorting field\n\nAvailable values : LOCATION, SEVERITY, TIME, CATEGORY, ANOMALY_TYPE, DEVICE_NAME",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sorting order\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "searchKey",
									"value": null,
									"description": "The search key",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Devices feedback",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"seccess\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"anomaly_type\": \"POE_FLAPPING\",\n  \"anomaly_id\": \"string\",\n  \"feedback_type\": \"LIKE\",\n  \"feedback\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/devices/feedback",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"devices",
								"feedback"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Devices Update Action",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"success\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"anomaly_type\": \"POE_STABILITY\",\n  \"action_type\": \"MUTE\",\n  \"location_id\": 0,\n  \"anomaly_id\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/devices/update-action",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"devices",
								"update-action"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies DFS recurrence channel stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"summary\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/dfs-recurrence/channel-stats?anomalyId={{anomaly_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"dfs-recurrence",
								"channel-stats"
							],
							"query": [
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies DFS recurrence count stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"summary\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/dfs-recurrence/count-stats?anomalyId={{anomaly_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"dfs-recurrence",
								"count-stats"
							],
							"query": [
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "string"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Exclude VLANs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter epoch times",
									"var epochTime = new Date(\"Sept 1, 2024 02:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myEpoch\", epochTime.getTime()); // myEpoch is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"success\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"excluded_vlan_details\": [\n    {\n      \"vlan_ids\": [\n        0\n      ],\n      \"site_ids\": [\n        0\n      ]\n    }\n  ],\n  \"old_vlan_id\": 0,\n  \"action_type\": \"ADD\",\n  \"dismiss\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/exclude-vlans",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"exclude-vlans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Exclude VLANs CSV",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter epoch times",
									"var epochTime = new Date(\"Sept 1, 2024 02:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myEpoch\", epochTime.getTime()); // myEpoch is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"success\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "csv_file",
									"description": "CSV File",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/exclude-vlans-csv?action_type=ADD&dismiss=true",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"exclude-vlans-csv"
							],
							"query": [
								{
									"key": "action_type",
									"value": "ADD",
									"description": "Available values : ADD, UPDATE, DELETE"
								},
								{
									"key": "dismiss",
									"value": "true",
									"description": "boolean"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Excluded VLANs List",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter epoch times",
									"var epochTime = new Date(\"Sept 1, 2024 02:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myEpoch\", epochTime.getTime()); // myEpoch is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/excluded-vlans-list?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"excluded-vlans-list"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min =1\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of Records, min = 1, max = 100\nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Hardware Health Client List",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter epoch times",
									"var epochTime = new Date(\"Sept 1, 2024 02:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myEpoch\", epochTime.getTime()); // myEpoch is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hh_client_stats\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/hardware-health/client-list?deviceId={{device_id}}&timestamp={{myEpoch}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"hardware-health",
								"client-list"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device id"
								},
								{
									"key": "timestamp",
									"value": "{{myEpoch}}",
									"description": "The timestamp -epoch milliseconds"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Hardware Health CPU mem stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter epoch times",
									"var epochTime = new Date(\"Sept 1, 2024 02:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myEpoch\", epochTime.getTime()); // myEpoch is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hh_client_stats\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/hardware-health/cpu-mem-stats?deviceId={{device_id}}&statsField=CPU_STATS&timestamp=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"hardware-health",
								"cpu-mem-stats"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device id"
								},
								{
									"key": "statsField",
									"value": "CPU_STATS",
									"description": "Field selector\nAvailable values : CPU_STATS, MEMORY_STATS"
								},
								{
									"key": "timestamp",
									"value": "0",
									"description": "The timestamp"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Hardware Health Stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hd_device_stats_entities\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/hardware-health/stats?anomalyId={{anomaly_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"hardware-health",
								"stats"
							],
							"query": [
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "The anomalyId"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Locations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/locations?anomalyType=WIFI_CAPACITY&page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"locations"
							],
							"query": [
								{
									"key": "anomalyType",
									"value": "WIFI_CAPACITY",
									"description": "Anomaly type\n\nAvailable values : POE_FLAPPING, DFS_RECURRENCE, ADVERSE_TRAFFIC, PORT_EFFICIENCY, WIFI_CAPACITY, WIFI_EFFICIENCY"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of Records, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "sortField",
									"value": "LOCATION",
									"description": "sort by field\n\nAvailable values : LOCATION, SEVERITY, TIME",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sorting order\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "excludeMuted",
									"value": "false",
									"description": "exclude muted\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies missing VLAN count",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Sept 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Sept 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/missing-vlan/count?startTime={{myStartTime}}&endTime={{myEndTime}}&vlanIds=1&siteIds=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"missing-vlan",
								"count"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "vlanIds",
									"value": "1",
									"description": "The VLAN ids\narray[integer]"
								},
								{
									"key": "siteIds",
									"value": "0",
									"description": "The Site ids\narray[integer]"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Notifications",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_anomaly_count\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/notifications",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"notifications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies POE Flapping LLDP-CDP-Info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"flap_count_entities\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/poeflapping/lldp-cdp-info?anomalyType=POE_STABILITY&anomalyId={{anomaly_id}}&deviceId={{device_id}}&lastDetectedTime=lastDetectedTime",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"poeflapping",
								"lldp-cdp-info"
							],
							"query": [
								{
									"key": "anomalyType",
									"value": "POE_STABILITY",
									"description": "The anomaly Type\n\nAvailable values : POE_STABILITY, DFS_RECURRENCE, ADVERSE_TRAFFIC, PORT_EFFICIENCY, WIFI_CAPACITY, WIFI_EFFICIENCY, HARDWARE_HEALTH"
								},
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "The anomaly id"
								},
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device ID"
								},
								{
									"key": "lastDetectedTime",
									"value": "lastDetectedTime",
									"description": "The last detected timestamp of anomaly"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies POE Flapping Stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"flap_count_entities\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/poeflapping/stats?anomalyId={{anomaly_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"poeflapping",
								"stats"
							],
							"query": [
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "The anomaly id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies POE Flapping Trends",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"flap_count_entities\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/poeflapping/trends?anomalyId={{anomaly_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"poeflapping",
								"trends"
							],
							"query": [
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "The anomaly id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies port efficiency speed duplex stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"speed_duplex_entities\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/port-efficiency/speed-duplex-stats?anomalyId={{anomaly_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"port-efficiency",
								"speed-duplex-stats"
							],
							"query": [
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "The anomaly id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies port efficiency stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"duplex_data_rate_entities\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/port-efficiency/stats?anomalyId={{anomaly_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"port-efficiency",
								"stats"
							],
							"query": [
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "The anomaly id"
								},
								{
									"key": "offsetTime",
									"value": null,
									"description": "The offset value",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies report",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/report?endTime={{myEndTime}}&startTime={{myStartTime}}&offsetTime=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"report"
							],
							"query": [
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "The anomaly id",
									"disabled": true
								},
								{
									"key": "buildingId",
									"value": "{{building_id}}",
									"description": "The location identifier",
									"disabled": true
								},
								{
									"key": "severity",
									"value": "",
									"description": "The severity of anomaly\n\nAvailable values : NONE, LOW, MEDIUM, HIGH\n\n",
									"disabled": true
								},
								{
									"key": "excludeMuted",
									"value": "false",
									"description": "Exclude muted anomalies\n\nDefault value : false",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "",
									"description": "The sorting field\n\nAvailable values : LOCATION, SEVERITY, TIME, CATEGORY, ANOMALY_TYPE, DEVICE_NAME",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sorting order\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "searchKey",
									"value": "",
									"description": "The search key",
									"disabled": true
								},
								{
									"key": "fileType",
									"value": "csv",
									"description": "The file format\n\nDefault value : csv",
									"disabled": true
								},
								{
									"key": "offsetTime",
									"value": "0",
									"description": "The offset value integer($int32)"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Update Action",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"success\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"anomaly_type\": \"POE_FLAPPING\",\n  \"action_type\": \"MUTE\",\n  \"building_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/update-action",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"update-action"
							]
						}
					},
					"response": []
				},
				{
					"name": "[LRO] Copilot Anomalies Update Anomalies and Devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"anomalyDetails\": [\n    {\n      \"buildingId\": 0,\n      \"locationId\": 0,\n      \"anomalyId\": \"string\",\n      \"anomalyType\": \"POE_STABILITY\"\n    }\n  ],\n  \"actionType\": \"MUTE\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/update-device-action",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"update-device-action"
							],
							"query": [
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies WiFi Capacity client list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var Epoch = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myEpoch\", Epoch.getTime()); // myEpoch is used in Params of call - This is EPOCH time in milliseconds",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_wifi_stats\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/wifi-capacity/client-list?deviceId={{device_id}}&channel=1&timestamp={{myEpoch}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"wifi-capacity",
								"client-list"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device id"
								},
								{
									"key": "channel",
									"value": "1",
									"description": "The channel"
								},
								{
									"key": "timestamp",
									"value": "{{myEpoch}}",
									"description": "The Timestamp"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies WiFi Capacity stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_wifi_stats\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/wifi-capacity/stats?anomalyId={{anomaly_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"wifi-capacity",
								"stats"
							],
							"query": [
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "The anomaly id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies WiFi Efficiency Client List",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var Epoch = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myEpoch\", Epoch.getTime()); // myEpoch is used in Params of call - This is EPOCH time in milliseconds",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_stats_entities\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/wifi-efficiency/client-list?deviceId={{device_id}}&channel=1&timestamp={{myEpoch}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"wifi-efficiency",
								"client-list"
							],
							"query": [
								{
									"key": "deviceId",
									"value": "{{device_id}}",
									"description": "The device id"
								},
								{
									"key": "channel",
									"value": "1",
									"description": "The channel"
								},
								{
									"key": "timestamp",
									"value": "{{myEpoch}}",
									"description": "The Timestamp"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies WiFi Efficiency stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"sessions_data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/wifi-efficiency/stats?anomalyId={{anomaly_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"wifi-efficiency",
								"stats"
							],
							"query": [
								{
									"key": "anomalyId",
									"value": "{{anomaly_id}}",
									"description": "The anomaly id"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Assurance Scans Overview",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"anomalies_count_vos\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/assurance-scans/overview",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"assurance-scans",
								"overview"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Packet Capture",
			"item": [
				{
					"name": "List packet capture sessions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/packetcaptures?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"packetcaptures"
							],
							"query": [
								{
									"key": "searchString",
									"value": "",
									"description": "The string to be searched in capture session name, interface name and device host name",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 500\n\nDefault value : 10"
								},
								{
									"key": "sortField",
									"value": "START_TIME",
									"description": "Sort field. Available values - NAME, START_TIME and STATUS\n\nAvailable values : NAME, START_TIME, STATUS",
									"disabled": true
								},
								{
									"key": "order",
									"value": "ASC",
									"description": "Sort order (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "fields",
									"value": null,
									"description": "The packet capture fields to return\n\nAvailable values : ID, START_TIME, END_TIME, ORG_ID, NAME, CAPTURE_ID_TYPE, AP_SERIAL_NUMBER, DEVICE_IDS, LOCATION_ID, DURATION, DESTINATION, FILTER, CAPTURE_IF, STATUS, CLOUD_STORAGE, RESULTS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new packet capture session",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });",
									"",
									"var jsonData = JSON.parse(responseBody);   ",
									"pm.environment.set(\"pcap_id\", jsonData[\"id\"]);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"duration\" : 300,\n  \"capture_id_type\" : \"DEVICE_IDS\",\n  \"device_ids\" : [ 123000, 123005 ],\n  \"destination\" : \"CLOUD\",\n  \"filter\" : {\n    \"mac_addr\" : [ \"AABBCC001122\" ],\n    \"ip_addr\" : [ \"192.168.11.255\" ],\n    \"protocol\" : \"USER_DEFINED\",\n    \"protocol_number\" : 5,\n    \"port\" : 1024,\n    \"vlan\" : \"2,3-5\",\n    \"wlan\" : \"some-ssid\"\n  },\n  \"capture_if\" : {\n    \"direction\" : \"BOTH\",\n    \"radio\" : \"ALL\",\n    \"wired_interface\" : \"ETH0\",\n    \"wireless_band\" : \"2.4GHZ\",\n    \"wired_filters\" : [ \"DHCP\" ],\n    \"wireless_filters\" : [ \"DATA\", \"CONTROL\" ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/packetcaptures",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"packetcaptures"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a packet capture session",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/packetcaptures/{{pcap_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"packetcaptures",
								"{{pcap_id}}"
							],
							"query": [
								{
									"key": "fields",
									"value": "",
									"description": "The packet capture fields to return\n\nAvailable values : ID, START_TIME, END_TIME, ORG_ID, NAME, CAPTURE_ID_TYPE, AP_SERIAL_NUMBER, DEVICE_IDS, LOCATION_ID, DURATION, DESTINATION, FILTER, CAPTURE_IF, STATUS, CLOUD_STORAGE, RESULTS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a packet capture session",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/packetcaptures/{{pcap_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"packetcaptures",
								"{{pcap_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop a packet capture",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/packetcaptures/{{pcap_id}}/:stop",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"packetcaptures",
								"{{pcap_id}}",
								":stop"
							],
							"variable": [
								{
									"key": "stop",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload a packet capture session's capture files",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/packetcaptures/{{pcap_id}}/:upload",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"packetcaptures",
								"{{pcap_id}}",
								":upload"
							],
							"variable": [
								{
									"key": "upload",
									"value": ""
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Get an AP packet capture file",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/packetcaptures/files",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"packetcaptures",
								"files"
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				}
			]
		},
		{
			"name": "Network Scorecard",
			"item": [
				{
					"name": "Get the overall client health score",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 1, 2024 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 1, 2024 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"overall_score\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-scorecard/clientHealth/{{loc_id}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-scorecard",
								"clientHealth",
								"{{loc_id}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the overall device health score",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 1, 2024 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 1, 2024 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"overall_score\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-scorecard/deviceHealth/{{loc_id}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-scorecard",
								"deviceHealth",
								"{{loc_id}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the overall network health score",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 1, 2024 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 1, 2024 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"overall_score\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-scorecard/networkHealth/{{loc_id}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-scorecard",
								"networkHealth",
								"{{loc_id}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the overall services health score",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 1, 2024 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 1, 2024 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"overall_score\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-scorecard/servicesHealth/{{loc_id}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-scorecard",
								"servicesHealth",
								"{{loc_id}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the overall wifi health score",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 1, 2024 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 1, 2024 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"overall_score\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-scorecard/wifiHealth/{{loc_id}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-scorecard",
								"wifiHealth",
								"{{loc_id}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Essentials - ExtremeLocation",
			"item": [
				{
					"name": "Get the last known location of the client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"timestamp\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/essentials/eloc/clients/{{client_mac}}/last-known-location?floorId={{floor_id}}&parentId={{building_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"essentials",
								"eloc",
								"clients",
								"{{client_mac}}",
								"last-known-location"
							],
							"query": [
								{
									"key": "floorId",
									"value": "{{floor_id}}",
									"description": "Location ID of the floor (Required)"
								},
								{
									"key": "parentId",
									"value": "{{building_id}}",
									"description": "Location ID of the floor's parent (Required)"
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				}
			]
		},
		{
			"name": "Misc - Metadata - Country",
			"item": [
				{
					"name": "Get country list",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"timestamp\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/countries",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"countries"
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Get state list by country code",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"timestamp\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/countries/{{countryAlpha2Code}}/states",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"countries",
								"{{countryAlpha2Code}}",
								"states"
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Validate country code",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"timestamp\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/countries/{{countryCode}}/:validate",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"countries",
								"{{countryCode}}",
								":validate"
							],
							"variable": [
								{
									"key": "validate",
									"value": ""
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				}
			]
		},
		{
			"name": "Thread",
			"item": [
				{
					"name": "Get active thread networks",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"license_types\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/thread/networks?page=1&limit=10&folderId=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"thread",
								"networks"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1\n\n"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "folderId",
									"value": "0",
									"description": "Thread network config folder id"
								},
								{
									"key": "fields",
									"value": "",
									"description": "The thread network config fields to return\n\nAvailable values : ID, CHANNEL, CHANNEL_MASK, EXT_PAN_ID, MESH_LOCAL_PREFIX, NETWORK_KEY, NETWORK_NAME, PAN_ID, PSKC, OBTAIN_NETWORK_KEY_ENABLED, NATIVE_COMMISSIONING_ENABLED, ROUTERS_ENABLED, EXTERNAL_COMMISSIONING_ENABLED, BEACONS_ENABLED, COMMERCIAL_COMMISSIONING_ENABLED, AUTONOMOUS_ENROLLMENT_ENABLED, NETWORK_KEY_PROVISIONING_ENABLED, NON_CCM_ROUTERS_ENABLED, ACTIVE_TIMESTAMP",
									"disabled": true
								},
								{
									"key": "views",
									"value": "",
									"description": "The views to return thread network config fields\n\nAvailable values : BASIC, FULL",
									"disabled": true
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "List thread routers",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"license_types\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/thread/routers?page=1&limit=10&ids=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"thread",
								"routers"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1\n\n"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "ids",
									"value": "0",
									"description": "The thread router IDs"
								},
								{
									"key": "sortField",
									"value": "",
									"description": "The sort field\n\nAvailable values : SERIAL_NUMBER, EUI64, EXT_MAC, RLOC16, GLOBAL_IPV6, TX_POWER, REGION, THREAD_PLATFORM, DEVICE_ROLE, ROUTER_INTERFACE_NAME, ROUTER_INTERFACE_IS_ACTIVE, ROUTER_INTERFACE_IS_BROADCAST, ROUTER_INTERFACE_IS_LOOPBACK, ROUTER_INTERFACE_IS_POINT_TO_POINT, ROUTER_INTERFACE_IS_RUNNING, ROUTER_INTERFACE_IS_ARP, ROUTER_INTERFACE_IS_PROMISC, ROUTER_INTERFACE_IS_ALL_MULTI, ROUTER_INTERFACE_IS_MULTICAST, ROUTER_INTERFACE_IS_DYNAMIC, ROUTER_INTERFACE_MTU, ROUTER_INTERFACE_HW_MAC, ROUTER_INTERFACE_IPV4, ROUTER_INTERFACE_IPV4_MASK, ROUTER_INTERFACE_IPV4_BROADCAST, VETH0_INTERFACE_NAME, VETH0_IS_ACTIVE, VETH0_IS_BROADCAST, VETH0_IS_LOOPBACK, VETH0_IS_POINT_TO_POINT, VETH0_IS_RUNNING, VETH0_IS_ARP, VETH0_IS_PROMISC, VETH0_IS_ALL_MULTI, VETH0_IS_MULTICAST, VETH0_IS_DYNAMIC, VETH0_MTU, VETH0_HW_MAC, VETH0_IPV4, VETH0_IPV4_MASK, VETH0_IPV4_BROADCAST, NETWORK_DATA_LENGTH, NETWORK_DATA_MAX_LENGTH, RX_ON_WHEN_IDLE, FULL_THREAD_DEVICE, FULL_NETWORK_DATA, THREAD_VERSION, BUILD_VERSION, API_VERSION, RCP_VERSION, LEADER_PARTITION_ID, LEADER_WEIGHTING, LEADER_FULL_NETWORK_DATA_VERSION, LEADER_STABLE_NETWORK_DATA_VERSION, BORDER_ROUTER_STATE, BORDER_NAT64_LOCAL_PREFIX, BORDER_NAT64_FAVORED_PREFIX, BORDER_NAT64_FAVORED_PREFERENCE, BORDER_NAT64_0MR_LOCAL_PREFIX, BORDER_NAT64_0MR_FAVORED_PREFIX, BORDER_NAT64_0MR_FAVORED_PREFERENCE, BORDER_NAT64_640N_LINK_LOCAL_PREFIX, BORDER_NAT64_640N_LINK_FAVORED_PREFIX, BORDER_NAT64_640N_LINK_FAVORED_PREFERENCE, BACKBONE_BORDER_ROUTER_STATE, BORDER_AGENT_STATE, BORDER_AGENT_UDP_PORT, COMMISSIONER_STATE, NAT64_PREFIX_MANAGER_STATE, NAT64_TRANSLATOR_STATE, NAT64_TRANSLATOR_CIDR, HOSTNAME",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "",
									"description": "The sort order (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "views",
									"value": "",
									"description": "The views to return thread router fields\n\nAvailable values : BASIC, DETAIL, FULL",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "",
									"description": "The thread router fields to return\n\nAvailable values : DEVICE_ID, SERIAL_NUMBER, EUI64, EXT_MAC, RLOC16, GLOBAL_IPV6, TX_POWER, REGION, THREAD_PLATFORM, DEVICE_ROLE, ROUTER_INTERFACE, VETH0, NETWORK_DATA, THREAD_MLE_LINK_MODE, THREAD_VERSION, LEADER_SERVICE, BORDER_ROUTER_SERVICE, BACKBONE_BORDER_ROUTER_SERVICE, BORDER_AGENT_SERVICE, COMMISSIONER_SERVICE, NAT64_SERVICE, NETWORK_CONFIG, OWNER_ID, ORG_ID, ID, CREATE_TIME, UPDATE_TIME, ACTIVE_CLIENTS, HOSTNAME, LAST_REPORTED, THREAD_CONNECTED",
									"disabled": true
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "List thread topology",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"license_types\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/thread/topology?networkConfigIds=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"thread",
								"topology"
							],
							"query": [
								{
									"key": "networkConfigIds",
									"value": "0",
									"description": "Thread network config id"
								},
								{
									"key": "routerFields",
									"value": "",
									"description": "The thread router fields to return\n\nAvailable values : DEVICE_ID, SERIAL_NUMBER, EUI64, EXT_MAC, RLOC16, GLOBAL_IPV6, TX_POWER, REGION, THREAD_PLATFORM, DEVICE_ROLE, ROUTER_INTERFACE, VETH0, NETWORK_DATA, THREAD_MLE_LINK_MODE, THREAD_VERSION, LEADER_SERVICE, BORDER_ROUTER_SERVICE, BACKBONE_BORDER_ROUTER_SERVICE, BORDER_AGENT_SERVICE, COMMISSIONER_SERVICE, NAT64_SERVICE, NETWORK_CONFIG, OWNER_ID, ORG_ID, ID, CREATE_TIME, UPDATE_TIME, ACTIVE_CLIENTS, HOSTNAME, LAST_REPORTED, THREAD_CONNECTED",
									"disabled": true
								},
								{
									"key": "routerViews",
									"value": "",
									"description": "The views to return thread router fields\n\nAvailable values : BASIC, DETAIL, FULL",
									"disabled": true
								},
								{
									"key": "clientViews",
									"value": "",
									"description": "The views to return client fields (Check fields for each view at XiqClientView schema)\n\nAvailable values : BASIC, FULL, STATUS, DETAIL, LOCATION, METRICS, IOT, THREAD",
									"disabled": true
								},
								{
									"key": "clientFields",
									"value": "",
									"description": "The client fields to return\n\nAvailable values : ID, CREATE_TIME, UPDATE_TIME, ORG_ID, ORG_NAME, LOCATION_ID, LOCATIONS, HOSTNAME, MAC_ADDRESS, IP_ADDRESS, IPV6_ADDRESS, OS_TYPE, DEVICE_ID, DEVICE_FUNCTION, DEVICE_NAME, USERNAME, USER_PROFILE_NAME, CONNECTED, ONLINE_TIME, OFFLINE_TIME, VLAN, CONNECTION_TYPE, SSID, PORT, BSSID, PORT_TYPE_NAME, INTERFACE_NAME, AUTH, ENCRYPTION_METHOD, CHANNEL, CLIENT_HEALTH, APPLICATION_HEALTH, NETWORK_HEALTH, RADIO_HEALTH, RSSI, SNR, RADIO_TYPE, WING_AP, VENDOR, MOBILITY, CATEGORY, DESCRIPTION, DEVICE_MAC_ADDRESS, ALIAS, PRODUCT_TYPE, TH_RLOC16, TH_CHILD_ID, TH_TIMEOUT, TH_SUPERVISION_INTERVAL, TH_NETDATA_VERSION, TH_CSL_SYNCED, TH_IP_ADDRESSES, TH_ROUTER_LAST_REPORTED, THREAD_CONNECTED",
									"disabled": true
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				}
			]
		},
		{
			"name": "Universal Compute Platform",
			"item": [
				{
					"name": "Get UCP Engines by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"engines\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/ucp/{{upc_id}}/engines/installed",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ucp",
								"{{upc_id}}",
								"engines",
								"installed"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "afc-endpoint",
			"item": [
				{
					"name": "Get AFC server list and their status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"servers\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/afcserver?ownerId=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"afcserver"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "0",
									"description": "Owner Id"
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Get AFC server data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"servers\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/afcserver/{{afcserver_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"afcserver",
								"{{afcserver_id}}"
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Get AFC server Statistics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter start and end times",
									"var startTime = new Date(\"Sept 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Sept 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/afcserver/statistics/{{afcserver_id}}?server_id=1234567890&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"afcserver",
								"statistics",
								"{{afcserver_id}}"
							],
							"query": [
								{
									"key": "server_id",
									"value": "1234567890",
									"description": "The Id of the server\n\nExample : 1234567890"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "Query Start Time"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "Query End Time"
								},
								{
									"key": "precision",
									"value": "1",
									"description": "precision specified in seconds",
									"disabled": true
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Get AFC diagnostics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"afc_spectrum_details\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ap/afc/diagnostics/{{sn}}?ownerId=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ap",
								"afc",
								"diagnostics",
								"{{sn}}"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "0",
									"description": "Owner Id"
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Get AFC summary data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ap/afc/interface/details/{{sn}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ap",
								"afc",
								"interface",
								"details",
								"{{sn}}"
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Get AFC Spectrum per AP",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"request_id\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"owner_id\": 0,\n  \"site_name\": \"string\",\n  \"region\": \"US\",\n  \"input_info\": [\n    {\n      \"serial_number\": \"string\",\n      \"coordinates\": {\n        \"latitude\": 0,\n        \"longitude\": 0,\n        \"timestamp\": 0\n      },\n      \"elevation\": {\n        \"height\": 0,\n        \"height_reference\": \"AGL\",\n        \"uncertainty\": 0\n      },\n      \"ellipse\": {\n        \"major_axis\": 0,\n        \"minor_axis\": 0,\n        \"orientation\": 0\n      },\n      \"environment\": \"INDOOR\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ap/spectrum?IsEmptyList=false",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ap",
								"spectrum"
							],
							"query": [
								{
									"key": "IsEmptyList",
									"value": "false",
									"description": "boolean"
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Query AFC",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"afc_status\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/aps/afc/query?ownerId=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"aps",
								"afc",
								"query"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "0",
									"description": "Owner Id"
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Manual Spectrum request for device(s)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{device_id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/aps/afc/update",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"aps",
								"afc",
								"update"
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "GET AFC Schedule",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"ownerId\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/site/afc/schedule?ownerId=0&folderId=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"site",
								"afc",
								"schedule"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "0",
									"description": "Owner Id"
								},
								{
									"key": "folderId",
									"value": "0",
									"description": "Folder Id"
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Update an AFC Schedule",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ownerId\": 0,\n  \"folderId\": 0,\n  \"siteTimeZone\": \"string\",\n  \"siteSchedule\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/site/afc/schedule",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"site",
								"afc",
								"schedule"
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Create an AFC Schedule",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ownerId\": 0,\n  \"folderId\": 0,\n  \"siteTimeZone\": \"string\",\n  \"siteSchedule\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/site/afc/schedule",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"site",
								"afc",
								"schedule"
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Get AFC spectrum by site",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"owner_id\": 0,\n  \"site_name\": \"string\",\n  \"region\": \"US\",\n  \"input_info\": [\n    {\n      \"serial_number\": \"string\",\n      \"coordinates\": {\n        \"latitude\": 0,\n        \"longitude\": 0,\n        \"timestamp\": 0\n      },\n      \"elevation\": {\n        \"height\": 0,\n        \"height_reference\": \"AGL\",\n        \"uncertainty\": 0\n      },\n      \"ellipse\": {\n        \"major_axis\": 0,\n        \"minor_axis\": 0,\n        \"orientation\": 0\n      },\n      \"environment\": \"INDOOR\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/site/spectrum?IsEmptyList=False",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"site",
								"spectrum"
							],
							"query": [
								{
									"key": "IsEmptyList",
									"value": "False",
									"description": "boolean"
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				}
			]
		},
		{
			"name": "rtts-endpoint",
			"item": [
				{
					"name": "Create RTTS",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"session_id\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"deviceIds\": [\n    \"string\"\n  ],\n  \"clientMacs\": [\n    \"string\"\n  ],\n  \"packetType\": \"ALL\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/rtts?ownerId=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"rtts"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "0",
									"description": "Owner ID"
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				},
				{
					"name": "Delete RTTS",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/rtts/{{rtts_id}}?ownerId=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"rtts",
								"{{rtts_id}}"
							],
							"query": [
								{
									"key": "ownerId",
									"value": "0",
									"description": "Owner ID"
								}
							]
						},
						"description": "Upload the capture files from a packet capture session, if files previously failed to be uploaded to XIQ cloud."
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "authService",
			"value": "https://api.extremecloudiq.com/login"
		},
		{
			"key": "gatewayBaseUrl",
			"value": "https://api.extremecloudiq.com"
		},
		{
			"key": "jwttoken",
			"value": ""
		},
		{
			"key": "manage",
			"value": ":manage"
		},
		{
			"key": "check",
			"value": ":check"
		},
		{
			"key": "deploy",
			"value": ":deploy"
		},
		{
			"key": "cli",
			"value": ":cli"
		},
		{
			"key": "reboot",
			"value": ":reboot"
		},
		{
			"key": "unmanage",
			"value": ":unmanage"
		},
		{
			"key": "rename",
			"value": ":rename"
		}
	]
}