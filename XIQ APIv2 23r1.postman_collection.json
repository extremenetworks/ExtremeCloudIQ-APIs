{
	"info": {
		"_postman_id": "b9b8e0ef-cdea-4b54-886e-b027df953a51",
		"name": "XIQ APIv2 23r1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4056946"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login Basic authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include access token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/login",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout - Revoke token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logout",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authorization",
			"item": [
				{
					"name": "POST ​/auth​/apitoken Generate new API token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var myDate = new Date(\"July 2, 2022 02:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myEpoch\", myDate.getTime()/1000.0); //myEpoch is used in the body of this call. This is Epoch time in seconds."
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include access token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Token for read account only\",\n  \"expire_time\": {{myEpoch}},\n  \"permissions\": [\n    \"account:r\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/apitoken",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"apitoken"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST ​/auth​/apitoken/:validate Validate JWT format API token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/plain",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{{jwttoken}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/apitoken/:validate",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"apitoken",
								":validate"
							],
							"variable": [
								{
									"key": "validate",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/apitoken/info Get current API token details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include role\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"role\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/apitoken/info",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"apitoken",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/permissions Get permissions for current login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/permissions",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "/auth/permissions/:check Check permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include permissions\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"permissions\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"uri\": \"https://api.extremecloudiq.com/auth/apitoken/info\",\n  \"method\": \"get\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/auth/permissions/:check",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"auth",
								"permissions",
								":check"
							],
							"variable": [
								{
									"key": "check",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Operation",
			"item": [
				{
					"name": "Get the Long-Running Operation (LRO) status and result.",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"status\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/operations/{{operation_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"operations",
								"{{operation_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Long-Running Operation (LRO)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/operations/{{operation_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"operations",
								"{{operation_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Long-Running Operation (LRO) Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/operations/{{operation_id}}/:cancel",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"operations",
								"{{operation_id}}",
								":cancel"
							],
							"variable": [
								{
									"key": "cancel",
									"value": "cancel"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Account",
			"item": [
				{
					"name": "Account Switch - Switch to another XIQ account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/:switch?id={{viq_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								":switch"
							],
							"query": [
								{
									"key": "id",
									"value": "{{viq_id}}",
									"description": "The account ID to switch, switch back to home ExtremeCloud IQ account if not provide"
								}
							],
							"variable": [
								{
									"key": "switch",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Account External - List accessible external guest XIQ accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/external",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"external"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account Home - Get home XIQ account info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"account_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/home",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"home"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account VIQ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include VIQ info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"entitlement_key\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq"
							]
						}
					},
					"response": []
				},
				{
					"name": "Account VIQ Backup",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq/:backup",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq",
								":backup"
							],
							"variable": [
								{
									"key": "backup",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the default device password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include account type\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"password\");",
									"    console.log(pm.test)",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq/default-device-password",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq",
								"default-device-password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the default device password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "password",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/account/viq/default-device-password",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"account",
								"viq",
								"default-device-password"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "list all users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login_name\": \"example1@company.com\",\n  \"display_name\": \"example1\",\n  \"idle_timeout\": \"30\",\n  \"user_role\": \"ADMINISTRATOR\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user info by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login_name\": \"newlogin1@company.com\",\n  \"display_name\": \"New Name1\",\n  \"idle_timeout\": \"30\",\n  \"user_role\": \"OBSERVER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all external users",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Grant user external access",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"login_name\": \"example1@company.com\",\n  \"user_role\": \"ADMINISTRATOR\",\n  \"org_id\":0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the external user information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete external user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update external user information",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_role\": \"OPERATOR\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/users/external/{{uid}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"external",
								"{{uid}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Current User Info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"login_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/users/me",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "HIQ",
			"item": [
				{
					"name": "Get HIQ context",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"reading_org_ids\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set HIQ Context",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"reading_org_ids\": [\n   1\n  ],\n  \"creating_org_id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get organization for creating new data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/creating",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"creating"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Organization for creating new data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "1"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/creating",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"creating"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get organizations for reading data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/reading",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"reading"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set organizations for reading data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  123\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/context/reading",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"context",
								"reading"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all organizations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include organisation info \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"color\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an  existing organization",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful Delete request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations/{{org_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations",
								"{{org_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "rename an  existing organization Copy",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 204]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\"test\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/organizations/{{org_id}}/:rename",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"organizations",
								"{{org_id}}",
								":rename"
							],
							"variable": [
								{
									"key": "rename",
									"value": ":rename"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get HIQ Status",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include HIQ info \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"enabled\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/hiq/status",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"hiq",
								"status"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Location",
			"item": [
				{
					"name": "Create location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{loc_id}}\",\n  \"name\": \"Location Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Initialize orgination location",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"organization\": \"string\",\n  \"country\": \"AFGHANISTAN_4\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/:init",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								":init"
							],
							"variable": [
								{
									"key": "init",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update location by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"95135\",\n  \"name\": \"NewLocationName\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/{{loc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"{{loc_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete location by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/{{loc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"{{loc_id}}"
							],
							"query": [
								{
									"key": "force_delete",
									"value": "false",
									"description": "Force deletion of this location and its descendants recursively",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create building",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{loc_id}}\",\n  \"name\": \"TheBuildingName\",\n  \"address\": \"The building street address\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/building",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"building"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update building by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{loc_id}}\",\n  \"name\": \"NewBuildingName\",\n  \"address\": \"New building street address\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/building/{{building_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"building",
								"{{building_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete building by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/building/{{building_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"building",
								"{{building_id}}"
							],
							"query": [
								{
									"key": "force_delete",
									"value": "false",
									"description": "Force deletion of this building and its descendants recursively",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create floor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{building_id}}\",\n  \"name\": \"TheFloorName\",\n  \"environment\": \"AUTO_ESTIMATE\",\n  \"db_attenuation\": \"15\",\n  \"measurement_unit\": \"FEET\",\n  \"installation_height\": \"12\",\n  \"map_size_width\": \"12\",\n  \"map_size_height\": \"12\",\n  \"map_name\": \"\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floor",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floor"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update floor by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"parent_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": \"{{building_id}}\",\n  \"name\": \"string\",\n  \"environment\": \"AUTO_ESTIMATE\",\n  \"db_attenuation\": \"15\",\n  \"measurement_unit\": \"FEET\",\n  \"installation_height\": \"12\",\n  \"map_size_width\": \"12\",\n  \"map_size_height\": \"12\",\n  \"map_name\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floor/{{floor_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floor",
								"{{floor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete floor by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floor/{{floor_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floor",
								"{{floor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload floorplan",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 2500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(2500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/Users/timsmith/Documents/FloorPlans/TestMainFloor.png"
								}
							]
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/floorplan",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"floorplan"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get location tree",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/tree?expandChildren=true",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"tree"
							],
							"query": [
								{
									"key": "parentId",
									"value": "{{loc_id}}",
									"description": "The parent location ID, return root locations if parent is null",
									"disabled": true
								},
								{
									"key": "expandChildren",
									"value": "true",
									"description": "Whether to return the child locations recursively, default is true. Set it to false to improve performance when there are a lot of child locations.\nDefault value : true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Device",
			"item": [
				{
					"name": "List Devices [LRO]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hostname\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices?page=1&limit=50&views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "50",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "locationId",
									"value": "{{floor_id}}",
									"description": "Location id",
									"disabled": true
								},
								{
									"key": "connected",
									"value": "true",
									"description": "The device connect status",
									"disabled": true
								},
								{
									"key": "adminStates",
									"value": "MANAGED",
									"description": "The device admin states\n\nAvailable values : NEW, BOOTSTRAP, STAGED, MANAGED, UNMANAGED",
									"disabled": true
								},
								{
									"key": "macAddresses",
									"value": "",
									"description": "The device mac addresses",
									"disabled": true
								},
								{
									"key": "sns",
									"value": "",
									"description": "The device serial numbers",
									"disabled": true
								},
								{
									"key": "hostnames",
									"value": "",
									"description": "The device host names",
									"disabled": true
								},
								{
									"key": "sortField",
									"value": "SN",
									"description": "The sort field\n\nAvailable values : MAC, SN",
									"disabled": true
								},
								{
									"key": "order",
									"value": "ASC",
									"description": "The sort order (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "views",
									"value": "FULL",
									"description": "The views to return device fields (Check fields for each view at XiqDeviceView schema)\n\nAvailable values : BASIC, FULL, STATUS, LOCATION, CLIENT, DETAIL"
								},
								{
									"key": "fields",
									"value": "ID",
									"description": "The device fields to return\n\nAvailable values : ID, CREATE_TIME, UPDATE_TIME, ORG_ID, SERIAL_NUMBER, SERVICE_TAG, MAC_ADDRESS, DEVICE_FUNCTION, PRODUCT_TYPE, HOSTNAME, IP_ADDRESS, SOFTWARE_VERSION, DEVICE_ADMIN_STATE, CONNECTED, LAST_CONNECT_TIME, NETWORK_POLICY_NAME, NETWORK_POLICY_ID, NTP_SERVER_ADDRESS, DNS_SERVER_ADDRESS, SUBNET_MASK, DEFAULT_GATEWAY, IPV6_ADDRESS, IPV6_NETMASK, SIMULATED, DISPLAY_VERSION, ACTIVE_CLIENTS, LOCATION_ID, LOCATIONS, DESCRIPTION, COUNTRY_CODE",
									"disabled": true
								},
								{
									"key": "deviceTypes",
									"value": "REAL",
									"description": "The device types to return\n\nAvailable values : REAL, DIGITAL_TWIN, SIMULATED\n\nDefault value : List [ \"REAL\" ]",
									"disabled": true
								},
								{
									"key": "async",
									"value": "true",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send CLI to device [LRO]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"CLI_RESPONSE_CODE_SUCCEED\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      {{id}}\n    ]\n  },\n  \"clis\": [\n    \"string\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:cli",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":cli"
							],
							"query": [
								{
									"key": "async",
									"value": "true",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "cli",
									"value": ":cli"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:delete",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":delete"
							],
							"variable": [
								{
									"key": "delete",
									"value": ":delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Managed",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200,201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:manage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":manage"
							],
							"variable": [
								{
									"key": "manage",
									"value": ":manage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Onboard Devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"extreme\": {\n    \"sns\": [\n      \"string\"\n    ]\n  },\n  \"exos\": {\n    \"sns\": [\n      \"string\"\n    ]\n  },\n  \"voss\": {\n    \"sns\": [\n      \"string\"\n    ]\n  },\n  \"wing\": {\n    \"sn_to_mac\": {\n      \"additionalProp1\": \"string\",\n      \"additionalProp2\": \"string\",\n      \"additionalProp3\": \"string\"\n    }\n  },\n  \"dell\": {\n    \"sn_to_st\": {\n      \"additionalProp1\": \"string\",\n      \"additionalProp2\": \"string\",\n      \"additionalProp3\": \"string\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:onboard",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":onboard"
							],
							"variable": [
								{
									"key": "onboard",
									"value": ":onboard"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reboot Devices",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    {{id}}\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:reboot",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":reboot"
							],
							"variable": [
								{
									"key": "reboot",
									"value": ":reboot"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Unmanaged",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[{{id}}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/:unmanage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								":unmanage"
							],
							"variable": [
								{
									"key": "unmanage",
									"value": ":unmanage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device details for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"hostname\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}?views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}"
							],
							"query": [
								{
									"key": "views",
									"value": "FULL",
									"description": "The views to return device fields (Check fields for each view at XiqDeviceView schema)\n\nAvailable values : BASIC, FULL, STATUS, LOCATION, CLIENT, DETAIL"
								},
								{
									"key": "fields",
									"value": "ID",
									"description": "The device fields to return\n\nAvailable values : ID, CREATE_TIME, UPDATE_TIME, ORG_ID, SERIAL_NUMBER, SERVICE_TAG, MAC_ADDRESS, DEVICE_FUNCTION, PRODUCT_TYPE, HOSTNAME, IP_ADDRESS, SOFTWARE_VERSION, DEVICE_ADMIN_STATE, CONNECTED, LAST_CONNECT_TIME, NETWORK_POLICY_NAME, NETWORK_POLICY_ID, NTP_SERVER_ADDRESS, DNS_SERVER_ADDRESS, SUBNET_MASK, DEFAULT_GATEWAY, IPV6_ADDRESS, IPV6_NETMASK, SIMULATED, DISPLAY_VERSION, ACTIVE_CLIENTS, LOCATION_ID, LOCATIONS, DESCRIPTION, COUNTRY_CODE",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Send CLI to one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"CLI_RESPONSE_CODE_SUCCEED\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\"string\"]"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:cli",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":cli"
							],
							"variable": [
								{
									"key": "cli",
									"value": ":cli"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Managed for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:manage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":manage"
							],
							"variable": [
								{
									"key": "manage",
									"value": ":manage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reboot one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:reboot",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":reboot"
							],
							"variable": [
								{
									"key": "reboot",
									"value": ":reboot"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset one device [LRO]",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:reset",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":reset"
							],
							"query": [
								{
									"key": "async",
									"value": "true",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "reset",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change status to Unmanaged for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/:unmanage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								":unmanage"
							],
							"variable": [
								{
									"key": "unmanage",
									"value": ":unmanage"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List alarms for device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"page\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"Dec 19, 2021 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 18, 2022 12:30:00\"); // Your timezone!",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/alarms?page=1&limit=10&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"alarms"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time for query alarm"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time for query alarm"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change description for a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 100ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "string"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/description",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"description"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get device CPU/memory usage history",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"average_cpu\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 20, 2022 10:30:00\"); // Your timezone!",
									"var endTime = new Date(\"APril 20, 2022 12:30:00\"); // Your timezone!",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/history/cpu-mem?startTime={{myStartTime}}&endTime={{myEndTime}}&interval=100000",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"history",
								"cpu-mem"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "interval",
									"value": "100000",
									"description": "The aggregate interval in milliseconds"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change hostname for one device Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/hostname?hostname=string",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"hostname"
							],
							"query": [
								{
									"key": "hostname",
									"value": "string",
									"description": "The new hostname"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the device iBeacon setting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"enable_monitoring\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/ibeacon",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"ibeacon"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get location for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"location_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/location",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign location to one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"location_id\":{{floor_id}},\n    \"x\":10,\n    \"y\":10,\n    \"latitude\":null,\n    \"longitude\":null\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/location",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke location for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/location",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"location"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get network policy for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/network-policy",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"network-policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign network policy to one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/network-policy?networkPolicyId={{np_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"network-policy"
							],
							"query": [
								{
									"key": "networkPolicyId",
									"value": "{{np_id}}",
									"description": "The network policy ID to assign"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke network policy for one device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/network-policy",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"network-policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Override SSID For a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ssid_id\": 0,\n  \"ssid\": \"string\",\n  \"passphrase\": \"string\"\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/ssid/:override",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"ssid",
								":override"
							],
							"variable": [
								{
									"key": "override",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SSID status for a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/ssid/status",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"ssid",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable or Disable SSID for a device",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ssid_ids\": [\n    {{ssid_id}}\n  ],\n  \"if_names\": [\n    \"WIFI0\"\n  ],\n  \"enabled\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/{{id}}/ssid/status/:change",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"{{id}}",
								"ssid",
								"status",
								":change"
							],
							"variable": [
								{
									"key": "change",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign a country code to devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      {{id}}\n    ]\n  },\n  \"country_code\": \"AFGHANISTAN_4\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/country-code/:assign",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"country-code",
								":assign"
							],
							"variable": [
								{
									"key": "assign",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change iBeacon settings for devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DEL request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_ids\": [\n    0\n  ],\n  \"enabled\": true,\n  \"major\": 65535,\n  \"minor\": 65535,\n  \"power\": 127,\n  \"enable_monitoring\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/ibeacon",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"ibeacon"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign location to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      0\n    ]\n  },\n  \"device_location\": {\n    \"location_id\": 0,\n    \"x\": 0,\n    \"y\": 0,\n    \"latitude\": 0,\n    \"longitude\": 0\n  }\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/location/:assign",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"location",
								":assign"
							],
							"variable": [
								{
									"key": "assign",
									"value": ":assign"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query location to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"location_name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[0]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/location/:query",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"location",
								":query"
							],
							"variable": [
								{
									"key": "query",
									"value": ":query"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke location for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[0]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/location/:revoke",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"location",
								":revoke"
							],
							"variable": [
								{
									"key": "revoke",
									"value": ":revoke"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign network policy to multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"devices\":{\"ids\":[{{id}}]},\"network_policy_id\":{{np_id}}}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/:assign",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								":assign"
							],
							"variable": [
								{
									"key": "assign",
									"value": ":assign"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Query network policy for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[{{id}}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/:query",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								":query"
							],
							"variable": [
								{
									"key": "query",
									"value": ":query"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke network policy for multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"ids\":[{{id}}]}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/:revoke",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								":revoke"
							],
							"variable": [
								{
									"key": "revoke",
									"value": ":revoke"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List assigned devices for network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/network-policy/{{np_id}}?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"network-policy",
								"{{np_id}}"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change device OS mode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"device_ids\": [\n    {{id}}\n  ],\n  \"target_os\": \"WiNG\"\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/os/:change",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"os",
								":change"
							],
							"variable": [
								{
									"key": "change",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign RADIUS proxy to devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/radius=proxy/:assign?ids={{id}}&radiusProxyId={{radius_proxy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"radius=proxy",
								":assign"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{id}}",
									"description": "The device IDs"
								},
								{
									"key": "radiusProxyId",
									"value": "{{radius_proxy_id}}",
									"description": "The RADIUS proxy ID to assign"
								}
							],
							"variable": [
								{
									"key": "assign",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke RADIUS proxy from multiple devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/radius=proxy/:revoke?ids={{id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"radius=proxy",
								":revoke"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{id}}",
									"description": "The device IDs"
								}
							],
							"variable": [
								{
									"key": "revoke",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List device stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/devices/stats",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"devices",
								"stats"
							],
							"query": [
								{
									"key": "locationID",
									"value": "{{floor_id}}",
									"description": "The Location ID",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Network Policy",
			"item": [
				{
					"name": "List Network Policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "policyNames",
									"value": "Policy Name",
									"description": "The list of full network policy names to filter the query",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "string",
									"description": "The keyword to partial search by network policy name",
									"disabled": true
								},
								{
									"key": "fields",
									"value": "ID",
									"description": "The network policy fields to return\n\nAvailable values : ID, CREATE_TIME, UPDATE_TIME, ORG_ID, NAME, DESCRIPTION, TYPE, PREDEFINED",
									"disabled": true
								},
								{
									"key": "view",
									"value": "FULL",
									"description": "The views to return network policy fields (Check fields for each view at XiqNetworkPolicyView schema)\n\nAvailable values : BASIC, FULL",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"type\": \"NETWORK_ACCESS_AND_SWITCHING\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get the network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update the Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"type\": \"NETWORK_ACCESS_AND_SWITCHING\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete the Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List SSIDs for a Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}/ssids?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}",
								"ssids"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add SSIDs to a Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {{ssid_id}}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}/ssids/:add",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}",
								"ssids",
								":add"
							],
							"variable": [
								{
									"key": "add",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Removes SSIDs from a Network Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {{ssid_id}}\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/network-policies/{{np_id}}/ssids/:remove",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"network-policies",
								"{{np_id}}",
								"ssids",
								":remove"
							],
							"variable": [
								{
									"key": "remove",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Client",
			"item": [
				{
					"name": "Get Client info",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/{{client_id}}?views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"{{client_id}}"
							],
							"query": [
								{
									"key": "views",
									"value": "FULL",
									"description": "The views to return client fields (Check fields for each view at XiqClientView schema)\n\nAvailable values : BASIC, FULL, STATUS, DETAIL, LOCATION, METRICS, IOT"
								},
								{
									"key": "fields",
									"value": "ID",
									"description": "The client fields to return\n\nAvailable values : ID, CREATE_TIME, UPDATE_TIME, ORG_ID, ORG_NAME, LOCATION_ID, LOCATIONS, HOSTNAME, MAC_ADDRESS, IP_ADDRESS, IPV6_ADDRESS, OS_TYPE, DEVICE_ID, DEVICE_FUNCTION, DEVICE_NAME, USERNAME, USER_PROFILE_NAME, CONNECTED, ONLINE_TIME, OFFLINE_TIME, VLAN, CONNECTION_TYPE, SSID, PORT, BSSID, PORT_TYPE_NAME, INTERFACE_NAME, AUTH, ENCRYPTION_METHOD, CHANNEL, CLIENT_HEALTH, APPLICATION_HEALTH, NETWORK_HEALTH, RADIO_HEALTH, HEALTH_UPDATE_TIME, RSSI, RSSI_UPDATE_TIME, SNR, SNR_UPDATE_TIME, RADIO_TYPE, WING_AP, VENDOR, MOBILITY, CATEGORY, DESCRIPTION, DEVICE_MAC_ADDRESS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Active Clients",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/active?page=1&limit=10&views=FULL",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"active"
							],
							"query": [
								{
									"key": "locationIds",
									"value": "{{floor_id}}",
									"description": "The Location IDs",
									"disabled": true
								},
								{
									"key": "deviceIds",
									"value": "{{id}}",
									"description": "the Device IDs",
									"disabled": true
								},
								{
									"key": "vlans",
									"value": "200",
									"description": "The associate vlan IDs",
									"disabled": true
								},
								{
									"key": "userProfileNames",
									"value": "Profile Name",
									"description": "The user profile names",
									"disabled": true
								},
								{
									"key": "ssids",
									"value": "SSID Name",
									"description": "The SSIDs",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "views",
									"value": "FULL",
									"description": "The views to return client fields (Check fields for each view at XiqClientView schema)\n\nAvailable values : BASIC, FULL, STATUS, DETAIL, LOCATION, METRICS, IOT"
								},
								{
									"key": "fields",
									"value": "id",
									"description": "The client fields to return\n\nAvailable values : ID, CREATE_TIME, UPDATE_TIME, ORG_ID, ORG_NAME, LOCATION_ID, LOCATIONS, HOSTNAME, MAC_ADDRESS, IP_ADDRESS, IPV6_ADDRESS, OS_TYPE, DEVICE_ID, DEVICE_FUNCTION, DEVICE_NAME, USERNAME, USER_PROFILE_NAME, CONNECTED, ONLINE_TIME, OFFLINE_TIME, VLAN, CONNECTION_TYPE, SSID, PORT, BSSID, PORT_TYPE_NAME, INTERFACE_NAME, AUTH, ENCRYPTION_METHOD, CHANNEL, CLIENT_HEALTH, APPLICATION_HEALTH, NETWORK_HEALTH, RADIO_HEALTH, HEALTH_UPDATE_TIME, RSSI, RSSI_UPDATE_TIME, SNR, SNR_UPDATE_TIME, RADIO_TYPE, WING_AP, VENDOR, MOBILITY, CATEGORY, DESCRIPTION, DEVICE_MAC_ADDRESS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get client summary metrics",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"connected_wireless_client_count\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/summary",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"summary"
							],
							"query": [
								{
									"key": "locationIds",
									"value": "{{floor_id}}",
									"description": "The Location IDs",
									"disabled": true
								},
								{
									"key": "deviceIds",
									"value": "{{id}}",
									"description": "The Device IDs",
									"disabled": true
								},
								{
									"key": "vlans",
									"value": "92",
									"description": "The associate vlan IDs",
									"disabled": true
								},
								{
									"key": "userProfileNames",
									"value": "Profile Name",
									"description": "The user profile names",
									"disabled": true
								},
								{
									"key": "ssids",
									"value": "SSID Name",
									"description": "The SSIDs",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get usage per client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 19, 2022 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 2000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(2000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/clients/usage?clientIds={{client_id}}&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"clients",
								"usage"
							],
							"query": [
								{
									"key": "clientIds",
									"value": "{{client_id}}",
									"description": "The Client IDs"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Application",
			"item": [
				{
					"name": "List the applications",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/applications?page=1&limit=10&predefined=true",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"applications"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "name",
									"value": "ACROBAT.COM",
									"description": "Application Name",
									"disabled": true
								},
								{
									"key": "detectionProtocol",
									"value": "HTTPS",
									"description": "Application Detection Protocol, only for custom Application\n\nAvailable values : HTTP, HTTPS",
									"disabled": true
								},
								{
									"key": "detectionType",
									"value": "HOST_NAME",
									"description": "Application Detection Type, only for custom Application\n\nAvailable values : HOST_NAME, SERVER_IP_ADDRESS, PORT_NUMBER",
									"disabled": true
								},
								{
									"key": "predefined",
									"value": "true",
									"description": "Flag to filter predefined or custom Application\n\nExample : true"
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "The sort field\n\nAvailable values : NAME, CATEGORY",
									"disabled": true
								},
								{
									"key": "order",
									"value": "DESC",
									"description": "The sort order (ascending by default)\n\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List the TopN clients for a application",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"client_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/applications/{{app_id}}/clients/top{{count}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"applications",
								"{{app_id}}",
								"clients",
								"top{{count}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time for querying top client usage of application"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time for querying top application usage of application"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List the TopN applications",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //count to be used in url TopN number",
									"//enter start and end times",
									"var startTime = new Date(\"Sept 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Sept 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 155000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(15000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/applications/top{{count}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"applications",
								"top{{count}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time for querying top application usage"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time for querying top application usage"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Alert",
			"item": [
				{
					"name": "List the alerts",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alerts?page=1&limit=10&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alerts"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time for querying top client usage of application"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time for querying top application usage of application"
								},
								{
									"key": "severity",
									"value": "",
									"description": "The alert severity to filter\n\nAvailable values : CRITICAL, WARNING, INFO",
									"disabled": true
								},
								{
									"key": "category",
									"value": "",
									"description": "The alert category to filter\n\nAvailable values : DEVICE, XIQ, SECURITY, PERFORMANCE, CLIENT, ANOMALY",
									"disabled": true
								},
								{
									"key": "alertType",
									"value": null,
									"description": "The alert type to filter",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": null,
									"description": "The keyword to filter, such as device SN or MAC address",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Count the alerts by different grouping",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the Group to collect the count from",
									"var alert_group = \"SEVERITY\"; //Available values : SEVERITY, CATEGORY, ALERT_TYPE",
									"//enter start and end times",
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"alert_group\", alert_group);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/alerts/count-by -{{alert_group}}?startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alerts",
								"count-by -{{alert_group}}"
							],
							"query": [
								{
									"key": "startTime",
									"value": "{{myStartTime}}"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Log",
			"item": [
				{
					"name": "List Accounting Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"username\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/accounting?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"accounting"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "username",
									"value": "",
									"description": "The user login name",
									"disabled": true
								},
								{
									"key": "callingStationId",
									"value": "",
									"description": "The calling station ID",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970, default is 0 if not specified or is negative",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970, default is now if not specified or is negative",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Audit Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/audit?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"audit"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "category",
									"value": "ADMIN",
									"description": "Audit category\n\nAvailable values : ADMIN, SYSTEM, DEPLOYMENT, CONFIG, MONITOR, ALARM",
									"disabled": true
								},
								{
									"key": "username",
									"value": "User Name",
									"description": "The user login name",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970, default is 0 if not specified or is negative",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970, default is now if not specified or is negative",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Auth Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/auth?page=1&limit=10&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"auth"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "username",
									"value": "User Name",
									"description": "The user login name",
									"disabled": true
								},
								{
									"key": "callingStationId",
									"value": "",
									"description": "The calling station ID",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970, default is 0 if not specified or is negative"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970, default is now if not specified or is negative"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Credential Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndtime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/credential?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"credential"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "username",
									"value": "User Name",
									"description": "The user login name",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970, default is 0 if not specified or is negative",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970, default is now if not specified or is negative",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Email Logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/email?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"email"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "username",
									"value": "User Name",
									"description": "The user login name",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970, default is 0 if not specified or is negative",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970, default is now if not specified or is negative",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List SMS logs",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"May 19, 2022 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"May 20, 2022 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logs/sms?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logs",
								"sms"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "phoneNumber",
									"value": "Phone Number",
									"description": "The phone number",
									"disabled": true
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970, default is 0 if not specified or is negative",
									"disabled": true
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970, default is now if not specified or is negative",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notification",
			"item": [
				{
					"name": "List Webhook subscriptions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"message_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/subscriptions/webhook",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"subscriptions",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Webhook subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"application\": \"example-app\",\n    \"url\": \"https://webhook_endpoint-example-123\",\n    \"secret\": \"erw3245cq3dasbjtyj\",\n    \"message_type\": \"LOCATION_AP_CENTRIC\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/subscriptions/webhook",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"subscriptions",
								"webhook"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Webhook subscription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/subscriptions/webhook/{{web_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"subscriptions",
								"webhook",
								"{{web_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Deployment",
			"item": [
				{
					"name": "Push config and update firmaware",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"request_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"devices\": {\n    \"ids\": [\n      {{id}}\n    ]\n  },\n  \"policy\": {\n    \"enable_complete_configuration_update\": true,\n    \"firmware_upgrade_policy\": {\n      \"enable_enforce_upgrade\": true,\n      \"enable_distributed_upgrade\": true\n    },\n    \"firmware_activate_option\": {\n      \"enable_activate_at_next_reboot\": true,\n      \"activation_delay_seconds\": 0,\n      \"activation_time\": 0\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get configuration deployment overview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"request_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments/overview",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments",
								"overview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get configuration deployment status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"request_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/deployments/status?deviceIds={{id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"deployments",
								"status"
							],
							"query": [
								{
									"key": "deviceIds",
									"value": "{{id}}",
									"description": "The target device IDs"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Basic",
			"item": [
				{
					"name": "List VLAN profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create VLAN profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"default_vlan_id\": 0,\n  \"enable_classification\": true,\n  \"classified_entries\": [\n    {\n      \"vlan_id\": 0,\n      \"classification_rule_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "[LRO] Delete Vlan profiles",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles/:delete",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles",
								":delete"
							],
							"query": [
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode\n\nDefault value : false",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "delete",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a VLAN profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles/{{vlan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles",
								"{{vlan_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a VLAN profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles/{{vlan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles",
								"{{vlan_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a VLAN profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"default_vlan_id\": 0,\n  \"enable_classification\": true,\n  \"classified_entries\": [\n    {\n      \"vlan_id\": 0,\n      \"classification_rule_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/vlan-profiles/{{vlan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"vlan-profiles",
								"{{vlan_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Configuration - User Management",
			"item": [
				{
					"name": "List Email templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/email-templates?passwordType=PPSK",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"email-templates"
							],
							"query": [
								{
									"key": "passwordType",
									"value": "PPSK",
									"description": "The password type\n\nAvailable values : PPSK, RADIUS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List end users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "user_group_ids",
									"value": "{{group_id}}",
									"description": "The user group IDs",
									"disabled": true
								},
								{
									"key": "usernames",
									"value": "",
									"description": "The list of username",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create an end users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_group_id\": {{group_id}},\n  \"name\": \"string\",\n  \"user_name\": \"string\",\n  \"organization\": \"string\",\n  \"visit_purpose\": \"string\",\n  \"description\": \"string\",\n  \"email_address\": \"string\",\n  \"phone_number\": \"string\",\n  \"password\": \"string\",\n  \"email_password_delivery\": \"string\",\n  \"sms_password_delivery\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an end users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_group_id\": {{group_id}},\n  \"name\": \"string\",\n  \"user_name\": \"string\",\n  \"organization\": \"string\",\n  \"visit_purpose\": \"string\",\n  \"description\": \"string\",\n  \"email_address\": \"string\",\n  \"phone_number\": \"string\",\n  \"password\": \"string\",\n  \"email_password_delivery\": \"string\",\n  \"sms_password_delivery\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers/{{user_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an end users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers/{{user_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers",
								"{{user_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Regenerate password for an end user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"password\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/endusers/{{user_id}}/:regenerate-password",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"endusers",
								"{{user_id}}",
								":regenerate-password"
							],
							"variable": [
								{
									"key": "regenerate-password",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Key-based Private Client Groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based"
							]
						}
					},
					"response": []
				},
				{
					"name": "Setup a Key-based Private Client Group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"policy_name\": \"string\",\n  \"ssid_name\": \"string\",\n  \"users\": [\n    {\n      \"name\": \"string\",\n      \"email\": \"string\",\n      \"user_group_name\": \"string\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Private Client Group from a network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}?ids={{pcgk_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{pcgk_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a Key-based Private Client Group for a network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"ssid_name\": \"string\",\n  \"enabled\": true,\n  \"user_ids\": [\n    0\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/:onboard",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								":onboard"
							],
							"variable": [
								{
									"key": "onboard",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Send keys to specified users in PCG-enabled network policy via Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/keys/:email?userIds={{user_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"keys",
								":email"
							],
							"query": [
								{
									"key": "userIds",
									"value": "{{user_id}}",
									"description": "The user IDs"
								}
							],
							"variable": [
								{
									"key": "email",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Generate/regenerate shared keys for specified users in PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/keys/:generate?userIds={{user_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"keys",
								":generate"
							],
							"query": [
								{
									"key": "userIds",
									"value": "{{user_id}}",
									"description": "The user IDs"
								}
							],
							"variable": [
								{
									"key": "generate",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get port assignments for devices (only support AP150W now) in a network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"policy_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/port-assignments",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"port-assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign ports for devices (only support AP150W now) in a network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"policy_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"port_assignments\": [\n    {\n      \"device_id\": 0,\n      \"eth1_user_id\": 0,\n      \"eth2_user_id\": 0,\n      \"eth3_user_id\": 0\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/port-assignments",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"port-assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get users for a PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Replace all users in a PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"users\": [\n    {\n      \"name\": \"string\",\n      \"email\": \"string\",\n      \"user_group_name\": \"string\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add users to a PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"users\": [\n    {\n      \"name\": \"string\",\n      \"email\": \"string\",\n      \"user_group_name\": \"string\"\n    }\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete users from a PCG-enabled network policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([202]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"user_ids\": [\n    {{pcgu_id}}\n  ]\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/pcgs/key-based/network-policy-{{np_id}}/users",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"pcgs",
								"key-based",
								"network-policy-{{np_id}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "List SMS templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/sms-templates",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"sms-templates"
							],
							"query": [
								{
									"key": "passwordType",
									"value": "PPSK",
									"description": "The password type\n\nAvailable values : PPSK, RADIUS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List user groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "password_db_location",
									"value": "CLOUD",
									"description": "The password DB location\n\nAvailable values : CLOUD, LOCAL",
									"disabled": true
								},
								{
									"key": "passwordType",
									"value": "PPSK",
									"description": "The password type\n\nAvailable values : PPSK, RADIUS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"password_db_location\": \"CLOUD\",\n  \"ppsk_use_only\": true,\n  \"password_type\": \"PPSK\",\n  \"enable_max_clients_per_ppsk\": true,\n  \"max_clients_per_ppsk\": 0,\n  \"pcg_use_only\": true,\n  \"pcg_type\": \"AP_BASED\",\n  \"enable_cwp_reg\": true,\n  \"password_settings\": {\n    \"enable_letters\": true,\n    \"enable_numbers\": true,\n    \"enable_special_characters\": true,\n    \"password_concat_string\": \"string\",\n    \"psk_generation_method\": \"PASSWORD_ONLY\",\n    \"password_character_types\": \"INCLUDE_ALL_CHARACTER_TYPE_ENABLED\",\n    \"password_length\": 0\n  },\n  \"expiration_settings\": {\n    \"expiration_type\": \"NEVER_EXPIRE\",\n    \"valid_during_dates\": {\n      \"start_date_time\": {\n        \"day_of_month\": 0,\n        \"month\": 0,\n        \"year\": 0,\n        \"hour_of_day\": 0,\n        \"minute_of_hour\": 0\n      },\n      \"end_date_time\": {\n        \"day_of_month\": 0,\n        \"month\": 0,\n        \"year\": 0,\n        \"hour_of_day\": 0,\n        \"minute_of_hour\": 0\n      },\n      \"time_zone\": \"string\"\n    },\n    \"valid_for_time_period\": {\n      \"valid_time_period_after\": \"ID_CREATION\",\n      \"after_id_creation_settings\": {\n        \"valid_time_period\": 0,\n        \"valid_time_period_unit\": \"MINUTE\"\n      },\n      \"after_first_login_settings\": {\n        \"valid_time_period\": 0,\n        \"valid_time_period_unit\": \"MINUTE\",\n        \"first_login_within\": 0,\n        \"first_login_within_unit\": \"MINUTE\"\n      }\n    },\n    \"valid_daily\": {\n      \"daily_start_hour\": 0,\n      \"daily_start_minute\": 0,\n      \"daily_end_hour\": 0,\n      \"daily_end_minute\": 0\n    },\n    \"expiration_action\": \"SHOW_MESSAGE\",\n    \"post_expiration_action\": {\n      \"enable_credentials_renewal\": true,\n      \"enable_delete_immediately\": true,\n      \"delete_after_value\": 0,\n      \"delete_after_unit\": \"MINUTE\"\n    }\n  },\n  \"delivery_settings\": {\n    \"email_template_id\": 0,\n    \"sms_template_id\": 0\n  }\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string test\",\n  \"password_db_location\": \"CLOUD\",\n  \"ppsk_use_only\": true,\n  \"password_type\": \"PPSK\",\n  \"enable_max_clients_per_ppsk\": true,\n  \"max_clients_per_ppsk\": 0,\n  \"pcg_use_only\": true,\n  \"pcg_type\": \"AP_BASED\",\n  \"enable_cwp_reg\": true,\n  \"password_settings\": {\n    \"enable_letters\": true,\n    \"enable_numbers\": true,\n    \"enable_special_characters\": true,\n    \"password_concat_string\": \"string\",\n    \"psk_generation_method\": \"PASSWORD_ONLY\",\n    \"password_character_types\": \"INCLUDE_ALL_CHARACTER_TYPE_ENABLED\",\n    \"password_length\": 0\n  },\n  \"expiration_settings\": {\n    \"expiration_type\": \"NEVER_EXPIRE\",\n    \"valid_during_dates\": {\n      \"start_date_time\": {\n        \"day_of_month\": 0,\n        \"month\": 0,\n        \"year\": 0,\n        \"hour_of_day\": 0,\n        \"minute_of_hour\": 0\n      },\n      \"end_date_time\": {\n        \"day_of_month\": 0,\n        \"month\": 0,\n        \"year\": 0,\n        \"hour_of_day\": 0,\n        \"minute_of_hour\": 0\n      },\n      \"time_zone\": \"string\"\n    },\n    \"valid_for_time_period\": {\n      \"valid_time_period_after\": \"ID_CREATION\",\n      \"after_id_creation_settings\": {\n        \"valid_time_period\": 0,\n        \"valid_time_period_unit\": \"MINUTE\"\n      },\n      \"after_first_login_settings\": {\n        \"valid_time_period\": 0,\n        \"valid_time_period_unit\": \"MINUTE\",\n        \"first_login_within\": 0,\n        \"first_login_within_unit\": \"MINUTE\"\n      }\n    },\n    \"valid_daily\": {\n      \"daily_start_hour\": 0,\n      \"daily_start_minute\": 0,\n      \"daily_end_hour\": 0,\n      \"daily_end_minute\": 0\n    },\n    \"expiration_action\": \"SHOW_MESSAGE\",\n    \"post_expiration_action\": {\n      \"enable_credentials_renewal\": true,\n      \"enable_delete_immediately\": true,\n      \"delete_after_value\": 0,\n      \"delete_after_unit\": \"MINUTE\"\n    }\n  },\n  \"delivery_settings\": {\n    \"email_template_id\": 0,\n    \"sms_template_id\": 0\n  }\n}"
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups/{{group_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups",
								"{{group_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "*/*"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/usergroups/{{group_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"usergroups",
								"{{group_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Policy",
			"item": [
				{
					"name": "List all cloud config groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new cloud config group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"NameOfCGG\",\n  \"description\": \"Add New CCG\",\n  \"device_ids\": [\n    44238164,\n    45054207\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Cloud Config group by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs/{{ccg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs",
								"{{ccg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Cloud Config group information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"\",\n  \"description\": \"Update CCG device list\",\n  \"device_ids\": [\n    {{id}}\n    \n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs/{{ccg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs",
								"{{ccg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Cloud Config Group by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ccgs/{{ccg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ccgs",
								"{{ccg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List classification rules",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create classification rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"classifications\": [\n    {\n      \"classification_type\": \"CLASSIFICATION_TYPE_UNSPECIFIED\",\n      \"match\": true,\n      \"classification_type_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a classification rule by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules/{{class_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules",
								"{{class_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a classification rule by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"classifications\": [\n    {\n      \"classification_type\": \"CLASSIFICATION_TYPE_UNSPECIFIED\",\n      \"match\": true,\n      \"classification_type_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules/{{class_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules",
								"{{class_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a classification rule by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/classification-rules/{{class_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"classification-rules",
								"{{class_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List L3 address profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/l3-address-profiles?addressType=L3_ADDRESS_TYPE_IP_ADDRESS",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"l3-address-profiles"
							],
							"query": [
								{
									"key": "addressType",
									"value": "L3_ADDRESS_TYPE_IP_ADDRESS",
									"description": "The address type\n\nAvailable values : L3_ADDRESS_TYPE_UNSPECIFIED, L3_ADDRESS_TYPE_IP_ADDRESS, L3_ADDRESS_TYPE_IP_SUBNET, L3_ADDRESS_TYPE_IP_RANGE, UNRECOGNIZED"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List radio profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new radio profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"transmission_power\": 20,\n  \"max_transmit_power\": 20,\n  \"transmission_power_floor\": 20,\n  \"transmission_power_max_drop\": 18,\n  \"max_clients\": 255,\n  \"enable_client_transmission_power\": true,\n  \"client_transmission_power\": 20,\n  \"radio_mode\": \"B_G\",\n  \"enable_ofdma\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get radio profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/{{radio_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"{{radio_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update radio profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"transmission_power\": 20,\n  \"max_transmit_power\": 20,\n  \"transmission_power_floor\": 20,\n  \"transmission_power_max_drop\": 18,\n  \"max_clients\": 255,\n  \"enable_client_transmission_power\": true,\n  \"client_transmission_power\": 20,\n  \"radio_mode\": \"B_G\",\n  \"enable_ofdma\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/{{radio_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"{{radio_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete radio profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/{{radio_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"{{radio_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get channel selection settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"channel\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/channel-selection/{{channel_selection_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"channel-selection",
								"{{channel_selection_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update channel selection settingss",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"channel\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enable_dynamic_channel_switching\": true,\n  \"channel_width\": \"string\",\n  \"enable_dynamic_frequency_selection\": true,\n  \"enable_static_channel\": true,\n  \"enable_zero_wait_dfs\": true,\n  \"enable_use_last_selection\": true,\n  \"exclude_channels\": \"string\",\n  \"exclude_channels_width\": \"string\",\n  \"channel\": 165,\n  \"enable_limit_channel_selection\": true,\n  \"channel_region\": \"string\",\n  \"channel_model\": 4,\n  \"channels\": \"string\",\n  \"enable_channel_auto_selection\": true,\n  \"channel_selection_start_time\": \"string\",\n  \"channel_selection_end_time\": \"string\",\n  \"enable_avoid_switch_channel_if_clients_connected\": true,\n  \"channel_selection_max_clients\": 100,\n  \"enable_switch_channel_if_exceed_threshold\": true,\n  \"rf_interference_threshold\": 80,\n  \"crc_error_threshold\": 80\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/channel-selection/{{channel_selection_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"channel-selection",
								"{{channel_selection_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List MAC OUI profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/mac-ouis?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"mac-ouis"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a  MAC OUI profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"value\": \"string\",\n  \"description\": \"string\",\n  \"mac_type\": \"string\",\n  \"defender_defined\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/mac-ouis",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"mac-ouis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get MAC OUI profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/mac-ouis/{{mac_oui_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"mac-ouis",
								"{{mac_oui_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update MAC OUI profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"value\": \"string\",\n  \"description\": \"string\",\n  \"mac_type\": \"string\",\n  \"defender_defined\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/mac-ouis/{{mac_oui_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"mac-ouis",
								"{{mac_oui_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete MAC OUI profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/mac-ouis/{{mac_oui_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"mac-ouis",
								"{{mac_oui_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get radio miscellaneous settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/miscellaneous/{{radio_misc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"miscellaneous",
								"{{radio_misc_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update radio miscellaneous settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"sla_throughput_level\": \"string\",\n  \"radio_range\": 10000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/miscellaneous/{{radio_misc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"miscellaneous",
								"{{radio_misc_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get neighborhood analysis settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/neighborhood-analysis/{{neigh_analysis_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"neighborhood-analysis",
								"{{neigh_analysis_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update neighborhood analysis settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enable_background_scan\": true,\n  \"background_scan_interval\": 1440,\n  \"enable_skip_scan_when_clients_connected\": true,\n  \"enable_skip_scan_when_clients_in_power_save_mode\": true,\n  \"enable_skip_scan_when_process_voice_traffic\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/neighborhood-analysis/{{neigh_analysis_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"neighborhood-analysis",
								"{{neigh_analysis_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get radio usage optimization settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/radio-usage-opt/{{radio_usage_opt_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"radio-usage-opt",
								"{{radio_usage_opt_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update radio usage optimization settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"preamble\": \"string\",\n  \"beacon_period\": 3500,\n  \"enable_frame_burst\": true,\n  \"enable_smart_antenna\": true,\n  \"enable_backhaul_failover\": true,\n  \"wireless_backhaul_switch_trigger_time\": 5,\n  \"wired_backhaul_revert_hold_time\": 300,\n  \"enable_band_steering\": true,\n  \"band_steering_mode\": \"string\",\n  \"ratio_for5g_clients\": 100,\n  \"ignore_initial_client_connection_number\": 100,\n  \"enable_client_load_balancing\": true,\n  \"load_balancing_mode\": \"string\",\n  \"crc_error_rate_per_device\": 99,\n  \"rf_interference_per_device\": 99,\n  \"average_airtime_per_client\": 5,\n  \"anchor_period\": 600,\n  \"neighbor_query_interval\": 600,\n  \"enable_weak_signal_probe_request_suppression\": true,\n  \"weak_snr_threshold\": 100,\n  \"enable_safety_net\": true,\n  \"safety_net_period\": 300,\n  \"enable_high_density\": true,\n  \"management_frame_basic_data_rate\": \"string\",\n  \"enable_suppress_successive_probe_request\": true,\n  \"probe_response_reduction_option\": \"string\",\n  \"suppression_limit\": 10,\n  \"enable_radio_balance\": true,\n  \"mac_oui_ids\": [\n    0\n  ],\n  \"enable_ampdu\": true,\n  \"enable_mu_mimo\": true,\n  \"enable_ofdma_down_link\": true,\n  \"enable_ofdma_up_link\": true,\n  \"bss_coloring\": 63,\n  \"enable_target_weak_time\": true\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/radio-usage-opt/{{radio_usage_opt_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"radio-usage-opt",
								"{{radio_usage_opt_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get sensor scan settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/sensor-scan/{{sensor_scan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"sensor-scan",
								"{{sensor_scan_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update sensor scan settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"enable_scan_all_channels\": true,\n  \"dwell_time\": \"string\",\n  \"scan_channels\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/sensor-scan/{{sensor_scan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"sensor-scan",
								"{{sensor_scan_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WMM QoS settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/wmm-qos/{{radio_qos_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"wmm-qos",
								"{{radio_qos_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update WMM QoS settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"arbitration_interframe_space\": 15,\n  \"min_contention_window\": 15,\n  \"max_contention_window\": 15,\n  \"transmission_opportunity_limit\": 8192,\n  \"enable_no_ack\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radio-profiles/wmm-qos/{{radio_qos_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radio-profiles",
								"wmm-qos",
								"{{radio_qos_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List SSIDs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Rename SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"string\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/:rename",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								":rename"
							],
							"variable": [
								{
									"key": "rename",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach CWP to an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/cwp/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"cwp",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Disable the CWP on an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/cwp/:disable",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"cwp",
								":disable"
							],
							"variable": [
								{
									"key": "disable",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Enable and attach the CWP on an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/cwp/:enable",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"cwp",
								":enable"
							],
							"variable": [
								{
									"key": "enable",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to 802.1X",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_management\": \"WPA3_8021X\",\n  \"encryption_method\": \"CCMP\",\n  \"enable_idm\": true,\n  \"transition_mode\": true,\n  \"radius_server_group_id\": 0,\n  \"user_group_ids\": [\n    0\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/dot1x",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"dot1x"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to open access",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/open",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"open"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to PPSK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_management\": \"WPA_PSK\",\n  \"encryption_method\": \"CCMP\",\n  \"user_group_ids\": [\n    0\n  ],\n  \"enable_max_clients_per_ppsk\": true,\n  \"max_clients_per_ppsk\": 15,\n  \"enable_mac_bind\": true,\n  \"max_macs_per_ppsk\": 5,\n  \"ppsk_server_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/ppsk",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"ppsk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to PSK",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_management\": \"WPA_PSK\",\n  \"encryption_method\": \"CCMP\",\n  \"anti_logging_threshold\": 0,\n  \"key_type\": \"ASCII\",\n  \"key_value\": \"string\",\n  \"sae_group\": \"ALL\",\n  \"transition_mode\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/psk",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"psk"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID mode to WEP",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key_management\": \"WEP_8021X\",\n  \"encryption_method\": \"WEP104\",\n  \"authentication_method\": \"OPEN\",\n  \"default_key\": \"FIRST\",\n  \"key_type\": \"ASCII\",\n  \"key_value\": \"abcd123456789\",\n  \"key_value2\": \"string\",\n  \"key_value3\": \"string\",\n  \"key_value4\": \"string\",\n  \"radius_server_group_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/mode/wep",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"mode",
								"wep"
							]
						}
					},
					"response": []
				},
				{
					"name": "Change the SSID PSK password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "\"string\"",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/psk/password",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"psk",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach radius server group to an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/radius-server-group/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"radius-server-group",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach user profile to an SSID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "0",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ssids/{{ssid_id}}/user-profile/:attach",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ssids",
								"{{ssid_id}}",
								"user-profile",
								":attach"
							],
							"variable": [
								{
									"key": "attach",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List user profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a user profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Testing\",\n  \"vlan_profile_id\": {{vlan_id}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"vlan_profile_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/user-profiles/{{user_profile_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"user-profiles",
								"{{user_profile_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Configuration - Authentication",
			"item": [
				{
					"name": "List active directory servers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ad-servers?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ad-servers"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List captive web portals",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/cwps?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"cwps"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List LDAP servers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create LDAP server",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"enable_tls\": true,\n  \"bind_dn\": \"string\",\n  \"bind_dn_password\": \"string\",\n  \"base_dn\": \"string\",\n  \"l3_address_profile_id\": 0,\n  \"protocol_type\": \"LDAP\",\n  \"enable_strip_realm_name\": false,\n  \"destination_port\": 10,\n  \"verification_mode\": \"TRY\",\n  \"ca_certificate_id\": 0,\n  \"client_certificate_id\": 0,\n  \"client_key_id\": 0,\n  \"client_key_password\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get LDAP server by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers/{{ldap_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers",
								"{{ldap_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update LDAP server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"enable_tls\": true,\n  \"bind_dn\": \"string\",\n  \"bind_dn_password\": \"string\",\n  \"base_dn\": \"string\",\n  \"l3_address_profile_id\": 0,\n  \"protocol_type\": \"LDAP\",\n  \"enable_strip_realm_name\": true,\n  \"destination_port\": 1,\n  \"verification_mode\": \"TRY\",\n  \"ca_certificate_id\": 0,\n  \"client_certificate_id\": 0,\n  \"client_key_id\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers/{{ldap_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers",
								"{{ldap_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete LDAP server",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/ldap-servers/{{ldap_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"ldap-servers",
								"{{ldap_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List RADIUS client objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create RADIUS client objects configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"enable_inject_operator_name_attribute\": true,\n  \"enable_message_authenticator_attribute\": true,\n  \"enable_permit_dynamic_authorization_message_change\": true,\n  \"retry_interval\": 100000000,\n  \"accounting_interim_update_interval\": 100000000,\n  \"entries\": [\n    {\n      \"server_role\": \"PRIMARY\",\n      \"server_type\": \"EXTERNAL_RADIUS_SERVER\",\n      \"radius_server_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS client object by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update RADIUS client object configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"enable_inject_operator_name_attribute\": true,\n  \"enable_message_authenticator_attribute\": true,\n  \"enable_permit_dynamic_authorization_message_change\": true,\n  \"retry_interval\": 100000000,\n  \"accounting_interim_update_interval\": 100000000\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete RADIUS client object",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS proxies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-proxies?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-proxies"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create RADIUS proxy configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"radius-proxy-1\",\n  \"description\": \"Radius Proxy 1\",\n  \"format_type\": \"NAI\",\n  \"retry_count\": 3,\n  \"retry_delay\": 5,\n  \"dead_time\": 300,\n  \"enable_inject_operator_name_attribute\": false,\n  \"device_ids\": [\n{{id}}\n  ],\n  \"clients\": [\n    {\n      \"shared_secret\": \"123456\",\n      \"description\": \"\",\n      \"l3_address_profile_id\": 1000\n    }\n  ],\n  \"realms\": [\n    {\n      \"name\": \"NULL\",\n      \"enable_strip_realm_name\": false,\n      \"radius_client_object_id\": 2000\n    },\n    {\n      \"name\": \"DEFAULT\",\n      \"enable_strip_realm_name\": false,\n      \"radius_client_object_id\": 3000\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS proxy configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_proxy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_proxy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update RADIUS proxy configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"radius-proxy-1\",\n  \"description\": \"Radius Proxy 1\",\n  \"format_type\": \"NAI\",\n  \"retry_count\": 3,\n  \"retry_delay\": 5,\n  \"dead_time\": 300,\n  \"enable_inject_operator_name_attribute\": false,\n  \"clients\": [\n    {\n      \"id\": {{client_id}}\n    },\n    {\n      \"shared_secret\": \"123456\",\n      \"description\": \"\",\n      \"l3_address_profile_id\": 1000\n    }\n  ],\n  \"realms\": [\n    {\n      \"id\": 1\n    },\n    {\n      \"id\": 2\n    },\n    {\n      \"name\": \"test-realm\",\n      \"enable_strip_realm_name\": false,\n      \"radius_client_object_id\": 3000\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_proxy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_proxy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete RADIUS proxy configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-client-objects/{{radius_proxy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-client-objects",
								"{{radius_proxy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get RADIUS proxies Devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-proxies/devices?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-proxies",
								"devices"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List external RADIUS servers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create external RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"shared_secret\": \"string\",\n  \"authentication_port\": 1812,\n  \"accounting_port\": 1813,\n  \"server_type\": \"BOTH\",\n  \"ip_addr\": \"string\",\n  \"enable_a3\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get external RADIUS server by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{ex_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{ex_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update external RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"shared_secret\": \"string\",\n  \"authentication_port\": 1812,\n  \"accounting_port\": 1813,\n  \"server_type\": \"BOTH\",\n  \"ip_addr\": \"string\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{ex_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{ex_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete external RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{ex_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{ex_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List internal RADIUS servers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create internal RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"authentication_method_group\": \"TLS_PEAP_TTLS_LEAP_MD5\",\n  \"default_authentication_method\": \"TLS\",\n  \"enable_verify_server_cert\": true,\n  \"server_key_password\": \"string\",\n  \"enable_check_cert_common_name\": true,\n  \"enable_check_user_for_tls_auth\": true,\n  \"enable_check_user_for_peap_auth\": true,\n  \"enable_check_user_for_ttls_auth\": true,\n  \"enable_authentication_server\": true,\n  \"enable_radius_accounting_settings\": true,\n  \"authentication_server_port\": 1812,\n  \"active_session_limit\": 0,\n  \"active_session_age_timeout\": 1800,\n  \"external_user_directory\": {\n    \"ldap_retry_interval\": 600,\n    \"local_check_interval\": 300,\n    \"remote_check_interval\": 30,\n    \"enable_radius_server_credential_caching\": true,\n    \"cache_lifetime\": 86400,\n    \"user_group_attribute\": \"memberOf\",\n    \"external_user_directory_type\": \"OPEN_LDAP\",\n    \"entries\": [\n      {\n        \"default_server_id\": 0,\n        \"server_role\": \"PRIMARY\"\n      }\n    ]\n  },\n  \"ca_certificate_id\": 0,\n  \"server_certificate_id\": 0,\n  \"server_key_id\": 0,\n  \"device_ids\": [\n    0\n  ],\n  \"clients\": [\n    {\n      \"id\": 0,\n      \"shared_secret\": \"string\",\n      \"description\": \"string\",\n      \"l3_address_profile_id\": 0\n    }\n  ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal"
							]
						}
					},
					"response": []
				},
				{
					"name": "[LRO] Delete internal RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"authentication_method_group\": \"TLS_PEAP_TTLS_LEAP_MD5\",\n  \"default_authentication_method\": \"TLS\",\n  \"enable_verify_server_cert\": true,\n  \"server_key_password\": \"string\",\n  \"enable_check_cert_common_name\": true,\n  \"enable_check_user_for_tls_auth\": true,\n  \"enable_check_user_for_peap_auth\": true,\n  \"enable_check_user_for_ttls_auth\": true,\n  \"enable_authentication_server\": true,\n  \"enable_radius_accounting_settings\": true,\n  \"authentication_server_port\": 1812,\n  \"active_session_limit\": 0,\n  \"active_session_age_timeout\": 1800,\n  \"external_user_directory\": {\n    \"ldap_retry_interval\": 600,\n    \"local_check_interval\": 300,\n    \"remote_check_interval\": 30,\n    \"enable_radius_server_credential_caching\": true,\n    \"cache_lifetime\": 86400,\n    \"user_group_attribute\": \"memberOf\",\n    \"external_user_directory_type\": \"OPEN_LDAP\",\n    \"entries\": [\n      {\n        \"default_server_id\": 0,\n        \"server_role\": \"PRIMARY\"\n      }\n    ]\n  },\n  \"ca_certificate_id\": 0,\n  \"server_certificate_id\": 0,\n  \"server_key_id\": 0,\n  \"device_ids\": [\n    0\n  ],\n  \"clients\": [\n    {\n      \"id\": 0,\n      \"shared_secret\": \"string\",\n      \"description\": \"string\",\n      \"l3_address_profile_id\": 0\n    }\n  ]\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal?ids={{radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{radius_id}}",
									"description": "The internal RADIUS server IDs to be delete, min = 1 ID, max = 100 IDs"
								},
								{
									"key": "async",
									"value": "false",
									"description": "Whether to enable async mode",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get internal RADIUS server by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal/{{int_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal",
								"{{int_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update internal RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"string\",\n  \"description\": \"string\",\n  \"authentication_method_group\": \"TLS_PEAP_TTLS_LEAP_MD5\",\n  \"default_authentication_method\": \"TLS\",\n  \"enable_verify_server_cert\": true,\n  \"server_key_password\": \"string\",\n  \"enable_check_cert_common_name\": true,\n  \"enable_check_user_for_tls_auth\": true,\n  \"enable_check_user_for_peap_auth\": true,\n  \"enable_check_user_for_ttls_auth\": true,\n  \"enable_authentication_server\": true,\n  \"enable_radius_accounting_settings\": true,\n  \"authentication_server_port\": 1812,\n  \"active_session_limit\": 0,\n  \"active_session_age_timeout\": 30,\n  \"ca_certificate_id\": 0,\n  \"server_certificate_id\": 0,\n  \"server_key_id\": 0,\n  \"clients\": [\n    {\n      \"id\": 0,\n      \"shared_secret\": \"string\",\n      \"description\": \"string\",\n      \"l3_address_profile_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{int_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{int_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete internal RADIUS server configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/external/{{int_radius_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"external",
								"{{int_radius_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "List all internal RADIUS devices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"org_id\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/radius-servers/internal/devices?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"radius-servers",
								"internal",
								"devices"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Conifguration - Certificate",
			"item": [
				{
					"name": "List certificates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"Body includes data \", function () {",
									"    pm.expect(pm.response.text()).to.include(\"cert_type\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/certificates?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"certificates"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "certType",
									"value": "CERT",
									"description": "The certificate type\n\nAvailable values : CERT, KEY",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Copilot - Connectivity Experience",
			"item": [
				{
					"name": "Copilot Wired Events",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wired/events?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&page=1&limit=10&forensicBucket=TWENTY_FOUR_HOURS&scoreType=PORT_ERRORS&locationId={{loc_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wired",
								"events"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "sortBy",
									"value": "INTERFACE_ERRORS",
									"description": "The sort field\nAvailable values : INTERFACE_ERRORS",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (ascending by default)\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "viewId",
									"value": "",
									"description": "The view id based on view type",
									"disabled": true
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS"
								},
								{
									"key": "scoreType",
									"value": "PORT_ERRORS",
									"description": "The selected score type\nAvailable values : PORT_ERRORS"
								},
								{
									"key": "searchKey",
									"value": "",
									"description": "The selected search key",
									"disabled": true
								},
								{
									"key": "locationType",
									"value": "BUILDING",
									"description": "The selected location type",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The selected location id"
								},
								{
									"key": "timestamp",
									"value": "",
									"description": "The timestamp to query, epoch time in milliseconds since 1/1/1970",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wired Experience",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wired/experience?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wired",
								"experience"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "The sort field\nAvailable values : NAME, QUALITY_INDEX",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (ascending by default)\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wired Hardware",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"quality_index_graph\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wired/hardware?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&forensicBucket=TWENTY_FOUR_HOURS",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wired",
								"hardware"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": null,
									"description": "The view id based on view type",
									"disabled": true
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wired Quality-Index",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Feb 15, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"quality_index\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wired/quality-index?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&forensicBucket=TWENTY_FOUR_HOURS",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wired",
								"quality-index"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": null,
									"description": "The view id based on view type",
									"disabled": true
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Apps",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"total_apps\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/apps?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&viewId=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"apps"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION, SSID, OS"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": "0",
									"description": "The view id based on view type"
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The location identifier\n\nDefault value : 0",
									"disabled": true
								},
								{
									"key": "locationType",
									"value": "BUILDING",
									"description": "The location type\n\nDefault value :",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Events",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/events?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&page=1&limit=10&scoreType=TIME_TO_AUTHENTICATE",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"events"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION, SSID, OS"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "sortBy",
									"value": "INTERFACE_ERRORS",
									"description": "The sort field\nAvailable values : INTERFACE_ERRORS",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (ascending by default)\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "viewId",
									"value": "",
									"description": "The view id based on view type",
									"disabled": true
								},
								{
									"key": "scoreType",
									"value": "TIME_TO_AUTHENTICATE",
									"description": "The wireless score type\nAvailable values : TIME_TO_AUTHENTICATE, TIME_TO_ASSOCIATE, TIME_TO_DHCP, DNS, RETRIES"
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								},
								{
									"key": "searchKey",
									"value": "",
									"description": "The selected search key",
									"disabled": true
								},
								{
									"key": "locationType",
									"value": "BUILDING",
									"description": "The selected location type",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The selected location id",
									"disabled": true
								},
								{
									"key": "timestamp",
									"value": "",
									"description": "The timestamp to query, epoch time in milliseconds since 1/1/1970",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Experience",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/experience?viewType=LOCATION&page=1&limit=10&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"experience"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION, SSID, OS"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1 \nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100 \nDefault value : 10"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "sortField",
									"value": "NAME",
									"description": "The sort field\nAvailable values : NAME, QUALITY_INDEX",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sort order (ascending by default)\nAvailable values : ASC, DESC",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Performance",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"quality_index_graph\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/performance?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&viewId=0",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"performance"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION, SSID, OS"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": "0",
									"description": "The view id based on view type"
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The location identifier\nDefault value : 0",
									"disabled": true
								},
								{
									"key": "locationType",
									"value": "BUILDING",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Quality-index",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"quality_index\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/quality-index?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"quality-index"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION, SSID, OS"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": "1",
									"description": "The view id based on view type",
									"disabled": true
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS",
									"disabled": true
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The location identifier\nDefault value : 0",
									"disabled": true
								},
								{
									"key": "locationType",
									"value": "BUILDING",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Time To Connect",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"quality_index_graph\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/time-to-connect?viewType=LOCATION&startTime={{myStartTime}}&endTime={{myEndTime}}&viewId=0&forensicBucket=TWENTY_FOUR_HOURS",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"time-to-connect"
							],
							"query": [
								{
									"key": "viewType",
									"value": "LOCATION",
									"description": "The type of View\nAvailable values : LOCATION, SSID, OS"
								},
								{
									"key": "startTime",
									"value": "{{myStartTime}}",
									"description": "The start time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "endTime",
									"value": "{{myEndTime}}",
									"description": "The end time to query, epoch time in milliseconds since 1/1/1970"
								},
								{
									"key": "viewId",
									"value": "0",
									"description": "The view id based on view type"
								},
								{
									"key": "forensicBucket",
									"value": "TWENTY_FOUR_HOURS",
									"description": "The selected time bucket\nAvailable values : TWENTY_FOUR_HOURS, ONE_HOUR, TODAY, ONE_WEEK, SEVEN_DAYS, THIRTY_DAYS, NINETY_DAYS"
								},
								{
									"key": "locationId",
									"value": "{{loc_id}}",
									"description": "The location identifier\nDefault value : 0",
									"disabled": true
								},
								{
									"key": "locationType",
									"value": "BUILDING",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Wireless Views",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"views_list_entities\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/connectivity/wireless/views?viewType=SSID",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"connectivity",
								"wireless",
								"views"
							],
							"query": [
								{
									"key": "viewType",
									"value": "SSID",
									"description": "The type of View\nAvailable values : SSID, OS"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Copilot - Anomalies",
			"item": [
				{
					"name": "Copilot Anomalies Devices by Location",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"location_entity\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/devices-by-location?anomalyType=POE_FLAPPING",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"devices-by-location"
							],
							"query": [
								{
									"key": "anomalyType",
									"value": "POE_FLAPPING",
									"description": "Anomaly type\n\nAvailable values : POE_FLAPPING, DFS_RECURRENCE, MULTI_BROADCAST, UPLINK_EFFICIENCY, WIFI_CAPACITY, WIFI_EFFICIENCY"
								},
								{
									"key": "locationId",
									"value": "0",
									"description": "The location id\n\nDefault value : 0",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies Locations",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"data\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/locations?anomalyType=POE_FLAPPING&page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"locations"
							],
							"query": [
								{
									"key": "anomalyType",
									"value": "POE_FLAPPING",
									"description": "Anomaly type\n\nAvailable values : POE_FLAPPING, DFS_RECURRENCE, MULTI_BROADCAST, UPLINK_EFFICIENCY, WIFI_CAPACITY, WIFI_EFFICIENCY"
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of Records, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "sortField",
									"value": "LOCATION",
									"description": "sort by field\n\nAvailable values : LOCATION, SEVERITY, TIME",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "ASC",
									"description": "The sorting order\n\nAvailable values : ASC, DESC",
									"disabled": true
								},
								{
									"key": "excludeMuted",
									"value": "false",
									"description": "exclude muted\n\nDefault value : false",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Copilot Anomalies POE Flapping Stats",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//enter the number of Top clients to return",
									"var count = 5; //The count number to be added to URL",
									"//enter start and end times",
									"var startTime = new Date(\"Jan 1, 2023 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"Feb 22, 2023 12:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"count\", count);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include login info\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"flap_count_entities\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1500ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1500);",
									"    });"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://api.extremecloudiq.com/copilot/anomalies/poeflapping/stats?anomalyId=string",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"copilot",
								"anomalies",
								"poeflapping",
								"stats"
							],
							"query": [
								{
									"key": "anomalyId",
									"value": "string",
									"description": "The anomaly id"
								},
								{
									"key": "locationId",
									"value": "0",
									"description": "The location id\n\nDefault value : 0",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var authServiceUrl = pm.collectionVariables.get('authService');",
					"var gatewayBaseUrl = pm.collectionVariables.get('gatewayBaseUrl');",
					"var un = pm.environment.get('username');",
					"var pw = pm.environment.get('password');",
					"",
					"var sdk = require('postman-collection');",
					"",
					"if (pm.info.requestName === \"Login\"){",
					"    pm.environment.set(\"jwttoken\", \"123\");",
					"    console.log('Token has been reset');",
					"};",
					"",
					"var isValidTokenRequest = new sdk.Request({",
					"    url: gatewayBaseUrl + \"/account/info\", // Use an endpoint that requires being authenticated",
					"    method: 'GET',",
					"    header: [",
					"        new sdk.Header({",
					"            key: 'content-type',",
					"            value: 'application/json',",
					"        }),",
					"        new sdk.Header({",
					"            key: 'acccept',",
					"            value: 'application/json',",
					"        }),",
					"        new sdk.Header({",
					"            key: 'Authorization',",
					"            value: 'Bearer ' + pm.environment.get(\"jwttoken\"),",
					"        }),",
					"    ]",
					"});",
					"",
					"pm.sendRequest(isValidTokenRequest, function (err, response) {",
					"    if (response.code === 401) {",
					"        console.log('Token is unauthorized');",
					"        refreshToken();",
					"    }",
					"    else if (response.code === 200)",
					"    {",
					"        console.log('Valid Token');",
					"    }",
					"});",
					"",
					"function refreshToken() {",
					"    var tokenRequest = new sdk.Request({",
					"    url: authServiceUrl,",
					"    method: 'POST',",
					"    header: [",
					"        new sdk.Header({",
					"            key: 'content-type',",
					"            value: 'application/json'",
					"        }),",
					"        new sdk.Header({",
					"            key: 'acccept',",
					"            value: '*/*'",
					"        }),",
					"    ],",
					"    body: {",
					"        mode: 'raw',",
					"        raw: JSON.stringify({",
					"            username: un,",
					"            password: pw",
					"        })",
					"    } ",
					"  });",
					"",
					"  pm.sendRequest(tokenRequest, function (err, response) {",
					"      if (err) {",
					"          throw err;",
					"      }",
					"      ",
					"      if (response.code !== 200) {",
					"          throw new Error('Could not log in.');",
					"      }",
					"      ",
					"      pm.environment.set(\"jwttoken\", response.json().access_token);",
					"      console.log(`New token has been set: ${response.json().access_token}`);",
					"  });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "authService",
			"value": "https://api.extremecloudiq.com/login"
		},
		{
			"key": "gatewayBaseUrl",
			"value": "https://api.extremecloudiq.com"
		},
		{
			"key": "jwttoken",
			"value": ""
		},
		{
			"key": "manage",
			"value": ":manage"
		},
		{
			"key": "check",
			"value": ":check"
		},
		{
			"key": "deploy",
			"value": ":deploy"
		},
		{
			"key": "cli",
			"value": ":cli"
		},
		{
			"key": "reboot",
			"value": ":reboot"
		},
		{
			"key": "unmanage",
			"value": ":unmanage"
		},
		{
			"key": "rename",
			"value": ":rename"
		}
	]
}