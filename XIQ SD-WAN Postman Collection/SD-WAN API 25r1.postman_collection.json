{
	"info": {
		"_postman_id": "a12bef99-d2f9-4d2a-af41-2a0a697b8e82",
		"name": "SD-WAN API 25r1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4056946",
		"_collection_link": "https://gold-escape-604608.postman.co/workspace/XIQ-SD-WAN~8fada7ec-9250-4ec8-8338-9dc820b2e8b4/collection/4056946-a12bef99-d2f9-4d2a-af41-2a0a697b8e82?action=share&source=collection_link&creator=4056946"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login Basic authentication",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									"pm.test(\"include access token\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"access_token\");",
									"    console.log(pm.test)",
									"});",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"pm.environment.set(\"jwttoken\", jsonData['access_token']);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/login",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout - Revoke token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/logout",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sites",
			"item": [
				{
					"name": "List sites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/site?page=1&limit=10",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"site"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number, min = 1\n\nDefault value : 1"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Page Size, min = 1, max = 100\n\nDefault value : 10"
								},
								{
									"key": "name",
									"value": "string",
									"description": "List sites by name (case insensitive)",
									"disabled": true
								},
								{
									"key": "ids",
									"value": "0",
									"description": "List sites by IDs",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": 0,\n  \"name\": \"string\",\n  \"country_code\": 0,\n  \"address\": {\n    \"address\": \"string\",\n    \"address2\": \"string\",\n    \"city\": \"string\",\n    \"postal_code\": \"string\",\n    \"state\": \"string\"\n  },\n  \"latitude\": 0,\n  \"longitude\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/site",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"site"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get site by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/site/{{site_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"site",
								"{{site_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update site by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"parent_id\": 0,\n  \"name\": \"string\",\n  \"country_code\": 0,\n  \"address\": {\n    \"address\": \"string\",\n    \"address2\": \"string\",\n    \"city\": \"string\",\n    \"postal_code\": \"string\",\n    \"state\": \"string\"\n  },\n  \"latitude\": 0,\n  \"longitude\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/site/{{site_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"site",
								"{{site_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Site by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/locations/site/{{site_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"locations",
								"site",
								"{{site_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get country list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/countries",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"countries"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Policy Configuration",
			"item": [
				{
					"name": "Get SD-WAN Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SD-WAN Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"Hhg=n#G>Lrf97D:8Hjz5{eN%<9Fbvv0@#nDRAwo+<y4G%*Y,T4IIg<Se8-.fY}Pe\",\n      \"description\": \"string\",\n      \"fabric\": \"FABRIC\",\n      \"dns_settings\": {\n        \"auto_via_dhcp\": false,\n        \"dns_servers\": [\n          {\n            \"address\": \"192.168.1.1\"\n          },\n          {\n            \"address\": \"192.168.1.2\"\n          }\n        ]\n      },\n      \"ntp_server_auto\": false,\n      \"ntp_server_ip_addresses\": [\n        \"192.168.1.1\",\n        \"193.169.1.1\"\n      ],\n      \"syslogs\": [\n        {\n          \"name\": \"3`{\",\n          \"ip_address\": \"100.100.100.100\",\n          \"port\": \"100\",\n          \"protocol\": \"TCP\",\n          \"used_for_policy\": true\n        }\n      ],\n      \"fabric_settings\": {\n        \"lan_subnet\": \"192.168.0.2/20\",\n        \"export_management_ip_address\": true,\n        \"local_breakout_enabled\": false\n      }\n    },\n    {\n      \"name\": \"m]fc&qL&)z+3DCu^kj7W*jiBWs&(jrwVY.$}w\",\n      \"description\": \"string\",\n      \"fabric\": \"FABRIC\",\n      \"dns_settings\": {\n        \"auto_via_dhcp\": false,\n        \"dns_servers\": [\n          {\n            \"address\": \"192.168.1.1\"\n          },\n          {\n            \"address\": \"192.168.1.2\"\n          }\n        ]\n      },\n      \"ntp_server_auto\": false,\n      \"ntp_server_ip_addresses\": [\n        \"192.168.1.1\",\n        \"193.169.1.1\"\n      ],\n      \"syslogs\": [\n        {\n          \"name\": \"}~ ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]\",\n          \"ip_address\": \"100.100.100.100\",\n          \"port\": \"100\",\n          \"protocol\": \"TCP\",\n          \"used_for_policy\": true\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update SD-WAN Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"~'#.c8r#-=C\\\\4Wi==-Ch<7T*5`N'\\\\\\\\>K0p%m=,ZXgdfNI\",\n      \"description\": \"string\",\n      \"fabric\": \"FABRIC\",\n      \"dns_settings\": {\n        \"auto_via_dhcp\": false,\n        \"dns_servers\": [\n          {\n            \"address\": \"192.168.1.1\"\n          },\n          {\n            \"address\": \"192.168.1.2\"\n          }\n        ]\n      },\n      \"ntp_server_auto\": false,\n      \"ntp_server_ip_addresses\": [\n        \"192.168.1.1\",\n        \"193.169.1.1\"\n      ],\n      \"syslogs\": [\n        {\n          \"name\": \")`{\",\n          \"ip_address\": \"100.100.100.100\",\n          \"port\": \"100\",\n          \"protocol\": \"TCP\",\n          \"used_for_policy\": true\n        }\n      ],\n      \"fabric_settings\": {\n        \"lan_subnet\": \"192.168.0.2/20\",\n        \"export_management_ip_address\": true,\n        \"local_breakout_enabled\": false\n      }\n    },\n    {\n      \"id\": 1,\n      \"name\": \"{tNyj'r4\",\n      \"description\": \"string\",\n      \"fabric\": \"FABRIC\",\n      \"dns_settings\": {\n        \"auto_via_dhcp\": false,\n        \"dns_servers\": [\n          {\n            \"address\": \"192.168.1.1\"\n          },\n          {\n            \"address\": \"192.168.1.2\"\n          }\n        ]\n      },\n      \"ntp_server_auto\": false,\n      \"ntp_server_ip_addresses\": [\n        \"192.168.1.1\",\n        \"193.169.1.1\"\n      ],\n      \"syslogs\": [\n        {\n          \"name\": \"}~ ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]\",\n          \"ip_address\": \"100.100.100.100\",\n          \"port\": \"100\",\n          \"protocol\": \"TCP\",\n          \"used_for_policy\": true\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Network Policy by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies{{network_policy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies{{network_policy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active SD-WAN Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/active-policy",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"active-policy"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Active SD-WAN Policy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/routing/settings",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"routing",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update routing settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"X\",\n      \"description\": \"string\",\n      \"overlay_ip_range\": \"10.254.0.0/16\",\n      \"bgp_as_range\": \"64512-65534\",\n      \"bgp_as_exclusions\": \"string\",\n      \"bgp_community\": \"FFFE:FF01\",\n      \"ospf_tag\": 6976\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/routing/settings",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"routing",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a routing settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/routing/settings/{{routing_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"routing",
								"settings",
								"{{routing_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Security Configuration",
			"item": [
				{
					"name": "Get VPN Zones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/vpn-zones",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"vpn-zones"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add VPN Zones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"4xA[~I~gX'0&%E\",\n      \"description\": \"string\",\n      \"priority\": 2147483645,\n      \"vpn_subnets\": [\n        {\n          \"prefix\": \"198.51.100.42\",\n          \"mask\": 32\n        }\n      ],\n      \"vpn_sites\": [\n        {\n          \"id\": 1\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/vpn-zones",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"vpn-zones"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update VPN Zones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"g`WvA`jj(W!ko7]^F%PolEv`TKCp\",\n      \"description\": \"string\",\n      \"priority\": 2147483645,\n      \"vpn_subnets\": [\n        {\n          \"prefix\": \"198.51.100.42\",\n          \"mask\": 32\n        }\n      ],\n      \"vpn_sites\": [\n        {\n          \"id\": 1\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/vpn-zones",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"vpn-zones"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete VPN Zones",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/vpn-zones?Ids={{vpn_zone_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"vpn-zones"
							],
							"query": [
								{
									"key": "Ids",
									"value": "{{vpn_zone_id}}",
									"description": "IDs of VPN Zones to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a VPN Zone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/vpn-zones?Id={{vpn_zone_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"vpn-zones"
							],
							"query": [
								{
									"key": "Id",
									"value": "{{vpn_zone_id}}",
									"description": "ID of VPN Zone"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get VPN Policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/vpn-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"vpn-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update VPN Polices",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"policy_kind\": \"ALLOW\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/vpn-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"vpn-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get VPN Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/vpn-policies/{{vpn_policy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"vpn-policies",
								"{{vpn_policy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Port Based Application Sets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/port-based-application-sets",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"port-based-application-sets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Port Based Application Sets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"}J*CHZh~^\\\\M>3Bmvb]=>&4V=q`8{Hd>EaK3h|{O27ZZ6b18Ck;73%dELhH+exYI;\",\n      \"description\": \"string\",\n      \"priority\": 1,\n      \"port_based_applications\": [\n        {\n          \"priority\": 1,\n          \"protocol\": \"TCP\",\n          \"ports\": \"8080;8081\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/port-based-application-sets",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"port-based-application-sets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Internet Access Policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/internet-access-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"internet-access-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Internet Access Policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"policy_kind\": \"DENY\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/internet-access-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"internet-access-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a Internet Access Policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/internet-access-policies/{{internet_access_policy_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"internet-access-policies",
								"{{internet_access_policy_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Saas Application Sets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/saas-application-sets",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"saas-application-sets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Secure Web Gateway",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/secure-web-gateways",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"secure-web-gateways"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Secure Web Gateway",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"primary_public_ip_address\": \"198.51.100.42\",\n      \"secondary_public_ip_address\": \"198.51.100.42\",\n      \"security\": {\n        \"ike_encryption_cipher\": \"AES128CBC\",\n        \"ike_auth_cipher\": \"SHA1\",\n        \"ike_dh_group\": \"1\",\n        \"ike_lifetime\": 172800,\n        \"ipsec_encryption_cipher\": \"NULL\",\n        \"ipsec_auth_cipher\": \"SHA1\",\n        \"ipsec_dh_group\": \"1\",\n        \"ipsec_lifetime\": 172800,\n        \"ipsec_lifebytes\": 2147483647,\n        \"mtu\": 64000,\n        \"credentials\": {\n          \"mode\": \"PSK\",\n          \"psk\": \"string\",\n          \"psk_encoding\": \"none\"\n        },\n        \"responder_id\": \"string\"\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/secure-web-gateways",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"secure-web-gateways"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Secure Web Gateway",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"id\": 1,\n      \"primary_public_ip_address\": \"198.51.100.42\",\n      \"secondary_public_ip_address\": \"198.51.100.42\",\n      \"security\": {\n        \"ike_encryption_cipher\": \"AES128CBC\",\n        \"ike_auth_cipher\": \"SHA1\",\n        \"ike_dh_group\": \"1\",\n        \"ike_lifetime\": 172800,\n        \"ipsec_encryption_cipher\": \"NULL\",\n        \"ipsec_auth_cipher\": \"SHA1\",\n        \"ipsec_dh_group\": \"1\",\n        \"ipsec_lifetime\": 172800,\n        \"ipsec_lifebytes\": 2147483647,\n        \"mtu\": 64000,\n        \"credentials\": {\n          \"mode\": \"PSK\",\n          \"psk\": \"string\",\n          \"psk_encoding\": \"none\"\n        },\n        \"responder_id\": \"string\"\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/secure-web-gateways",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"secure-web-gateways"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Secure Web Gateway",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/secure-web-gateways?ids={{swg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"secure-web-gateways"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{swg_id}}",
									"description": "IDs of Secure Web Gateway to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Secure Web Gateway Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/secure-web-gateways/{{swg_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"secure-web-gateways",
								"{{swg_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all User Sites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/vpn-sites",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"vpn-sites"
							],
							"query": [
								{
									"key": "criteria",
									"value": null,
									"description": "if criteria value 'notAssignedToVpnZone' is provided then already used vpn sites will be filtered out",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Templates",
			"item": [
				{
					"name": "Get Appliance Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/templates",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Appliance Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"lGrt9M`s6/x)*DC#xHQqxPE;zwan/l*[9iWv^9o=9*o=mx]l^#[-Fze-E]lRD^I'\",\n      \"description\": \"string\",\n      \"time_synchronization_server\": \"DISABLED\",\n      \"wan_optimization\": \"DISABLED\",\n      \"lan_to_wan\": \"DISABLED\",\n      \"wan_to_lan\": \"DISABLED\",\n      \"lan1\": \"DISABLED\",\n      \"wan1\": \"DISABLED\",\n      \"wan2\": \"DISABLED\",\n      \"wan3\": \"DISABLED\",\n      \"internet_backhauling\": \"DISABLED\",\n      \"bypass_lan1_wan1\": \"DISABLED\",\n      \"bypass_lan2_wan2\": \"DISABLED\",\n      \"multipath\": \"DISABLED\",\n      \"path_selection\": \"DYNAMIC\",\n      \"role\": \"SPOKE\",\n      \"lan_ids\": [\n        0\n      ],\n      \"wan_ids\": [\n        0\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/templates",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Appliance Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \";L*N8w6=b&ww!KfiZOH>P-,i 3~y5::/ 4~hd,D[0lMeF>yF,^P,~Q< _1GM}oGR\",\n      \"description\": \"string\",\n      \"time_synchronization_server\": \"DISABLED\",\n      \"wan_optimization\": \"DISABLED\",\n      \"lan_to_wan\": \"DISABLED\",\n      \"wan_to_lan\": \"DISABLED\",\n      \"lan1\": \"DISABLED\",\n      \"wan1\": \"DISABLED\",\n      \"wan2\": \"DISABLED\",\n      \"wan3\": \"DISABLED\",\n      \"internet_backhauling\": \"DISABLED\",\n      \"bypass_lan1_wan1\": \"DISABLED\",\n      \"bypass_lan2_wan2\": \"DISABLED\",\n      \"multipath\": \"DISABLED\",\n      \"path_selection\": \"DYNAMIC\",\n      \"role\": \"SPOKE\",\n      \"lan_ids\": [\n        0\n      ],\n      \"wan_ids\": [\n        0\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/templates",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"templates"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Appliance Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/templates?ids={{appliance_template_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{appliance_template_id}}",
									"description": "IDs of policies to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appliance Template by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/templates/{{appliance_template_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"templates",
								"{{appliance_template_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Templates with Associations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/templates/associations",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"templates",
								"associations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all LANs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/lans",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"lans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new LANs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"]o!,]<R|`P4uH9yeL)<-%9zVd(fe-O:xzPt&*g{9KZ9QUfKk4#8.<UWd~oaT|ax+\",\n      \"description\": \"string\",\n      \"position\": 0,\n      \"interface_speed\": \"AUTO\",\n      \"ha\": \"DISABLED\",\n      \"routing_type\": \"NONE\",\n      \"dns_settings\": {\n        \"apply_default_policy\": false,\n        \"auto_via_dhcp\": false,\n        \"dns_servers\": [\n          {\n            \"address\": \"192.168.1.1\"\n          },\n          {\n            \"address\": \"192.168.1.2\"\n          }\n        ]\n      },\n      \"lan_interfaces\": [\n        {\n          \"vlan\": {\n            \"id\": 1\n          },\n          \"dhcp_service\": {\n            \"id\": 1\n          },\n          \"is_main\": false\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/lans",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"lans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update LANs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"#@Mn+}O8\\\\<M0Hcv=qs/yG[{2pEzusUx]brSZ(DM{]=\",\n      \"description\": \"string\",\n      \"position\": 0,\n      \"interface_speed\": \"AUTO\",\n      \"ha\": \"DISABLED\",\n      \"routing_type\": \"NONE\",\n      \"dns_settings\": {\n        \"apply_default_policy\": false,\n        \"auto_via_dhcp\": false,\n        \"dns_servers\": [\n          {\n            \"address\": \"192.168.1.1\"\n          },\n          {\n            \"address\": \"192.168.1.2\"\n          }\n        ]\n      },\n      \"lan_interfaces\": [\n        {\n          \"vlan\": {\n            \"id\": 1\n          },\n          \"dhcp_service\": {\n            \"id\": 1\n          },\n          \"is_main\": false\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/lans",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"lans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete LANs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/lans?ids={{lan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"lans"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{lan_id}}",
									"description": "IDs of policies to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get LAN by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/lans/{{lan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"lans",
								"{{lan_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WAN Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/wans",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"wans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create WAN Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"WAN1\",\n      \"mode\": \"BRIDGE\",\n      \"transport_network\": {\n        \"id\": 1\n      },\n      \"min_bandwidth_up\": 1,\n      \"bandwidth_up\": 1,\n      \"min_bandwidth_down\": 1,\n      \"bandwidth_down\": 1,\n      \"interface_speed\": \"AUTO\",\n      \"dns_settings\": {\n        \"apply_default_policy\": false,\n        \"auto_via_dhcp\": false,\n        \"dns_servers\": [\n          {\n            \"address\": \"192.168.1.1\"\n          },\n          {\n            \"address\": \"192.168.1.2\"\n          }\n        ]\n      }\n    },\n    {\n      \"name\": \"WAN1\",\n      \"mode\": \"BRIDGE\",\n      \"transport_network\": {\n        \"id\": 1\n      },\n      \"min_bandwidth_up\": 1,\n      \"bandwidth_up\": 1,\n      \"min_bandwidth_down\": 1,\n      \"bandwidth_down\": 1,\n      \"interface_speed\": \"AUTO\",\n      \"dns_settings\": {\n        \"apply_default_policy\": false,\n        \"auto_via_dhcp\": false,\n        \"dns_servers\": [\n          {\n            \"address\": \"192.168.1.1\"\n          },\n          {\n            \"address\": \"192.168.1.2\"\n          }\n        ]\n      },\n      \"default_bgp_local_preference\": 100,\n      \"dti\": \"DISABLED\",\n      \"nat\": \"DISABLED\",\n      \"edge_sentry\": \"DISABLED\",\n      \"mtu\": 1500,\n      \"ip_stack_support\": \"IPV4\",\n      \"tunnel_underlay_ip_address_mode\": \"USER\",\n      \"dhcp\": \"DISABLED\",\n      \"ipoe\": \"DISABLED\",\n      \"overlays\": [\n        {\n          \"id\": 1\n        }\n      ],\n      \"secure_web_gateway\": {\n        \"id\": 1\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/wans",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"wans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update WAN Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"WAN1\",\n      \"mode\": \"BRIDGE\",\n      \"transport_network\": {\n        \"id\": 1\n      },\n      \"min_bandwidth_up\": 1,\n      \"bandwidth_up\": 1,\n      \"min_bandwidth_down\": 1,\n      \"bandwidth_down\": 1,\n      \"interface_speed\": \"AUTO\",\n      \"dns_settings\": {\n        \"apply_default_policy\": false,\n        \"auto_via_dhcp\": false,\n        \"dns_servers\": [\n          {\n            \"address\": \"192.168.1.1\"\n          },\n          {\n            \"address\": \"192.168.1.2\"\n          }\n        ]\n      }\n    },\n    {\n      \"id\": 1,\n      \"name\": \"WAN1\",\n      \"mode\": \"BRIDGE\",\n      \"transport_network\": {\n        \"id\": 1\n      },\n      \"min_bandwidth_up\": 1,\n      \"bandwidth_up\": 1,\n      \"min_bandwidth_down\": 1,\n      \"bandwidth_down\": 1,\n      \"interface_speed\": \"AUTO\",\n      \"dns_settings\": {\n        \"apply_default_policy\": false,\n        \"auto_via_dhcp\": false,\n        \"dns_servers\": [\n          {\n            \"address\": \"192.168.1.1\"\n          },\n          {\n            \"address\": \"192.168.1.2\"\n          }\n        ]\n      },\n      \"default_bgp_local_preference\": 100,\n      \"dti\": \"DISABLED\",\n      \"nat\": \"DISABLED\",\n      \"edge_sentry\": \"DISABLED\",\n      \"mtu\": 1500,\n      \"ip_stack_support\": \"IPV4\",\n      \"tunnel_underlay_ip_address_mode\": \"USER\",\n      \"dhcp\": \"DISABLED\",\n      \"ipoe\": \"DISABLED\",\n      \"overlays\": [\n        {\n          \"id\": 1\n        }\n      ],\n      \"secure_web_gateway\": {\n        \"id\": 1\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/wans",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"wans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete WAN Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/wans?ids={{wan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"wans"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{wan_id}}",
									"description": "IDs of policies to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WAN Configuration by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/wans/{{wan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"wans",
								"{{wan_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Overlay Configuration",
			"item": [
				{
					"name": "Get Overlay Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/overlays",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"overlays"
							],
							"query": [
								{
									"key": "sort",
									"value": "name",
									"description": "Sortable properties:\n\nname\ndescription\ntype",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "name=ilike=Azure",
									"description": "Filterable properties:\n\nname\ndescription",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Overlay Configuration Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/overlays?ids={{overlay_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"overlays"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{overlay_id}}",
									"description": "IDs of policies to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Hub and Spoke Overlay Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"security\": {\n        \"ike_encryption_cipher\": \"AES128CBC\",\n        \"ike_auth_cipher\": \"SHA1\",\n        \"ike_dh_group\": \"1\",\n        \"ike_lifetime\": 172800,\n        \"ipsec_encryption_cipher\": \"NULL\",\n        \"ipsec_auth_cipher\": \"SHA1\",\n        \"ipsec_dh_group\": \"1\",\n        \"ipsec_lifetime\": 172800,\n        \"ipsec_lifebytes\": 2147483647,\n        \"mtu\": 64000,\n        \"credentials\": {\n          \"mode\": \"PSK\",\n          \"psk\": \"string\",\n          \"psk_encoding\": \"none\"\n        }\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/overlays/hub-and-spokes",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"overlays",
								"hub-and-spokes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Hub and Spoke Overlay Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"id\": 1,\n      \"security\": {\n        \"ike_encryption_cipher\": \"AES128CBC\",\n        \"ike_auth_cipher\": \"SHA1\",\n        \"ike_dh_group\": \"1\",\n        \"ike_lifetime\": 172800,\n        \"ipsec_encryption_cipher\": \"NULL\",\n        \"ipsec_auth_cipher\": \"SHA1\",\n        \"ipsec_dh_group\": \"1\",\n        \"ipsec_lifetime\": 172800,\n        \"ipsec_lifebytes\": 2147483647,\n        \"mtu\": 64000,\n        \"credentials\": {\n          \"mode\": \"PSK\",\n          \"psk\": \"string\",\n          \"psk_encoding\": \"none\"\n        }\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/overlays/hub-and-spokes",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"overlays",
								"hub-and-spokes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create iPv6 Hub and Spoke Overlay Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"security\": {\n        \"ike_encryption_cipher\": \"AES128CBC\",\n        \"ike_auth_cipher\": \"SHA1\",\n        \"ike_dh_group\": \"1\",\n        \"ike_lifetime\": 172800,\n        \"ipsec_encryption_cipher\": \"NULL\",\n        \"ipsec_auth_cipher\": \"SHA1\",\n        \"ipsec_dh_group\": \"1\",\n        \"ipsec_lifetime\": 172800,\n        \"ipsec_lifebytes\": 2147483647,\n        \"mtu\": 64000,\n        \"credentials\": {\n          \"mode\": \"PSK\",\n          \"psk\": \"string\",\n          \"psk_encoding\": \"none\"\n        }\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/overlays/hub-and-spokes-ipv6",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"overlays",
								"hub-and-spokes-ipv6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update iPv6 Hub and Spoke Overlay Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"id\": 1,\n      \"security\": {\n        \"ike_encryption_cipher\": \"AES128CBC\",\n        \"ike_auth_cipher\": \"SHA1\",\n        \"ike_dh_group\": \"1\",\n        \"ike_lifetime\": 172800,\n        \"ipsec_encryption_cipher\": \"NULL\",\n        \"ipsec_auth_cipher\": \"SHA1\",\n        \"ipsec_dh_group\": \"1\",\n        \"ipsec_lifetime\": 172800,\n        \"ipsec_lifebytes\": 2147483647,\n        \"mtu\": 64000,\n        \"credentials\": {\n          \"mode\": \"PSK\",\n          \"psk\": \"string\",\n          \"psk_encoding\": \"none\"\n        }\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/overlays/hub-and-spokes-ipv6",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"overlays",
								"hub-and-spokes-ipv6"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Third Party Vpn Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"primary_public_ip_address\": \"198.51.100.42\",\n      \"routing\": {},\n      \"security\": {\n        \"ike_encryption_cipher\": \"AES128CBC\",\n        \"ike_auth_cipher\": \"SHA1\",\n        \"ike_dh_group\": \"1\",\n        \"ike_lifetime\": 172800,\n        \"ipsec_encryption_cipher\": \"NULL\",\n        \"ipsec_auth_cipher\": \"SHA1\",\n        \"ipsec_dh_group\": \"1\",\n        \"ipsec_lifetime\": 172800,\n        \"ipsec_lifebytes\": 2147483647,\n        \"mtu\": 64000,\n        \"credentials\": {\n          \"mode\": \"PSK\",\n          \"psk\": \"string\",\n          \"psk_encoding\": \"none\"\n        },\n        \"responder_id\": \"string\"\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/overlays/third-party-vpns",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"overlays",
								"third-party-vpns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Third Party Vpn Configuration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"string\",\n      \"description\": \"string\",\n      \"id\": 1,\n      \"primary_public_ip_address\": \"198.51.100.42\",\n      \"routing\": {},\n      \"security\": {\n        \"ike_encryption_cipher\": \"AES128CBC\",\n        \"ike_auth_cipher\": \"SHA1\",\n        \"ike_dh_group\": \"1\",\n        \"ike_lifetime\": 172800,\n        \"ipsec_encryption_cipher\": \"NULL\",\n        \"ipsec_auth_cipher\": \"SHA1\",\n        \"ipsec_dh_group\": \"1\",\n        \"ipsec_lifetime\": 172800,\n        \"ipsec_lifebytes\": 2147483647,\n        \"mtu\": 64000,\n        \"credentials\": {\n          \"mode\": \"PSK\",\n          \"psk\": \"string\",\n          \"psk_encoding\": \"none\"\n        },\n        \"responder_id\": \"string\"\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/overlays/third-party-vpns",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"overlays",
								"third-party-vpns"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Overlay Configuration by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/overlays/{{overlay_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"overlays",
								"{{overlay_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Overlay with Hub/Spoke/WAN Associations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/overlays/associations",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"overlays",
								"associations"
							],
							"query": [
								{
									"key": "sort",
									"value": "name",
									"description": "Sortable properties:\n\nname\ndescription\ntype",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "name=ilike=Azure",
									"description": "Filterable properties:\n\nname\ndescription",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Application Performance",
			"item": [
				{
					"name": "Get application groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/application-groups",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"application-groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create application groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"<#2t_%tG\",\n      \"description\": \"string\",\n      \"criticality\": \"TOP\",\n      \"compression\": \"disabled\",\n      \"df_override\": \"disabled\",\n      \"dscp\": \"custom\",\n      \"dscp_custom_value\": \"001100\",\n      \"next\": {\n        \"id\": 1\n      },\n      \"qos_profile\": {\n        \"id\": 1\n      },\n      \"applications\": [\n        {\n          \"id\": 1\n        }\n      ],\n      \"saas_applications\": [\n        {\n          \"id\": 1\n        }\n      ],\n      \"dws_policy\": {\n        \"id\": 1\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/application-groups",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"application-groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update application groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": {{application_group_id}},\n      \"name\": \"q4 ^<VC@E$RZ[fJ-e)94:TL>[Hf5 HL*n'C/RL.c@hD#$nS~:MqzwcRFy0y(g  >\",\n      \"description\": \"string\",\n      \"criticality\": \"TOP\",\n      \"compression\": \"disabled\",\n      \"df_override\": \"disabled\",\n      \"dscp\": \"custom\",\n      \"dscp_custom_value\": \"001100\",\n      \"next\": {\n        \"id\": 1\n      },\n      \"qos_profile\": {\n        \"id\": 1\n      },\n      \"applications\": [\n        {\n          \"id\": 1\n        }\n      ],\n      \"saas_applications\": [\n        {\n          \"id\": 1\n        }\n      ],\n      \"dws_policy\": {\n        \"id\": 1\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/application-groups",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"application-groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete application groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/application-groups?ids={{application_group_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"application-groups"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{application_group_id}}",
									"description": "ID of application groups to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an application group",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/application-groups/{{application_group_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"application-groups",
								"{{application_group_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get transport networks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/transport-networks",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"transport-networks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add transport networks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"{KY|TD#=a&C^8'{9_<1i&L@&'X pT)zC2wBk\",\n      \"description\": \"string\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/transport-networks",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"transport-networks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update transport networks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": {{transport_networks_id}},\n      \"name\": \"Za\\\\LyeU$iJ]yfg\\\\LjTiI\",\n      \"description\": \"string\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/transport-networks",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"transport-networks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete transport networks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/transport-networks?ids={{transport_networks_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"transport-networks"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{transport_networks_id}}",
									"description": "ID of transport networks to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a transport network",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/transport-networks/{{transport_networks_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"transport-networks",
								"{{transport_networks_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user subnets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/user-subnets",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"user-subnets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add user subnets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"@.14TaFQ2\\\\<^gud8n`fVeKWt`w=r{v>33m9m7W }oXlNmW.W:]!9CGv.@D_y_5vU\",\n      \"description\": \"string\",\n      \"network_prefix\": \"198.51.100.42\",\n      \"prefix_length\": 24,\n      \"state\": \"DISABLED\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/user-subnets",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"user-subnets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user subnets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": {{user_subnet_id}},\n      \"name\": \"undefined\",\n      \"description\": \"string\",\n      \"network_prefix\": \"198.51.100.42\",\n      \"prefix_length\": 24,\n      \"state\": \"DISABLED\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/user-subnets",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"user-subnets"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user subnets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/user-subnets?ids={{user_subnet_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"user-subnets"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{user_subnet_id}}",
									"description": "ID of user subnets to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an user subnet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/user-subnets/{{user_subnet_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"user-subnets",
								"{{user_subnet_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/applications",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"lI~(eDO F~qyRIN|KO*\\\\0j=a9&\\\\b 1z{i/dZ_N$/QGaQl!_pkr ,-^<TUmEa)&|K\",\n      \"description\": \"string\",\n      \"state\": \"DISABLED\",\n      \"attribute\": \"string\",\n      \"free_subnet\": \"10.0.0.1/32; 10.1.0.1; 10.32.2.2/24\",\n      \"cs_side\": \"SERVER_SIDE\",\n      \"rank\": 0,\n      \"protocol\": {\n        \"id\": 1\n      },\n      \"next\": {\n        \"id\": 1\n      },\n      \"user_subnets\": [\n        {\n          \"id\": 1\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/applications",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": {{application_id}},\n      \"name\": \"8xP;s>&I9F/\\\\@Zkc.115)Ym+A8n19NPqFJ(B_jsNtQs4,E|8*ndmMt27/O`o]:zm\",\n      \"description\": \"string\",\n      \"state\": \"DISABLED\",\n      \"attribute\": \"string\",\n      \"free_subnet\": \"10.0.0.1/32; 10.1.0.1; 10.32.2.2/24\",\n      \"cs_side\": \"SERVER_SIDE\",\n      \"rank\": 0,\n      \"protocol\": {\n        \"id\": 1\n      },\n      \"next\": {\n        \"id\": 1\n      },\n      \"user_subnets\": [\n        {\n          \"id\": 1\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/applications",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/applications?ids={{application_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"applications"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{application_id}}",
									"description": "ID of applications to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/applications/{{application_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"applications",
								"{{application_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get applications inventory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/applications/inventory",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"applications",
								"inventory"
							],
							"query": [
								{
									"key": "groupHeader",
									"value": "protocol.family",
									"description": "Based on this parameter 'application_count' is calculated. Lets say, groupHeader is 'protocol.family' then 'application_count is the number of applications under this protocol family. Value can be any one of protocol.name or protocol.family",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "protocol.name",
									"description": "Applications are filtered based on this parameter. Filter keys can be:\n\nprotocol.name\nprotocol.family\napplication_groups.name",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get SaaS Applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/saas-applications",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"saas-applications"
							],
							"query": [
								{
									"key": "filter",
									"value": "application_sets.name",
									"description": "SaaS applications are filtered based on this parameter. Filter keys can be:\n\napplication_groups.name\napplication_sets.name\nExample:\n\nfilter=application_groups.name==\"Mail Service\"\nfilter=application_sets.name==\"SaaS Application Set\"",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create SaaS Applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"saas_type\": \"CATALOG\",\n      \"state\": \"DISABLED\",\n      \"saas_catalog_application\": {\n        \"id\": 1\n      },\n      \"custom_saas_application\": {\n        \"name\": \",AFqbtJ;Xta{,OH866G+jX`AwXl2!keiBu`0b3FzH}ly*F,+2visL2Ldkw8\\\\s0'[\",\n        \"description\": \"string\",\n        \"fqdns_subnets\": \"string\"\n      },\n      \"client_subnets\": \"string\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/saas-applications",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"saas-applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update SaaS applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": {{saas_applications_id}},\n      \"saas_type\": \"CATALOG\",\n      \"state\": \"DISABLED\",\n      \"saas_catalog_application\": {\n        \"id\": 1\n      },\n      \"custom_saas_application\": {\n        \"id\": 1,\n        \"name\": \"|)(R5f<qf'~~I=kE*3,_)e3o}npll{ui~#y6Fjt/}s-66P-P(n6GSY6t! m\\\\,6,p\",\n        \"description\": \"string\",\n        \"fqdns_subnets\": \"string\"\n      },\n      \"client_subnets\": \"string\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/saas-applications",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"saas-applications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete SaaS applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/saas-applications?ids={{saas_applications_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"saas-applications"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{saas_applications_id}}",
									"description": "ID of applications to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a SaaS Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/saas-applications/{{saas_applications_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"saas-applications",
								"{{saas_applications_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get QoS profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/qos-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"qos-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add QoS profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"u;PcgzhO=7UH#h@yV9XyBGYCYzpG+^oC*II$*r=-|w4F}k{wvm;u*\\\\)uN$s/iF <\",\n      \"description\": \"string\",\n      \"type\": \"BACKGROUND\",\n      \"session_bw_obj\": 999999,\n      \"session_bw_max\": 999999,\n      \"delay\": \"DISABLED\",\n      \"delay_obj\": 999999,\n      \"delay_max\": 999999,\n      \"jitter\": \"DISABLED\",\n      \"jitter_obj\": 999999,\n      \"jitter_max\": 999999,\n      \"packet_loss\": \"DISABLED\",\n      \"packet_loss_obj\": 100,\n      \"packet_loss_max\": 100,\n      \"srt\": \"DISABLED\",\n      \"srt_obj\": 999999,\n      \"srt_max\": 999999,\n      \"rtt\": \"DISABLED\",\n      \"rtt_obj\": 999999,\n      \"rtt_max\": 999999,\n      \"tcp_retrans\": \"DISABLED\",\n      \"tcp_retrans_obj\": 100,\n      \"tcp_retrans_max\": 100\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/qos-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"qos-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update QoS profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": {{qos_profiles_id}},\n      \"name\": \"=HQqtdk+j*l`< 8>{`:3clWMbv2s4UXV71LDk0)5zxzB%J'&M6014^x@9mwvaSy_\",\n      \"description\": \"string\",\n      \"type\": \"BACKGROUND\",\n      \"session_bw_obj\": 999999,\n      \"session_bw_max\": 999999,\n      \"delay\": \"DISABLED\",\n      \"delay_obj\": 999999,\n      \"delay_max\": 999999,\n      \"jitter\": \"DISABLED\",\n      \"jitter_obj\": 999999,\n      \"jitter_max\": 999999,\n      \"packet_loss\": \"DISABLED\",\n      \"packet_loss_obj\": 100,\n      \"packet_loss_max\": 100,\n      \"srt\": \"DISABLED\",\n      \"srt_obj\": 999999,\n      \"srt_max\": 999999,\n      \"rtt\": \"DISABLED\",\n      \"rtt_obj\": 999999,\n      \"rtt_max\": 999999,\n      \"tcp_retrans\": \"DISABLED\",\n      \"tcp_retrans_obj\": 100,\n      \"tcp_retrans_max\": 100\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/qos-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"qos-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete QoS profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/qos-profiles?ids={{qos_profiles_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"qos-profiles"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{qos_profiles_id}}",
									"description": "ID of QoS profiles to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a QoS profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/qos-profiles/{{qos_profiles_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"qos-profiles",
								"{{qos_profiles_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DWS policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/dws-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"dws-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add DWS policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"M2@0On8RFT75$/&-qM>VwfxJA,_%C:_04Ei|68eCT]\\\\]m}Ck9s:asiL7];/P5-`*\",\n      \"description\": \"string\",\n      \"return_path\": \"DEFAULT\",\n      \"decision_level\": \"DEFAULT\",\n      \"last_resort\": \"FORWARD\",\n      \"primary_to_secondary\": \"QUALITY_BASED\",\n      \"secondary_to_tertiary\": \"BACKUP\",\n      \"primary_transport_networks\": [\n        {\n          \"id\": 1\n        }\n      ],\n      \"secondary_transport_networks\": [\n        {\n          \"id\": 1\n        }\n      ],\n      \"tertiary_transport_networks\": [\n        {\n          \"id\": 1\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/dws-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"dws-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update DWS policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": {{dws_policies_id}},\n      \"name\": \"z%d:.{RLg2kM-)'cTcf=6#9T^J%<}y}PWzcO+qRwa,hdy[;|4wEiQU7u1z\",\n      \"description\": \"string\",\n      \"return_path\": \"DEFAULT\",\n      \"decision_level\": \"DEFAULT\",\n      \"last_resort\": \"FORWARD\",\n      \"primary_to_secondary\": \"QUALITY_BASED\",\n      \"secondary_to_tertiary\": \"BACKUP\",\n      \"primary_transport_networks\": [\n        {\n          \"id\": 1\n        }\n      ],\n      \"secondary_transport_networks\": [\n        {\n          \"id\": 1\n        }\n      ],\n      \"tertiary_transport_networks\": [\n        {\n          \"id\": 1\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/dws-policies",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"dws-policies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete DWS policies",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/dws-policies?ids={{dws_policies_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"dws-policies"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{dws_policies_id}}",
									"description": "ID of DWS policies to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a DWS policy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/dws-policies/{{dws_policies_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"dws-policies",
								"{{dws_policies_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all IHAP Profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/ihap-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"ihap-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add IHAP Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"1Bv=b5gKNd2JOSA(Y`e}<W!;BT%7);lfM}hXD|hh{(Q5gS7li5qaF%{LpyMj{*o}\",\n      \"description\": \"string\",\n      \"keep_alive\": 0,\n      \"peer_dead_factor\": 0,\n      \"tunnel_persistence\": false,\n      \"preemption\": true,\n      \"bad_health_criteria\": \"OR\",\n      \"monitored_interfaces\": \"string\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/ihap-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"ihap-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update IHAP Profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": {{ihap_profiles_id}},\n      \"name\": \"~d:H2Up1!\",\n      \"description\": \"string\",\n      \"keep_alive\": 0,\n      \"peer_dead_factor\": 0,\n      \"tunnel_persistence\": false,\n      \"preemption\": true,\n      \"bad_health_criteria\": \"OR\",\n      \"monitored_interfaces\": \"string\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/ihap-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"ihap-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete IHAP Profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/ihap-profiles?ids={{ihap_profiles_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"ihap-profiles"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{ihap_profiles_id}}",
									"description": "IDs of IHAP Profile to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get IHAP Profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/ihap-profiles/{{ihap_profiles_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"ihap-profiles",
								"{{ihap_profiles_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all VRRP Profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/vrrp-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"vrrp-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add VRRP Profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"t=qL*ta7cC<6r`-M>8Ulj3jhrWSf5X,nl*;Q|T0Cnypf`U[|_\\\\F\\\\4sN</vLY>r\",\n      \"description\": \"string\",\n      \"protocol_version\": 2,\n      \"multicast_peering_ip\": \"224.0.0.18\",\n      \"preempt\": true,\n      \"preempt_delay\": 1,\n      \"master_priority\": 200,\n      \"backup_priority\": 190,\n      \"weight\": -20,\n      \"check_interval_msec\": 1000,\n      \"fall\": 1,\n      \"rise\": 3,\n      \"advert_interval_msec\": 1000,\n      \"strict\": false,\n      \"garp_master_delay\": 5,\n      \"garp_master_repeat\": 5,\n      \"garp_master_refresh\": 0,\n      \"garp_master_refresh_repeat\": 5,\n      \"garp_lower_prio_delay\": 5,\n      \"garp_lower_prio_repeat\": 5,\n      \"garp_interval_usec\": 0,\n      \"gna_interval_usec\": 0,\n      \"lower_prio_no_advert\": false,\n      \"higher_prio_send_advert\": false,\n      \"min_garp\": false,\n      \"instance_identifier\": 50,\n      \"tracking_interfaces\": \"string\",\n      \"logic_tracking_interfaces\": \"AND\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/vrrp-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"vrrp-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update VRRP Profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": {{vrrp_profiles_id}},\n      \"name\": \"U[FNVo#bc^'8;c)Eff Br[Y>jJ]G1:`+Z}6(flR;{i\\\\IK9 Pn|l5K\",\n      \"description\": \"string\",\n      \"protocol_version\": 2,\n      \"multicast_peering_ip\": \"224.0.0.18\",\n      \"preempt\": true,\n      \"preempt_delay\": 1,\n      \"master_priority\": 200,\n      \"backup_priority\": 190,\n      \"weight\": -20,\n      \"check_interval_msec\": 1000,\n      \"fall\": 1,\n      \"rise\": 3,\n      \"advert_interval_msec\": 1000,\n      \"strict\": false,\n      \"garp_master_delay\": 5,\n      \"garp_master_repeat\": 5,\n      \"garp_master_refresh\": 0,\n      \"garp_master_refresh_repeat\": 5,\n      \"garp_lower_prio_delay\": 5,\n      \"garp_lower_prio_repeat\": 5,\n      \"garp_interval_usec\": 0,\n      \"gna_interval_usec\": 0,\n      \"lower_prio_no_advert\": false,\n      \"higher_prio_send_advert\": false,\n      \"min_garp\": false,\n      \"instance_identifier\": 50,\n      \"tracking_interfaces\": \"string\",\n      \"logic_tracking_interfaces\": \"AND\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/vrrp-profiles",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"vrrp-profiles"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete VRRP Profiles",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/vrrp-profiles?ids={{vrrp_profiles_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"vrrp-profiles"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{vrrp_profiles_id}}",
									"description": "IDs of VRRP Profile to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get VRRP Profile by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/network-policies/{{network_policy_id}}/application-performance/vrrp-profiles/{{vrrp_profiles_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"network-policies",
								"{{network_policy_id}}",
								"application-performance",
								"vrrp-profiles",
								"{{vrrp_profiles_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Onboarding",
			"item": [
				{
					"name": "Get Appliances",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances"
							]
						}
					},
					"response": []
				},
				{
					"name": "Onboard Appliances",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"}~ ]]]]]]]]]]]]]]]]]]]]]\",\n      \"serial_number\": \"20K62208I-D0002\",\n      \"mac_address\": \"C2CC57D0F70B\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances"
							]
						}
					},
					"response": []
				},
				{
					"name": "Trigger deletion of appliances",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances?ids={{appliance_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{appliance_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appliance by Appliance id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Patch an appliance's name and serial number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PATCH request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"e`{\",\n      \"serial_number\": \"20K62208I-D0002\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Onboard Appliances by uploading CSV",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": \"name,serial_number,mac_address\\nmassy 1,20K62208I-D0002,C2CC57D0F70B\\nHome ATOM 1,A0518W0007A0,BCF31071AD41\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances-csv",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances-csv"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appliance by Serial Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/serial-number/{{serialNumber}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"serial-number",
								"{{serialNumber}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Sites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"D:4L$Pq8VVHj{3%q`X]C8Sq]a.I`PQ*+yzNr}sR2>}JpUF%OPb~7I-3t_x$@Fu-r\",\n      \"description\": \"string\",\n      \"city\": \"Neuilly-sur-Seine\",\n      \"country\": \"France\",\n      \"latitude\": \"48.88298529999999\",\n      \"longitude\": \"2.2674134\",\n      \"state\": \"France\",\n      \"street\": \"120 Avenue Charles de Gaulle\",\n      \"zip_code\": 92200,\n      \"country_code\": {\n        \"iso_code\": 250\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/sites",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Sites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \")<>=Q[7n[*N(dn$=SU3jBd]:YxS9#8#! %|q(JD@.kcC4atPx*c+PM.fo,r6DvJ}\",\n      \"description\": \"string\",\n      \"city\": \"Neuilly-sur-Seine\",\n      \"country\": \"France\",\n      \"latitude\": \"48.88298529999999\",\n      \"longitude\": \"2.2674134\",\n      \"state\": \"France\",\n      \"street\": \"120 Avenue Charles de Gaulle\",\n      \"zip_code\": 92200,\n      \"country_code\": {\n        \"iso_code\": 250\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/sites",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all sites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/sites",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"sites"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign Appliances to Sites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"site_id\": 0,\n      \"site_location\": {\n        \"id\": 0,\n        \"name\": \"string\",\n        \"country_code\": 0,\n        \"address\": {\n          \"address\": \"string\",\n          \"address2\": \"string\",\n          \"city\": \"string\",\n          \"postal_code\": \"string\",\n          \"state\": \"string\"\n        },\n        \"latitude\": 0,\n        \"longitude\": 0\n      },\n      \"appliance_id\": {{appliance_id}},\n      \"template_id\": 0\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/sites/assign-applicances",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"sites",
								"assign-applicances"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Sites with statistics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/sites/associations",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"sites",
								"associations"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request current configuration validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/manage/configuration/validate?async=NO",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"manage",
								"configuration",
								"validate"
							],
							"query": [
								{
									"key": "async",
									"value": "NO",
									"description": "Mode of validation\n\nAvailable values : NO, ALWAYS, AUTO\n\nDefault value : NO"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deploy pre-validated Configuration by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/manage/configuration/deploy/{{deployment_snapshot_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"manage",
								"configuration",
								"deploy",
								"{{deployment_snapshot_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Firmware catalog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/tools/v1/update/catalog",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"update",
								"catalog"
							]
						}
					},
					"response": []
				},
				{
					"name": "Activate upgrade",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"serial_numbers\": [\n        \"AB1234CDEF12, XY1234CDEF34\"\n      ],\n      \"version\": \"v22.q3.1.6\",\n      \"activation_time\": \"2022-09-14T10:46:27+00:00\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/tools/v1/update/activate",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"update",
								"activate"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upgrade Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/tools/v1/update/status?page=0&size=20",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"update",
								"status"
							],
							"query": [
								{
									"key": "request_id",
									"value": "ffa463ca-0722-4ec0-957b-d7ff47f95ed5,de04eacf-1131-4583-9d0e-89177bd8ee29",
									"description": "List of request id(s)",
									"disabled": true
								},
								{
									"key": "serial_number",
									"value": "ABCD1234EF,ABCD5678GH,ABCD9000IJ",
									"description": "List of serial number(s)",
									"disabled": true
								},
								{
									"key": "page",
									"value": "0",
									"description": "Page number (default 0)"
								},
								{
									"key": "size",
									"value": "20",
									"description": "Page size (default 20)"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Appliance Configuration",
			"item": [
				{
					"name": "Get devices with their configuration status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/manage/devices",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"manage",
								"devices"
							],
							"query": [
								{
									"key": "sort",
									"value": null,
									"description": "orted properties (same as filterable properties)",
									"disabled": true
								},
								{
									"key": "filter",
									"value": null,
									"description": "Filterable properties:\n\nname\nmanaged\ndescription\nmac_address\nmodel\nserial_number\nfirmware_version\nsite.name\ndevice_template.name\nconnectivity.connected\nconfiguration.in_sync\nconfiguration.last_deployed_at\nlast_updated_at\nlldp_state_active\nExample:\n\n?filter=name==\"My Appliance\"",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Devices by Appliance Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/manage/devices/{{appliance_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"manage",
								"devices",
								"{{appliance_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get general settings of an appliance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/general-settings",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"general-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update general settings of an appliance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"wan_optimization\": \"DISABLED\",\n      \"lan_to_wan\": \"DISABLED\",\n      \"wan_to_lan\": \"DISABLED\",\n      \"lan1\": \"DISABLED\",\n      \"wan1\": \"DISABLED\",\n      \"wan2\": \"DISABLED\",\n      \"wan3\": \"DISABLED\",\n      \"time_synchronization_server\": \"DISABLED\",\n      \"role\": \"SPOKE\",\n      \"internet_backhauling\": \"DISABLED\",\n      \"bypass_lan1_wan1\": \"DISABLED\",\n      \"bypass_lan2_wan2\": \"DISABLED\",\n      \"multipath\": \"DISABLED\",\n      \"local_parameters\": {\n        \"appliance_name\": \"string\",\n        \"lan_gateway_ip_address\": \"string\",\n        \"local_as_auto\": \"DISABLED\",\n        \"local_as_number\": 1,\n        \"managed\": \"DISABLED\"\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/general-settings",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"general-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset General settings to template default",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/applicances/{{appliance_id}}/general-settings/reset-to-template",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"applicances",
								"{{appliance_id}}",
								"general-settings",
								"reset-to-template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get LAN settings of an appliance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/lan-settings",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"lan-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update LAN settings for an appliance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"interface_speed\": \"AUTO\",\n      \"ha\": \"DISABLED\",\n      \"routing_type\": \"NONE\",\n      \"lan_interfaces\": [\n        {\n          \"vlan\": {\n            \"id\": 1\n          },\n          \"dhcp_service\": {\n            \"id\": 1\n          },\n          \"is_main\": false,\n          \"local_parameters\": {\n            \"management_ip_address\": \"198.51.100.42\",\n            \"prefix_length\": 30,\n            \"router1_lan_ip_address\": \"192.168.0.2\",\n            \"router2_lan_ip_address\": \"192.168.0.3\",\n            \"router3_lan_ip_address\": \"192.168.0.4\",\n            \"vrrp_virtual_ip_address\": \"192.168.0.5\",\n            \"fabric_switch_ip_address\": \"192.168.0.6\",\n            \"fabric_switch_asn\": 4200063543,\n            \"dhcp\": {\n              \"dynamic_addresses\": [\n                {\n                  \"first_address\": \"10.10.10.2\",\n                  \"last_address\": \"10.10.10.239\"\n                }\n              ],\n              \"excluded_addresses\": [\n                {\n                  \"first_address\": \"10.10.10.2\",\n                  \"last_address\": \"10.10.10.239\"\n                }\n              ],\n              \"static_addresses\": [\n                {\n                  \"ip_address\": \"10.10.10.2\",\n                  \"mac_address\": \"C8:05:4D:DD:6C:25\"\n                }\n              ]\n            }\n          }\n        }\n      ],\n      \"ihap_enabled\": false,\n      \"vrrp_enabled\": false,\n      \"dns_settings\": {\n        \"apply_default_policy\": false,\n        \"auto_via_dhcp\": false,\n        \"dns_servers\": [\n          {\n            \"address\": \"192.168.1.1\"\n          },\n          {\n            \"address\": \"192.168.1.2\"\n          }\n        ]\n      },\n      \"local_parameters\": {\n        \"bgp\": {\n          \"peer_ip_addresses\": [\n            \"198.51.100.42\"\n          ],\n          \"as_path_prepend\": \"DISABLED\",\n          \"as_path_prepend_number\": 1,\n          \"peer_appliances\": [\n            {\n              \"id\": 1\n            }\n          ]\n        },\n        \"fabric_settings\": {\n          \"local_breakout_role\": \"PRIMARY\",\n          \"is_default_lbo_settings\": true,\n          \"local_breakout_enabled\": false\n        },\n        \"ospf\": {\n          \"vrouters\": [\n            {\n              \"vlan\": {\n                \"id\": 1\n              },\n              \"vrouter_id\": \"WAN1\",\n              \"area_id\": 4294967295,\n              \"cost\": 10,\n              \"authentication_method\": \"NONE\",\n              \"key\": \"string\",\n              \"key_id\": 255\n            }\n          ],\n          \"hello_timer\": 10,\n          \"dead_timer\": 40,\n          \"priority\": 0,\n          \"instance_id\": 0,\n          \"metric_type\": \"TYPE1\",\n          \"route_cost\": 10000,\n          \"default_originate\": false\n        },\n        \"subnets\": [\n          {\n            \"network\": \"10.2.1.0\",\n            \"prefix_length\": 28\n          }\n        ],\n        \"static_routes\": [\n          {\n            \"network\": \"10.2.1.0\",\n            \"prefix_length\": 28,\n            \"next_hop\": \"198.51.100.42\"\n          }\n        ],\n        \"default_is_is_metric\": 20000,\n        \"fabric_tunnels\": [\n          {\n            \"appliance\": {\n              \"id\": 0\n            },\n            \"is_is_metric\": 65535\n          }\n        ]\n      },\n      \"ihap\": {\n        \"role\": \"NOMINAL\",\n        \"peer_appliance\": {\n          \"id\": 1\n        },\n        \"profile\": {\n          \"id\": 1\n        }\n      },\n      \"vrrp\": {\n        \"role\": \"MASTER\",\n        \"profile\": {\n          \"id\": 1\n        }\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/lan-settings",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"lan-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset LAN settings to template default",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/lan-settings/reset-to-template",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"lan-settings",
								"reset-to-template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WAN settings of an appliance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/wan-settings",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"wan-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset WAN settings to template default",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/wan-settings/reset-to-template",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"wan-settings",
								"reset-to-template"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update WAN settings of an appliance WAN settings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"description\": \"string\",\n      \"mode\": \"BRIDGE\",\n      \"min_bandwidth_up\": 1,\n      \"bandwidth_up\": 1,\n      \"min_bandwidth_down\": 1,\n      \"bandwidth_down\": 1,\n      \"transport_network\": {\n        \"id\": 1\n      },\n      \"interface_speed\": \"AUTO\",\n      \"default_bgp_local_preference\": 100,\n      \"dti\": \"DISABLED\",\n      \"nat\": \"DISABLED\",\n      \"edge_sentry\": \"DISABLED\",\n      \"mtu\": 1500,\n      \"ipoe\": \"DISABLED\",\n      \"dhcp\": \"DISABLED\",\n      \"ip_stack_support\": \"IPV4\",\n      \"local_parameters\": {\n        \"access_router_ip_address\": \"198.51.100.42\",\n        \"site_to_site_connections\": [\n          {\n            \"remote\": {\n              \"id\": 1,\n              \"wan_name\": \"WAN1\"\n            }\n          }\n        ]\n      }\n    },\n    {\n      \"description\": \"string\",\n      \"mode\": \"BRIDGE\",\n      \"min_bandwidth_up\": 1,\n      \"bandwidth_up\": 1,\n      \"min_bandwidth_down\": 1,\n      \"bandwidth_down\": 1,\n      \"transport_network\": {\n        \"id\": 1\n      },\n      \"interface_speed\": \"AUTO\",\n      \"default_bgp_local_preference\": 100,\n      \"dti\": \"DISABLED\",\n      \"nat\": \"DISABLED\",\n      \"edge_sentry\": \"DISABLED\",\n      \"mtu\": 1500,\n      \"ipoe\": \"DISABLED\",\n      \"dhcp\": \"DISABLED\",\n      \"ip_stack_support\": \"IPV4\",\n      \"local_parameters\": {\n        \"public_ip_address\": \"198.51.100.42\",\n        \"site_to_site_connections\": [\n          {\n            \"remote\": {\n              \"id\": 1,\n              \"wan_name\": \"WAN1\"\n            },\n            \"overlay\": {\n              \"id\": 1\n            },\n            \"network_pref\": 100\n          }\n        ]\n      },\n      \"dns_settings\": {\n        \"apply_default_policy\": false,\n        \"auto_via_dhcp\": false,\n        \"dns_servers\": [\n          {\n            \"address\": \"192.168.1.1\"\n          },\n          {\n            \"address\": \"192.168.1.2\"\n          }\n        ]\n      },\n      \"tunnel_underlay_ip_address_mode\": \"USER\",\n      \"overlays\": [\n        {\n          \"id\": 1,\n          \"type\": \"string\",\n          \"connections\": [\n            {\n              \"remote\": {\n                \"id\": 1,\n                \"name\": \"string\",\n                \"site_id\": 1,\n                \"site_name\": \"string\",\n                \"appliance_name\": \"string\",\n                \"wan_name\": \"WAN1\"\n              },\n              \"network_pref\": 100\n            }\n          ]\n        },\n        {\n          \"id\": 1,\n          \"type\": \"string\",\n          \"connection\": {\n            \"initiator_id\": \"string\",\n            \"local_ip_address\": \"string\",\n            \"remote_ip_address\": \"string\",\n            \"network_pref\": 4294967295,\n            \"credentials\": {\n              \"mode\": \"PSK\",\n              \"psk\": \"string\",\n              \"psk_encoding\": \"none\"\n            }\n          }\n        },\n        {\n          \"id\": 1,\n          \"type\": \"string\",\n          \"apps_anywhere_connection\": {\n            \"bgp_local_preference\": 100,\n            \"association_route_table\": {\n              \"id\": \"string\"\n            },\n            \"propagation_route_tables\": [\n              {\n                \"id\": \"string\"\n              }\n            ],\n            \"vpn_acceleration\": false,\n            \"propagation_labels\": [\n              \"string\"\n            ]\n          }\n        }\n      ],\n      \"secure_web_gateway\": {\n        \"id\": 1,\n        \"connections\": [\n          {\n            \"destination\": \"PRIMARY\",\n            \"initiator_id\": \"string\",\n            \"local_ip_address\": \"string\",\n            \"remote_ip_address\": \"string\",\n            \"network_pref\": 4294967295,\n            \"credentials\": {\n              \"mode\": \"PSK\",\n              \"psk\": \"string\",\n              \"psk_encoding\": \"none\"\n            }\n          }\n        ]\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/wan-settings/{{wan_interface}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"wan-settings",
								"{{wan_interface}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WAN settings of appliance by interface's name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/wan-settings/{{wan_interface}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"wan-settings",
								"{{wan_interface}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all VLAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/common-objects/vlans",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"common-objects",
								"vlans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add new VLANs",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"m8f#nJl(#so6[r<L|U&.rP_o5753Yvt)`(o!y^Zt&Ed~>BEbA'$DmT\",\n      \"description\": \"string\",\n      \"number\": 1\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/common-objects/vlans",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"common-objects",
								"vlans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update VLAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": {{vlan_id}},\n      \"name\": \"=Pzyiz]3ezT5wRc]E**4 ,@N&+3&]WcuA4RXE[:y'V1^-n~gyerDJ)LvR0%r@q`5\",\n      \"description\": \"string\",\n      \"number\": 1\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/common-objects/vlans",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"common-objects",
								"vlans"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete VLAN",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/common-objects/vlans?ids={{vlan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"common-objects",
								"vlans"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{vlan_id}}",
									"description": "IDs of VLAN to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get VLAN by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/common-objects/vlans/{{vlan_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"common-objects",
								"vlans",
								"{{vlan_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET all configured fabric appliances",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/fabric-settings",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"fabric-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Configured fabric appliances",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"appliance\": {\n        \"id\": {{appliance_id}}\n      },\n      \"management_ip_address\": \"198.51.100.42\",\n      \"prefix_length\": 30,\n      \"fabric_switch_ip_address\": \"192.168.0.6\",\n      \"fabric_switch_asn\": 4200063543,\n      \"default_is_is_metric\": 20000,\n      \"wans\": [\n        {\n          \"ip_address\": \"192.168.0.4\",\n          \"identifier\": \"WAN1\"\n        }\n      ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/fabric-settings",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"fabric-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all DHCP Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/common-objects/dhcp-services",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"common-objects",
								"dhcp-services"
							],
							"query": [
								{
									"key": "sort",
									"value": null,
									"description": "Sorted properties (same as filterable properties)",
									"disabled": true
								},
								{
									"key": "filter",
									"value": "role=ilike=SERVER",
									"description": "Filterable properties:\n\nname\ndescription\nrole\nprimary_server\nsecondary_server\ndns_servers\ndns_domain_name\nlease_time\nExample:\n\n?filter=role=ilike=SERVER",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add DHCP Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"4IQ@OjmW:,6PtV,ZXeG(1W+cq#g^=YMp`DvJHGt$X+t.X!6czot\",\n      \"description\": \"string\",\n      \"role\": \"SERVER\",\n      \"dns_servers\": \"208.67.222.222, 208.67.220.220\",\n      \"dns_domain_name\": \"extremenetworks.com\",\n      \"lease_time\": 3600,\n      \"custom_options\": [\n        {\n          \"code\": 42,\n          \"type\": \"IPV4-ADDRESS\",\n          \"value\": \"129.6.15.29\"\n        }\n      ]\n    },\n    {\n      \"name\": \"nclP&rheC6MGgM9Kq\",\n      \"description\": \"string\",\n      \"role\": \"RELAY_AGENT\",\n      \"primary_server\": \"198.51.100.42\",\n      \"secondary_server\": \"198.51.100.42\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/common-objects/dhcp-services",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"common-objects",
								"dhcp-services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update DHCP Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"id\": {{dhcp_service_id}},\n      \"name\": \"J_kNg_U{&s8CbSoT<'7\",\n      \"description\": \"string\",\n      \"role\": \"SERVER\",\n      \"dns_servers\": \"208.67.222.222, 208.67.220.220\",\n      \"dns_domain_name\": \"extremenetworks.com\",\n      \"lease_time\": 3600,\n      \"custom_options\": [\n        {\n          \"code\": 42,\n          \"type\": \"IPV4-ADDRESS\",\n          \"value\": \"129.6.15.29\"\n        }\n      ]\n    },\n    {\n      \"id\": 1,\n      \"name\": \"[6fJjh&'M(Qld-N1tB\",\n      \"description\": \"string\",\n      \"role\": \"RELAY_AGENT\",\n      \"primary_server\": \"198.51.100.42\",\n      \"secondary_server\": \"198.51.100.42\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/common-objects/dhcp-services",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"common-objects",
								"dhcp-services"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete DHCP Services",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/common-objects/dhcp-services?ids={{dhcp_service_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"common-objects",
								"dhcp-services"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{dhcp_service_id}}",
									"description": "IDs of DHCP Service to delete"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DHCP Service by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/common-objects/dhcp-services/{{dhcp_service_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"common-objects",
								"dhcp-services",
								"{{dhcp_service_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all BGP peer appliances",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/available-bgp-peer-appliances",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"available-bgp-peer-appliances"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WAN External Connections",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/wan-settings/connections",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"wan-settings",
								"connections"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WAN External Connections By WAN Name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/wan-settings/{{wan_interface}}connections",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"wan-settings",
								"{{wan_interface}}connections"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WAN Hub and Spoke Connections Synthesis",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/wan-settings/{{wan_interface}}connections/hub-and-spoke-synthesis",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"wan-settings",
								"{{wan_interface}}connections",
								"hub-and-spoke-synthesis"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WAN External Connections By Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/appliances/{{appliance_id}}/wan-settings/{{wan_interface}}connections/{{connection_type}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"wan-settings",
								"{{wan_interface}}connections",
								"{{connection_type}}"
							],
							"query": [
								{
									"key": "overlayId",
									"value": null,
									"description": "Based on this parameter, connections will be filtered by the given overlay",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get appliances by Site ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/sites/{{site_id}}/appliances",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"sites",
								"{{site_id}}",
								"appliances"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Details for edge-sentry",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/edge-sentry/details",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"edge-sentry",
								"details"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get protocols",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/common-objects/protocols",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"common-objects",
								"protocols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get protocols by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/configuration/v1/common-objects/protocols/{{protocol_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"configuration",
								"v1",
								"common-objects",
								"protocols",
								"{{protocol_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Appliance 360",
			"item": [
				{
					"name": "Get Monitoring metrics Evolution API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/metrics/timeseries?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"metrics",
								"timeseries"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}"
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}"
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the throughput will be calculated for lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan. If no value is provided the default value will be lan_to_wan.\n\nAvailable values : lan_to_wan, wan_to_lan\n\nDefault value : lan_to_wan",
									"disabled": true
								},
								{
									"key": "src_site_id",
									"value": "0",
									"description": "The site_src_id to filter the data by source site.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "0",
									"description": "The site_dst_id to filter the data by remote site",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "0",
									"description": "The network_src_id to filter data by source network.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "0",
									"description": "The network_dst_id to filter data by destination network.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appliance Status List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/appliances/status?id={{appliance_id}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"appliances",
								"status"
							],
							"query": [
								{
									"key": "id",
									"value": "{{appliance_id}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appliance Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/appliances/{{appliance_id}}/status",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appliance CPU Usage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/appliances/{{appliance_id}}/cpu-usage",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"cpu-usage"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Appliance Fabric Peer Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/appliances/{{appliance_id}}/fabric-peers",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"appliances",
								"{{appliance_id}}",
								"fabric-peers"
							],
							"query": [
								{
									"key": "remote_applianc.id",
									"value": "0",
									"description": "Filter the data by remote Fabric peer identifier. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance.name",
									"value": "string",
									"description": "Filter the data by remote Fabric peer name. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "tunnel_status",
									"value": "Up",
									"description": "Filter the data by tunnel status. Multiples values are allowed with comma (,) separation.\n\nAvailable values : Up, Down",
									"disabled": true
								},
								{
									"key": "remote_fabric_switch.ip_address",
									"value": "string($ipv4)",
									"description": "Filter the data by remote switch ip address. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_fabric_switch.name",
									"value": "string",
									"description": "Filter the data by remote switch name. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "is_is_status",
									"value": "Up",
									"description": "Filter the data by IS-IS status. Multiples values are allowed with comma (,) separation.\n\nAvailable values : Up, Down",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "string",
									"description": "The keyword search uses case-insensitive search across fields having string values.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "remote_appliance.id",
									"description": "Available values : remote_appliance.id,asc, remote_appliance.id,desc, remote_appliance.name,asc, remote_appliance.name,desc, tunnel_status,asc, tunnel_status,desc, remote_fabric_switch.ip_address,asc, remote_fabric_switch.ip_address,desc, remote_fabric_switch.name,asc, remote_fabric_switch.name,desc, is_is_status,asc, is_is_status,desc",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Site 360",
			"item": [
				{
					"name": "Get Sites Overview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/sites/overview?start_time={{myStartTime}}&end_time={{myEndTime}}&flow_direction=lan_to_wan&page=1&size=20",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"overview"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan. If no value is provided or an invalid value is provided then error message will be thrown.\n\nAvailable values : lan_to_wan, wan_to_lan\n\nDefault value : lan_to_wan"
								},
								{
									"key": "page",
									"value": "1",
									"description": "next page number for navigation for Sites Overview UI page used for pagination.\nDefault value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "current page size for Sites Overview UI page used for pagination.\nDefault value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "site,asc",
									"description": "The sort field. Sorting can applied on specified column. Sorting can be applied only on one column at a time. Specified column followed by the sorting direction (ie asc or desc) with the comma separation. Allowed columns are site, utillization, capacity, throughput, eqs, application_group_eqs. For site, utillization, capacity, throughput, eqs we need to specify sorting parameters like column_name,direction, for example site,asc. For sorting on application group eqs it has to be application_group_{id},asc.",
									"disabled": true
								},
								{
									"key": "eqs_gt",
									"value": "7.8",
									"description": "Filter for EQS greater than the specified value.",
									"disabled": true
								},
								{
									"key": "eqs_lt",
									"value": "8.7",
									"description": "Filter for EQS less than the specified value.",
									"disabled": true
								},
								{
									"key": "eqs_eq",
									"value": "7.5",
									"description": "Filter for EQS equals the specified value.",
									"disabled": true
								},
								{
									"key": "eqs_gteq",
									"value": "7.23",
									"description": "Filter for EQS greater than or equal to the specified value.",
									"disabled": true
								},
								{
									"key": "eqs_lteq",
									"value": "8.5",
									"description": "Filter for EQS less than or equal to the specified value.",
									"disabled": true
								},
								{
									"key": "throughput_gt",
									"value": "100",
									"description": "Filter for Throughput greater than the specified value.",
									"disabled": true
								},
								{
									"key": "thoughput_lt",
									"value": "120",
									"description": "Filter for Throughput less than the specified value.",
									"disabled": true
								},
								{
									"key": "throughput_eq",
									"value": "110",
									"description": "Filter for Throughput equals the specified value.",
									"disabled": true
								},
								{
									"key": "throughput_gteq",
									"value": "100",
									"description": "Filter for Throughput greater than or equal to the specified value.",
									"disabled": true
								},
								{
									"key": "throughput_lteq",
									"value": "120",
									"description": "Filter for Throughput less than or equal to the specified value.",
									"disabled": true
								},
								{
									"key": "utilization_gt",
									"value": "50",
									"description": "Filter for Utilization greater than the specified value.",
									"disabled": true
								},
								{
									"key": "utilization_lt",
									"value": "60",
									"description": "Filter for Utilization less than the specified value.",
									"disabled": true
								},
								{
									"key": "utilization_eq",
									"value": "55",
									"description": "Filter for Utilization equals the specified value.",
									"disabled": true
								},
								{
									"key": "utilization_gteq",
									"value": "50",
									"description": "Filter for Utilization greater than or equal to the specified value.",
									"disabled": true
								},
								{
									"key": "utilization_lteq",
									"value": "60",
									"description": "Filter for Utilization less than or equal to the specified value.",
									"disabled": true
								},
								{
									"key": "capacity_gt",
									"value": "200",
									"description": "Filter for Capacity greater than the specified value.",
									"disabled": true
								},
								{
									"key": "capacity_lt",
									"value": "250",
									"description": "Filter for Capacity less than the specified value.",
									"disabled": true
								},
								{
									"key": "capacity_eq",
									"value": "225",
									"description": "Filter for Capacity equals the specified value.",
									"disabled": true
								},
								{
									"key": "capacity_gteq",
									"value": "200",
									"description": "Filter for Capacity greater than or equal to the specified value.",
									"disabled": true
								},
								{
									"key": "capacity_lteq",
									"value": "250",
									"description": "Filter for Capacity less than or equal to the specified value.",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "string",
									"description": "keyword for case-insensitive search across columns having string values. Applicable on columns - application, application group, site and appliance.",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Wan Services Informations API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/metrics/wans?start_time={{myStartTime}}&end_time={{myEndTime}}&page=1&size=20",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"metrics",
								"wans"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "page",
									"value": "1",
									"description": "next page number for navigation for Sites Overview UI page used for pagination.\nDefault value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "current page size for Sites Overview UI page used for pagination.\nDefault value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "site,asc",
									"description": "The sort field. Sorting can applied on specified column. Sorting can be applied only on one column at a time. Specified column followed by the sorting direction (ie asc or desc) with the comma separation. Allowed columns are site, utillization, capacity, throughput, eqs, application_group_eqs. For site, utillization, capacity, throughput, eqs we need to specify sorting parameters like column_name,direction, for example site,asc. For sorting on application group eqs it has to be application_group_{id},asc.",
									"disabled": true
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id.Multiples values are allowed with comma (,) separation.\n\n",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.\n\nAvailable values : lan_to_wan, wan_to_lan\n\nDefault value : lan_to_wan",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get worst 10 Eqs API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/eqs/worst?start_time={{myStartTime}}&end_time={{myEndTime}}&group_by=application",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"eqs",
								"worst"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "group_by",
									"value": "application",
									"description": "(required) Filter the result of Eqs group by applicationGroup or application.\n\nAvailable values : application, application_group"
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id.Multiples values are allowed with comma (,) separation.\n\n",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.\n\nAvailable values : lan_to_wan, wan_to_lan\n\nDefault value : lan_to_wan",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Eqs Evolution by worst 10 application API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/eqs/worst/timeseries?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"eqs",
								"worst",
								"timeseries"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id.Multiples values are allowed with comma (,) separation.\n\n",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.\n\nAvailable values : lan_to_wan, wan_to_lan\n\nDefault value : lan_to_wan",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Top 10 Volume API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/volume/top?start_time={{myStartTime}}&end_time={{myEndTime}}&group_by=application",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"volume",
								"top"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "group_by",
									"value": "application",
									"description": "(required) Filter the result of Eqs group by applicationGroup or application.\n\nAvailable values : application, application_group"
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id.Multiples values are allowed with comma (,) separation.\n\n",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.\n\nAvailable values : lan_to_wan, wan_to_lan\n\nDefault value : lan_to_wan",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WAN throughput evolution API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/metrics/wans/throughput?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"metrics",
								"wans",
								"throughput"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id.Multiples values are allowed with comma (,) separation.\n\n",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.\n\nAvailable values : lan_to_wan, wan_to_lan\n\nDefault value : lan_to_wan",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get WAN EQS evolution API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/metrics/wans/eqs?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"metrics",
								"wans",
								"eqs"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id.Multiples values are allowed with comma (,) separation.\n\n",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.\n\nAvailable values : lan_to_wan, wan_to_lan\n\nDefault value : lan_to_wan",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Throughput Evolution API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/throughput/timeseries?start_time={{myStartTime}}&end_time={{myEndTime}}&group_by=application",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"throughput",
								"timeseries"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "group_by",
									"value": "application",
									"description": "(required) Filter the result of Eqs group by applicationGroup or application.\n\nAvailable values : application, application_group"
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id.Multiples values are allowed with comma (,) separation.\n\n",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.\n\nAvailable values : lan_to_wan, wan_to_lan\n\nDefault value : lan_to_wan",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Eqs Evolution API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/eqs/timeseries?start_time={{myStartTime}}&end_time={{myEndTime}}&group_by=application",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"eqs",
								"timeseries"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "group_by",
									"value": "application",
									"description": "(required) Filter the result of Eqs group by applicationGroup or application.\n\nAvailable values : application, application_group"
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id.Multiples values are allowed with comma (,) separation.\n\n",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.\n\nAvailable values : lan_to_wan, wan_to_lan\n\nDefault value : lan_to_wan",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Throughput Evolution by Top 10 application API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/throughput/top/timeseries?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"throughput",
								"top",
								"timeseries"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples vales are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id.Multiples values are allowed with comma (,) separation.\n\n",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.\n\nAvailable values : lan_to_wan, wan_to_lan\n\nDefault value : lan_to_wan",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Application Groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{jwttoken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "https://api.extremecloudiq.com/monitoring/v1/sites/application-groups",
							"protocol": "https",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"application-groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Site 360 application overview Summary API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/metrics/summary?start_time={{myStartTime}}&end_time={{myEndTime}}&group_by=application&page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"metrics",
								"summary"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required) Start time is epoch time in seconds. It represents the start of the time range (start - end) from which the aplication summary will be fetched."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required) End time is epoch time in seconds. It represents the end of the time range (start - end) upto which the flow data for application summary will be fetched."
								},
								{
									"key": "group_by",
									"value": "application",
									"description": "(Required) (required) Filter the result of Eqs group by applicationGroup, application  or criticality ."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "next page number for navigation for Application Overview summary UI page used for pagination.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "current page size for Application Overview summary UI page used for pagination.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "throughput,asc",
									"description": "The sort field. Sorting can applied on specified column. Sorting can be applied only on one column at a time. Specified column followed by the sorting direction (ie asc or desc)  with the comma separation. Allowed columns are application, application_group, criticality, throughput, eqs, volume.for example eqs,asc.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.",
									"disabled": true
								}
							]
						},
						"description": "Get Application overview Summary will return Application overview summary data group by application, application group or criticality."
					},
					"response": []
				},
				{
					"name": "Get jitter evolution for a site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/jitter?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"jitter"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.",
									"disabled": true
								}
							]
						},
						"description": "Get jitter evolution for a site."
					},
					"response": []
				},
				{
					"name": "Get TCP delay and jitter evolution for a site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/delay-jitter?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"delay-jitter"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.",
									"disabled": true
								}
							]
						},
						"description": "Get TCP delay and jitter evolution for a site."
					},
					"response": []
				},
				{
					"name": "Get TCP session evolution for a site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/average-sessions?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"average-sessions"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.",
									"disabled": true
								}
							]
						},
						"description": "Get average number of TCP session evolution for a site."
					},
					"response": []
				},
				{
					"name": "Get TCP RTT and SRT evolution for a site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/rtt-srt?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"rtt-srt"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter data with Remote Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.",
									"disabled": true
								}
							]
						},
						"description": "Get TCP RTT and SRT evolution for a site."
					},
					"response": []
				},
				{
					"name": "Get the throughput evolution for a site",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/throughput?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"throughput"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.",
									"disabled": true
								}
							]
						},
						"description": "Get the throughput evolution for a site."
					},
					"response": []
				},
				{
					"name": "Get TCP packets retransmission",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/packet-retransmission?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"packet-retransmission"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.",
									"disabled": true
								}
							]
						},
						"description": "Get TCP packets retransmission evolution for a site."
					},
					"response": []
				},
				{
					"name": "Get TCP packets loss evolution for a site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/packet-loss?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"packet-loss"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.",
									"disabled": true
								}
							]
						},
						"description": "Get TCP packets loss evolution for a site."
					},
					"response": []
				},
				{
					"name": "Get the EQS evolution for a site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/eqs?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"eqs"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with Local Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with Remote Appliance Id. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "12234",
									"description": "Filter the data with Local Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "12234",
									"description": "Filter the data with Remote Wan Interface. Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan and also both as combine as lan_to_wan,wan_to_lan. If no value is provided it is both direction. If an invalid value is provided then error message will be thrown.",
									"disabled": true
								}
							]
						},
						"description": "Get the EQS evolution for a site."
					},
					"response": []
				},
				{
					"name": "Get appliances-wans for a site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/sites/{{site_id}}/appliances-wans?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"sites",
								"{{site_id}}",
								"appliances-wans"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) Start time is epoch time in seconds. It represents the start of the time range (start - end) from which the appliances-wans will be fetched."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) End time is epoch time in seconds. It represents the end of the time range (start - end) upto from which the appliances-wans will be fetched."
								}
							]
						},
						"description": "Get appliances-wans for a site."
					},
					"response": []
				}
			]
		},
		{
			"name": "Application 360",
			"item": [
				{
					"name": "Get application overview Summary API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/applications/metrics/summary?start_time={{myStartTime}}&end_time={{myEndTime}}&group_by=application&page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"applications",
								"metrics",
								"summary"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required)start time is epoch time in seconds. It represents the start of the time range (start - end) from which the application summary will be fetched."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required)end time is epoch time in seconds. It represents the end of the time range (start - end) upto which the flow data for application summary will be fetched."
								},
								{
									"key": "group_by",
									"value": "application",
									"description": "(Required) (required) Filter the result of Eqs group by applicationGroup, application or criticality."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_site_id",
									"value": "12234",
									"description": "Filter the application overview summary by source site Id. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the application overview summary by destination site Id. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the application overview summary by source network Id. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the application overview summary by destination network Id. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "eqs_gt",
									"value": "7.8",
									"description": "Filter for EQS greater than the specified value.",
									"disabled": true
								},
								{
									"key": "eqs_lt",
									"value": "8.7",
									"description": "Filter for EQS less than the specified value.",
									"disabled": true
								},
								{
									"key": "eqs_eq",
									"value": "7.5",
									"description": "Filter for EQS equals the specified value.",
									"disabled": true
								},
								{
									"key": "eqs_gteq",
									"value": "7.23",
									"description": "Filter for EQS greater than or equal to the specified value.",
									"disabled": true
								},
								{
									"key": "eqs_lteq",
									"value": "8.5",
									"description": "Filter for EQS less than or equal to the specified value.",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "string",
									"description": "keyword for case-insensitive search across columns having string values. Applicable on columns - application and application group.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "Next page number for navigation for Application Overview summary UI page used for pagination.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "Current page size for Application Overview summary UI page used for pagination.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "throughput,asc",
									"description": "The sort field. Sorting can applied on specified column. Sorting can be applied only on one column at a time. Specified column followed by the sorting direction (ie asc or desc)  with the comma separation. Allowed columns are application, application_group, criticality, throughput, eqs, volume.for example eqs,asc.",
									"disabled": true
								}
							]
						},
						"description": "Get Application overview Summary will return Application overview summary data group by application, application group or criticality."
					},
					"response": []
				},
				{
					"name": "Get Eqs Evolution API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/applications/eqs/timeseries?start_time={{myStartTime}}&end_time={{myEndTime}}&group_by=criticality",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"applications",
								"eqs",
								"timeseries"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required)start time is epoch time in seconds. It represents the start of the time range (start - end) from which the flow data for Eqs will be fetched."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required)end time is epoch time in seconds. It represents the end of the time range (start - end) upto which the flow data for Eqs will be fetched."
								},
								{
									"key": "group_by",
									"value": "criticality",
									"description": "(Required) (required) Filter the result of Eqs group by applicationGroup or criticality."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_site_id",
									"value": "12234",
									"description": "Filter data with Local Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id..Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								}
							]
						},
						"description": "Get Eqs Evolution API will returns Eqs evolution data grouped by Criticality or Application Group ."
					},
					"response": []
				},
				{
					"name": "Get Top 10 Volume API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/applications/volume/top?start_time={{myStartTime}}&end_time={{myEndTime}}&group_by=application_group",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"applications",
								"volume",
								"top"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required)start time is epoch time in seconds. It represents the start of the time range (start - end) from which the flow data for Volume will be fetched."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required)end time is epoch time in seconds. It represents the end of the time range (start - end) upto which the flow data for Volume will be fetched."
								},
								{
									"key": "group_by",
									"value": "application_group",
									"description": "(Required) (required) Filter the result of Volume group by applicationGroup or application ."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_site_id",
									"value": "12234",
									"description": "Filter the data with Local Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the data with Remoe Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								}
							]
						},
						"description": "Get Top 10 Volume api will return Volume data for top 10 Volume group by application or application group."
					},
					"response": []
				},
				{
					"name": "Get worst 10 Eqs API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/applications/eqs/worst?start_time={{myStartTime}}&end_time={{myEndTime}}&group_by=application_group",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"applications",
								"eqs",
								"worst"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required)start time is epoch time in seconds. It represents the start of the time range (start - end) from which the flow data for Eqs will be fetched."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required)end time is epoch time in seconds. It represents the end of the time range (start - end) upto which the flow data for Eqs will be fetched."
								},
								{
									"key": "group_by",
									"value": "application_group",
									"description": "(Required) (required) Filter the result of Eqs group by applicationGroup or application ."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_site_id",
									"value": "12234",
									"description": "Filter the data with Local Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								}
							]
						},
						"description": "Get worst 10 Eqs api will return Eqs data for worst 10 Eqs group by application or application group."
					},
					"response": []
				},
				{
					"name": "Get Throughput Evolution API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/applications/throughput/timeseries?start_time={{myStartTime}}&end_time={{myEndTime}}&group_by=criticality",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"applications",
								"throughput",
								"timeseries"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required)start time is epoch time in seconds. It represents the start of the time range (start - end) from which the flow data for throughput will be fetched."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required)end time is epoch time in seconds. It represents the end of the time range (start - end) upto which the flow data for throughput will be fetched."
								},
								{
									"key": "group_by",
									"value": "criticality",
									"description": "(Required) (required) Filter the result of throughput group by applicationGroup or criticality."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_site_id",
									"value": "12234",
									"description": "Filter the data with Local Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								}
							]
						},
						"description": "Get Throughput Evolution API will returns throughput evolution data grouped by Application Group or Criticality."
					},
					"response": []
				},
				{
					"name": "Get Active SaaS Applications API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"var myTimestamp = new Date(\"April 19, 2025 04:00:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEpochTime\", myTimestamp.getTime()); // myEpochTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/saasapplications?start_time={{myStartTime}}&end_time={{myEndTime}}&is_paginated=true&page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"saasapplications"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required) start is epoch time in seconds. It represents the start of the selected time range (start - end)."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required) end is epoch time in seconds. It represents the end of the selected time range (start - end)."
								},
								{
									"key": "at",
									"value": "{{myEpochTime}}",
									"description": "epoch time in seconds. It represents the actual timestamp for which we want the values (in the time range start to end).",
									"disabled": true
								},
								{
									"key": "site_id",
									"value": "{{site_id}}",
									"description": "Site ID.",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "string",
									"description": "keyword for case-insensitive search across columns having string values. Applicable on columns - application and category.",
									"disabled": true
								},
								{
									"key": "is_paginated",
									"value": "true",
									"description": "This indicates whether paginated response is required or not. The default value is true. When it is set to false then, the page and size parameter is ignored."
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page field for the pagination.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "The size field for the pagination.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "volume,asc",
									"description": "Sorting can applied on specified column, followed by the sorting direction (ie asc or desc) with the comma separation.",
									"disabled": true
								}
							]
						},
						"description": "Get Saas Applications seen on a customer network in a given time range."
					},
					"response": []
				},
				{
					"name": "Get Active SaaS Applications API filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/saasapplications/filters",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"saasapplications",
								"filters"
							]
						},
						"description": "Get Active SaaS Applications API filters."
					},
					"response": []
				},
				{
					"name": "Get Discovered DPI Applications API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"var myTimestamp = new Date(\"April 19, 2025 04:00:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEpochTime\", myTimestamp.getTime()); // myEpochTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/dpiapplications?start_time={{myStartTime}}&end_time={{myEndTime}}&is_paginated=true&page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"dpiapplications"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) It is epoch time in seconds. It represents the start of the selected time range."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) It is epoch time in seconds. It represents the end of the selected time range."
								},
								{
									"key": "at",
									"value": "{{myEpochTime}}",
									"description": "It is epoch time in seconds. It represents the exact timestamp.",
									"disabled": true
								},
								{
									"key": "site_id",
									"value": "{{site_id}}",
									"description": "Site ID.",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "string",
									"description": "keyword for case-insensitive search across columns having string values. Applicable on columns - application, category and protocol.",
									"disabled": true
								},
								{
									"key": "is_paginated",
									"value": "true",
									"description": "This indicates whether paginated response is required. Default value is true. When it is set to false then, the page and size parameter is ignored."
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page field for the pagination.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "The size field for the pagination.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "volume,asc",
									"description": "Sorting is allowed on a specific column only. Sorting order can be given column name followed by the direction (e.g. asc or desc) with a comma separator. Supported columns are id, name, description, protocol_id, protocol_name, protocol_family, is_provisioned, number_of_sessions, volume and number_of_sites.",
									"disabled": true
								}
							]
						},
						"description": "Get both configured and discovered DPI Applications seen on a customer network for a given time range."
					},
					"response": []
				},
				{
					"name": "Get DPI Applications filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/dpiapplications/filters",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"dpiapplications",
								"filters"
							]
						},
						"description": "Get filter list for DPI application API."
					},
					"response": []
				},
				{
					"name": "Get Compression Metrics Per Application",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/compression-metrics/stats/applications?start_time={{myStartTime}}&end_time={{myEndTime}}&is_paginated=true&page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"compression-metrics",
								"stats",
								"applications"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with application. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_site_id",
									"value": "12234",
									"description": "Filter the data with source site. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with destination site. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_wan_service_id",
									"value": "234",
									"description": "Filter the data with source WAN service. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_wan_service_id",
									"value": "234",
									"description": "Filter the data with destination WAN service. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "string",
									"description": "The string value of keyword is used to case-insensitive search on application_name field.",
									"disabled": true
								},
								{
									"key": "is_paginated",
									"value": "true",
									"description": "This indicates whether paginated response is required. Default value is true. When it is set to false then, the page and size parameter is ignored."
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page field for next page number to fetch data.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "The number of items in each page.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "application_name,asc",
									"description": "Sorting is allowed on a specific column only. Sorting order can be given column name followed by the direction (e.g. asc or desc) with a comma separator. Supported columns are application_id, application_name, compressible, compressed, and percentage.",
									"disabled": true
								}
							]
						},
						"description": "Get Compression Metrics Per Application."
					},
					"response": []
				},
				{
					"name": "Get Compression Metrics Per Site",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/compression-metrics/stats/sites?start_time={{myStartTime}}&end_time={{myEndTime}}&is_paginated=true&page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"compression-metrics",
								"stats",
								"sites"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with application. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_site_id",
									"value": "12234",
									"description": "Filter the data with source site. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with destination site. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_wan_service_id",
									"value": "234",
									"description": "Filter the data with source WAN service. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_wan_service_id",
									"value": "234",
									"description": "Filter the data with destination WAN service. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "string",
									"description": "The string value of keyword is used to case-insensitive search on site_name field.",
									"disabled": true
								},
								{
									"key": "is_paginated",
									"value": "true",
									"description": "This indicates whether paginated response is required. Default value is true. When it is set to false then, the page and size parameter is ignored."
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page field for next page number to fetch data.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "The number of items in each page.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "site_name,asc",
									"description": "Sorting is allowed on a specific column only. Sorting order can be given column name followed by the direction (e.g. asc or desc) with a comma separator. Supported columns are site_id, site_name, direction, compressible, compressed, and percentage.",
									"disabled": true
								}
							]
						},
						"description": "Get Compression Metrics Per Site."
					},
					"response": []
				},
				{
					"name": "Get Compression Metrics Time Charts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/compression-metrics/time-charts?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"compression-metrics",
								"time-charts"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with application. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_site_id",
									"value": "12234",
									"description": "Filter the data with source site. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with destination site. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_wan_service_id",
									"value": "234",
									"description": "Filter the data with source WAN service. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_wan_service_id",
									"value": "234",
									"description": "Filter the data with destination WAN service. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								}
							]
						},
						"description": "Get Compression Metrics Time Charts."
					},
					"response": []
				},
				{
					"name": "Get Compression Metrics Stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/compression-metrics/stats?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"compression-metrics",
								"stats"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with application. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_site_id",
									"value": "12234",
									"description": "Filter the data with source site. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with destination site. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_wan_service_id",
									"value": "234",
									"description": "Filter the data with source WAN service. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_wan_service_id",
									"value": "234",
									"description": "Filter the data with destination WAN service. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								}
							]
						},
						"description": "Returns compressible, compressed, incompressible bytes for given time range. These data helps to find compression ratio and compressibility. The formula for compression ratio and compressibility is '((compressible - compressed) / compressible) * 100' and '(compressible / (compressible + incompressible)) * 100' respectively."
					},
					"response": []
				},
				{
					"name": "Get Compression Metrics filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/compression-metrics/filters",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"compression-metrics",
								"filters"
							]
						},
						"description": "Get filter list for compression metrics APIs."
					},
					"response": []
				},
				{
					"name": "Get Application Performance filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/applications/performance/filters",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"applications",
								"performance",
								"filters"
							]
						},
						"description": "Get filter list for applications performance APIs."
					},
					"response": []
				},
				{
					"name": "Get Eqs Evolution by worst 10 application API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/applications/eqs/worst/timeseries?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"applications",
								"eqs",
								"worst",
								"timeseries"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required)start time is epoch time in seconds. It represents the start of the time range (start - end) from which the flow data for Eqs will be fetched."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required)end time is epoch time in seconds. It represents the end of the time range (start - end) upto which the flow data for Eqs will be fetched."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_site_id",
									"value": "12234",
									"description": "Filter the data with Local Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter the data with Remote Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								}
							]
						},
						"description": "Get Eqs Worst 10 Application Time series API will return Eqs evolution data grouped by Worst Application."
					},
					"response": []
				},
				{
					"name": "Get Flows View",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/flows?start_time={{myStartTime}}&end_time={{myEndTime}}&is_paginated=true&page=1&size=20&sort=local_site_id,asc%26sort=local_appliance_id,asc%26sort=local_nap_index,asc",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"flows"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) Start timestamp of the time range in epoch. Unit is seconds. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) End timestamp of the time range in epoch. Unit is seconds. Only a single value is allowed."
								},
								{
									"key": "local_site_id",
									"value": "20223",
									"description": "Filter data using local site. Multiples values are allowed with comma (,) separation. For 'all' use 0. Default value is 0 (all).",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "40223",
									"description": "Filter data using remote site. Multiples values are allowed with comma (,) separation. For 'all' use 0. Default value is 0 (all).",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter data using application group. Multiples values are allowed with comma (,) separation. For 'all' use 0. Default value is 0 (all).",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter data using application. Multiples values are allowed with comma (,) separation. For 'all' use 0. Default value is 0 (all).",
									"disabled": true
								},
								{
									"key": "eqs_gt",
									"value": "7.8",
									"description": "Filter for EQS greater than the specified value.",
									"disabled": true
								},
								{
									"key": "eqs_lt",
									"value": "8.7",
									"description": "Filter for EQS less than the specified value.",
									"disabled": true
								},
								{
									"key": "eqs_eq",
									"value": "7.5",
									"description": "Filter for EQS equals the specified value.",
									"disabled": true
								},
								{
									"key": "eqs_gteq",
									"value": "7.23",
									"description": "Filter for EQS greater than or equal to the specified value.",
									"disabled": true
								},
								{
									"key": "eqs_lteq",
									"value": "8.5",
									"description": "Filter for EQS less than or equal to the specified value.",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "string",
									"description": "keyword for case-insensitive search across columns having string values. Applicable on columns - application, application group and site.",
									"disabled": true
								},
								{
									"key": "is_paginated",
									"value": "true",
									"description": "The boolean flag for pagination. The default value will be false, which means no pagination"
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page field for the pagination.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "The number of items in each page.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "local_site_id,asc&sort=local_appliance_id,asc&sort=local_nap_index,asc",
									"description": "Above example is sorting on Local Site in asc order. Sorting can applied on specified column. Specified column can be local_site_id, local_appliance_id, local_nap_index, remote_site_id, remote_appliance_id, remote_nap_index, application_group_id, application_id, criticality, eqs, lan_throughput, lan_goodput, sessions, lan_packet_loss_percentage, lan_min_delay, lan_avg_delay, lan_max_delay, lan_jitter, wan_throughput, wan_packet_loss_percentage, wan_min_delay, wan_avg_delay, wan_max_delay, wan_jitter, compression_percentage, srt_min, srt_avg, srt_max, rtt_min, rtt_avg, rtt_max, retransmit_percentage, compression_flag, accuracy, alarm. Specified column followed by the sorting direction (ie asc or desc) with the comma separation."
								}
							]
						},
						"description": "Get Flows view api will returns data related to flows used for flows grid view."
					},
					"response": []
				},
				{
					"name": "Get Flows Filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/flows/filters?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"flows",
								"filters"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) Start timestamp of the time range in epoch. Unit is seconds. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) End timestamp of the time range in epoch. Unit is seconds. Only a single value is allowed."
								},
								{
									"key": "local_site_id",
									"value": "20223",
									"description": "Filter data using local site. Multiples vales are allowed with comma (,) separation. For 'all' use 0. Default value is 0 (all).",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "40223",
									"description": "Filter data using remote site. Multiples vales are allowed with comma (,) separation. For 'all' use 0. Default value is 0 (all).",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter data using application group. Multiples vales are allowed with comma (,) separation. For 'all' use 0. Default value is 0 (all).",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter data using application. Multiples vales are allowed with comma (,) separation. For 'all' use 0. Default value is 0 (all).",
									"disabled": true
								}
							]
						},
						"description": "Get flows-filter api will returns the list of all local and remote sites, application groups and applications. (This api is being used by GUI for filtering)."
					},
					"response": []
				}
			]
		},
		{
			"name": "WAN 360",
			"item": [
				{
					"name": "Get throughput evolution API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/metrics/wans/throughput?start_time={{myStartTime}}&end_time={{myEndTime}}&flow_direction=lan_to_wan",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"metrics",
								"wans",
								"throughput"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required)start is epoch time in seconds. It represents the start of the time range (start - end) from which the throughput data will be fetched."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required)end is epoch time in seconds. It represents the end of the time range (start - end) upto which the throughput data will be fetched."
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "(Required) The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan. If no value is provided or an invalid value is provided then error message will be thrown."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "src_site_id",
									"value": "12234",
									"description": "Filter data with Local Site Id. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_site_id",
									"value": "12234",
									"description": "Filter data with local site id. Multiple values are allowed with comma (,) separation.\n",
									"disabled": true
								},
								{
									"key": "dst_site_id",
									"value": "12234",
									"description": "Filter data with Remote Site Id. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter data with remote site id. Multiple values are allowed with comma (,) separation.\n",
									"disabled": true
								},
								{
									"key": "src_appliance_id",
									"value": "12234",
									"description": "Filter the data with local appliance Id. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with local appliance id. Multiple values are allowed with comma (,) separation.\n",
									"disabled": true
								},
								{
									"key": "dst_appliance_id",
									"value": "12234",
									"description": "Filter the data with remote appliance Id. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with remote appliance id. Multiple values are allowed with comma (,) separation.\n",
									"disabled": true
								},
								{
									"key": "src_network_interface",
									"value": "2",
									"description": "Filter the data with source wan interface. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "2",
									"description": "Filter the data with local wan interface. Multiple values are allowed with comma (,) separation.\n",
									"disabled": true
								},
								{
									"key": "dst_network_interface",
									"value": "3",
									"description": "Filter the data with destination wan interface. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "3",
									"description": "Filter the data with remote wan interface. Multiple values are allowed with comma (,) separation.\n",
									"disabled": true
								},
								{
									"key": "src_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter data with local network id. Multiple values are allowed with comma (,) separation.\n",
									"disabled": true
								},
								{
									"key": "dst_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id. Multiple values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter data with remote network id. Multiple values are allowed with comma (,) separation.\n",
									"disabled": true
								}
							]
						},
						"description": "Get throughput evolution API will returns throughput evolution data for each existing Wan Service."
					},
					"response": []
				},
				{
					"name": "Get Wan Services Informations API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/metrics/wans?start_time={{myStartTime}}&end_time={{myEndTime}}&page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"metrics",
								"wans"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required)start is epoch time in seconds. It represents the start of the selected time range (start - end)."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required)end is epoch time in seconds. It represents the end of the selected time range (start - end)."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_site_id",
									"value": "12234",
									"description": "Filter the data with local site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with remote Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with local appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with remote appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "2",
									"description": "Filter the data with source wan interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "3",
									"description": "Filter the data with destination wan interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id..Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "next page number used for pagination.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "current page size used for pagination.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "volume,asc",
									"description": "Sorting column used for column sorting, specified column followed by the sorting direction (ie asc or desc) with the comma separation. Allowed columns are network_name,throughput, eqs, volume,delay,srt,rtt,packet_loss,jitter,retransmission,local_availability,end_to_end_availability.for example eqs,asc.",
									"disabled": true
								}
							]
						},
						"description": "Get wan services state for a customer in a given timerange representing both the LAN to WAN and WAN to LAN direction with weighted average."
					},
					"response": []
				},
				{
					"name": "Get local availability and EQS API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/metrics/wans/local/availability?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"metrics",
								"wans",
								"local",
								"availability"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required)start time is epoch time in seconds. It represents the start of the time range (start - end) from which the flow data for Eqs will be fetched."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required)end time is epoch time in seconds. It represents the end of the time range (start - end) upto which the flow data for Eqs will be fetched."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_site_id",
									"value": "12234",
									"description": "Filter the data with local site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with remote Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with local appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with remote appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "2",
									"description": "Filter the data with source wan interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "3",
									"description": "Filter the data with destination wan interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								}
							]
						},
						"description": "Get local availability and EQS API will return local availability and EQS data grouped by date time and networks."
					},
					"response": []
				},
				{
					"name": "Get end to end availabilty and EQS API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/metrics/wans/end-end/availability?start_time={{myStartTime}}&end_time={{myEndTime}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"metrics",
								"wans",
								"end-end",
								"availability"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required)start time is epoch time in seconds. It represents the start of the time range (start - end) from which the flow data for Eqs will be fetched."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required)end time is epoch time in seconds. It represents the end of the time range (start - end) upto which the flow data for Eqs will be fetched."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_site_id",
									"value": "12234",
									"description": "Filter the data with local site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with remote Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with local appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with remote appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "2",
									"description": "Filter the data with source wan interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "3",
									"description": "Filter the data with destination wan interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter the data with Local Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter the data with Remote Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								}
							]
						},
						"description": "Get end to end availabilty and EQS API will return end to end availability and EQS data grouped by date time and networks."
					},
					"response": []
				},
				{
					"name": "Get EQS evolution API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/metrics/wans/eqs?start_time={{myStartTime}}&end_time={{myEndTime}}&flow_direction=lan_to_wan",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"metrics",
								"wans",
								"eqs"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) (required)start is epoch time in seconds. It represents the start of the time range (start - end) from which the EQS data will be fetched."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) (required)end is epoch time in seconds. It represents the end of the time range (start - end) upto which the EQS data will be fetched."
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "(Required) The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan. If no value is provided or an invalid value is provided then error message will be thrown."
								},
								{
									"key": "criticality_id",
									"value": "1",
									"description": "Filter the data with criticality.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_id",
									"value": "{{application_id}}",
									"description": "Filter the data with Application.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "application_group_id",
									"value": "{{application_group_id}}",
									"description": "Filter the data with application group.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_site_id",
									"value": "12234",
									"description": "Filter the data with local site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_site_id",
									"value": "12234",
									"description": "Filter the data with remote Site Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_appliance_id",
									"value": "12234",
									"description": "Filter the data with local appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_appliance_id",
									"value": "12234",
									"description": "Filter the data with remote appliance Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_interface",
									"value": "2",
									"description": "Filter the data with source wan interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_interface",
									"value": "3",
									"description": "Filter the data with destination wan interface.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "local_network_id",
									"value": "12234",
									"description": "Filter data with Local Network Id..Multiples values are allowed with comma (,) separation.",
									"disabled": true
								},
								{
									"key": "remote_network_id",
									"value": "12234",
									"description": "Filter data with Remote Network Id.Multiples values are allowed with comma (,) separation.",
									"disabled": true
								}
							]
						},
						"description": "Get EQS evolution API will returns EQS evolution data for each existing Wan Service."
					},
					"response": []
				},
				{
					"name": "Get Wan Overview Filters API",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/wans/filters",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"wans",
								"filters"
							]
						},
						"description": "Get Application overview filters API will returns filters available for the Wan overview ."
					},
					"response": []
				}
			]
		},
		{
			"name": "Topology",
			"item": [
				{
					"name": "Get Sites Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/dashboard/sites-summary",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"dashboard",
								"sites-summary"
							]
						},
						"description": "Get sites summary returns summarised data of all sites."
					},
					"response": []
				},
				{
					"name": "Get Appliance Summary Information",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/dashboard/appliances-summary",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"dashboard",
								"appliances-summary"
							]
						},
						"description": "Get appliances summary returns summarised data of all the appliances of dashboard."
					},
					"response": []
				},
				{
					"name": "Get WANs Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/dashboard/wans-summary",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"dashboard",
								"wans-summary"
							]
						},
						"description": "Get wans summary returns summarised data of all the wan services."
					},
					"response": []
				},
				{
					"name": "Get Applications Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/dashboard/applications-summary",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"dashboard",
								"applications-summary"
							]
						},
						"description": "Get applications summary returns summarised data of all the applications."
					},
					"response": []
				},
				{
					"name": "Get Site Alarms and Appliances status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/dashboard/site/status?site_id={{site_id}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"dashboard",
								"site",
								"status"
							],
							"query": [
								{
									"key": "site_id",
									"value": "{{site_id}}",
									"description": "(Required) Site Id of the site for which the details will be fetched. Only a single value is allowed."
								}
							]
						},
						"description": "Get site alarms and Appliances status returns alarms count grouped by severity and appliance status."
					},
					"response": []
				},
				{
					"name": "Get Site Eqs and Throughput",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/dashboard/site/metrics?site_id={{site_id}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"dashboard",
								"site",
								"metrics"
							],
							"query": [
								{
									"key": "site_id",
									"value": "{{site_id}}",
									"description": "(Required) Site Id of the site for which the details will be fetched. Only a single value is allowed."
								}
							]
						},
						"description": "Get Site Eqs and Throughput API returns eqs grouped by criticality and throughput."
					},
					"response": []
				},
				{
					"name": "Get Connections Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/connections?is_paginated=false",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"connections"
							],
							"query": [
								{
									"key": "is_paginated",
									"value": "false",
									"description": "The boolean flag for pagination. Default value will be false, which means no pagination."
								}
							]
						},
						"description": "Returns SD-WAN connections-summary data."
					},
					"response": []
				},
				{
					"name": "Get Connection Sites",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/connections/sites",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"connections",
								"sites"
							]
						},
						"description": "Get connection sites will return the site details corresponding to connection endpoints."
					},
					"response": []
				},
				{
					"name": "Get Appliance Connection Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/connections/appliances/:id?is_paginated=true&page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"connections",
								"appliances",
								":id"
							],
							"query": [
								{
									"key": "initiator_appliance_id",
									"value": "5420248827680",
									"description": "The initiator appliance ID.",
									"disabled": true
								},
								{
									"key": "responder_appliance_id",
									"value": "5420248827681",
									"description": "The responder appliance ID.",
									"disabled": true
								},
								{
									"key": "initiator_site_id",
									"value": "5420248827680",
									"description": "The initiator site ID.",
									"disabled": true
								},
								{
									"key": "responder_site_id",
									"value": "5420248827681",
									"description": "The responder site ID.",
									"disabled": true
								},
								{
									"key": "initiator_interface",
									"value": "wan1",
									"description": "The initiator interface.",
									"disabled": true
								},
								{
									"key": "responder_interface",
									"value": "wan2",
									"description": "The responder interface.",
									"disabled": true
								},
								{
									"key": "overlay_id",
									"value": "20",
									"description": "The overlay ID.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "all",
									"description": "The connection status.\nAvailable values : up, down, all",
									"disabled": true
								},
								{
									"key": "type",
									"value": "gre_user",
									"description": "The connection type.\nAvailable values : vti, gre, gre_user, zsc, csec, sdi, aws, azure, all",
									"disabled": true
								},
								{
									"key": "is_paginated",
									"value": "true",
									"description": "The boolean flag for pagination. Default value will be false, which means no pagination."
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page field for the pagination.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "The size field for the pagination.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "keyword",
									"value": "string",
									"description": "The keyword search uses case-insensitive search across fields having string values.",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "connection,asc",
									"description": "Sorting can applied on specified column, followed by the sorting direction (ie asc or desc) with the comma separation.",
									"disabled": true
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "<long>",
									"description": "(Required) ID of the Appliance"
								}
							]
						},
						"description": "Get connection appliance details API will return all connections with the provided appliance ID as either the initiator or the responder."
					},
					"response": []
				},
				{
					"name": "Get Underlay Connection",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/connections/underlays?is_paginated=true&page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"connections",
								"underlays"
							],
							"query": [
								{
									"key": "appliance_id",
									"value": "{{appliance_id}}",
									"description": "Appliance ID.",
									"disabled": true
								},
								{
									"key": "site_id",
									"value": "{{site_id}}",
									"description": "Site ID.",
									"disabled": true
								},
								{
									"key": "interface_name",
									"value": "wan3",
									"description": "Interface name.",
									"disabled": true
								},
								{
									"key": "wan_service_id",
									"value": "{{wan_service_id}}",
									"description": "WAN service ID.",
									"disabled": true
								},
								{
									"key": "status",
									"value": "up",
									"description": "Underlay connection status\nAvailable values : up, down, unknown",
									"disabled": true
								},
								{
									"key": "type",
									"value": "l2",
									"description": "Underlay connection type\nAvailable values : l2, l3",
									"disabled": true
								},
								{
									"key": "keyword",
									"value": "string",
									"description": "The keyword search uses case-insensitive search across all fields having string values except 'type' & 'status'.",
									"disabled": true
								},
								{
									"key": "is_paginated",
									"value": "true",
									"description": "This indicates whether paginated response is required. Default value is true. When it is set to false then, the page and size parameter is ignored."
								},
								{
									"key": "page",
									"value": "1",
									"description": "Page field for the pagination.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "Size field for the pagination.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "site_id,asc",
									"description": "Above example is sorting on Site ID in asc order. Sorting can applied on specified column. Specified column can be site_id, site_name, appliance_id, appliance_name, interface_name, wan_service_id, wan_service_name, lan_to_wan_throughput, wan_to_lan_throughput, type, status. Specified column followed by the sorting direction (ie asc or desc) with the comma separation.",
									"disabled": true
								}
							]
						},
						"description": "Get underlay connection returns underlay connectivity of WAN."
					},
					"response": []
				}
			]
		},
		{
			"name": "Alarms",
			"item": [
				{
					"name": "Get alarms with their configuration status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/alarms/v1/alarms?page=1&size=20&state=cleared",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alarms",
								"v1",
								"alarms"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "next page number for navigation for Sites Overview UI page used for pagination.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "current page size for Sites Overview UI page used for pagination.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "state",
									"value": "cleared",
									"description": "(Required) The parameter is used to specify the state to be active. If no value is provided or an invalid value is provided then error message will be thrown."
								},
								{
									"key": "sort",
									"value": "raised_date_time",
									"description": "The sort field. Sorting can applied on specfied column. Sorting can be applied only on one column at a time. Specified column followed by the sorting direction (ie asc or desc)  with the comma separation. Allowed columns are site, utillization, capacity, throughput, eqs, application_group_eqs. For site, utillization, capacity, throughput, eqs we need to specify sorting parameters like column_name,direction, for example site,asc. For sorting on application group eqs it has to be application_group_{id},asc.",
									"disabled": true
								},
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed.",
									"disabled": true
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed.",
									"disabled": true
								}
							]
						},
						"description": "Returns manageable SD-WAN alarms."
					},
					"response": []
				},
				{
					"name": "Get active alarms count per severity",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/alarms/v1/alarms/active-counts?by=severity",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alarms",
								"v1",
								"alarms",
								"active-counts"
							],
							"query": [
								{
									"key": "by",
									"value": "severity",
									"description": "(Required) column on which the count of alarms has to be grouped by (as of now supported only for severity column)."
								},
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "start_time is epoch time in seconds.<br>It represents the start of the time range (start_time - end_time) in which the alarm was raised (inclusive). Both start_time and end_time parameters should be provided together.",
									"disabled": true
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "end_time is epoch time in seconds.<br>It represents the end of the time range (start_time - end_time) in which the alarm was raised (exclusive). Both start_time and end_time parameters should be provided together.",
									"disabled": true
								}
							]
						},
						"description": "This REST-API can be used to fetch the count of currently active alarms grouped by a specific column.<br>(as of now supported only for severity column) ."
					},
					"response": []
				},
				{
					"name": "Get alarm notification rules",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/alarms/v1/alarms/notification-rules?page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alarms",
								"v1",
								"alarms",
								"notification-rules"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "next page number for navigation for alarms notifications page used for pagination.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "current page size for alarms notifications page used for pagination.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "name,asc",
									"description": "column on which the sort is required and the sort order (ASC, DESC).<br>Sorting can be applied on only name column.",
									"disabled": true
								}
							]
						},
						"description": "This api provides a list of alarm notification rules."
					},
					"response": []
				},
				{
					"name": "Create alarm notification rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"name\": \"Notification Rule 1\",\n      \"category\": \"underlay\",      \"severity\": \"critical\",      \"recipient\": \"admin@extremenetworks.com\",      \"status\": \"active\",      \"sites\": [      {\n      \"id\": {{site_id}}\n    }\n       ]\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "api.extremecloudiq.com/alarms/v1/alarms/notification-rules",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alarms",
								"v1",
								"alarms",
								"notification-rules"
							]
						},
						"description": "This api allows user to create an alarm notification rule."
					},
					"response": []
				},
				{
					"name": "Update alarm notification rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"name\": \"Notification Rule 1\",\n    \"category\": \"underlay\",\n    \"severity\": \"critical\",\n    \"recipient\": \"admin@extremenetworks.com\",\n    \"status\": \"active\",\n    \"sites\": [\n      {\n        \"id\": \"{{site_id}}\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "api.extremecloudiq.com/alarms/v1/alarms/notification-rules/:id",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alarms",
								"v1",
								"alarms",
								"notification-rules",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This api allows user to update an alarm notification rule."
					},
					"response": []
				},
				{
					"name": "Delete alarm notification rule",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/alarms/v1/alarms/notification-rules/:id",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alarms",
								"v1",
								"alarms",
								"notification-rules",
								":id"
							],
							"variable": [
								{
									"key": "id"
								}
							]
						},
						"description": "This api allows user to delete an alarm notification rule."
					},
					"response": []
				},
				{
					"name": "Sites Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/alarms/v1/alarms/sites?is_paginated=true&page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"alarms",
								"v1",
								"alarms",
								"sites"
							],
							"query": [
								{
									"key": "id",
									"value": "{{site_id}}",
									"description": "Site id. Multiple values are allowed with comma (,) separation",
									"disabled": true
								},
								{
									"key": "is_paginated",
									"value": "true",
									"description": "This indicates whether paginated response is required or not. The default value is true. When it is set to false then, the page and size parameter is ignored."
								},
								{
									"key": "page",
									"value": "1",
									"description": "Next page number for navigation for alarms notifications page used for pagination.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "Current page size for alarms notifications page used for pagination.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "name,asc",
									"description": "Column on which the sort is required and the sort order (ASC, DESC).<br>Sorting can be applied on only name and id column.",
									"disabled": true
								}
							]
						},
						"description": "This API provides a list of sites with number of active alarms per severity."
					},
					"response": []
				}
			]
		},
		{
			"name": "Troubleshooting",
			"item": [
				{
					"name": "Start Appliance troubleshooting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"appliance\": {\n        \"serial_number\": \"AX56RGYTF\",\n        \"name\": \"Knight Howk\"\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "api.extremecloudiq.com/tools/v1/troubleshooting/start",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"troubleshooting",
								"start"
							]
						},
						"description": "Start Appliance troubleshooting."
					},
					"response": []
				},
				{
					"name": "Appliance troubleshooting stats",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/tools/v1/troubleshooting/stats?request_id=ffa463ca-0722-4ec0-957b-d7ff47f95ed5&serial_number=20K62208I-D0002",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"troubleshooting",
								"stats"
							],
							"query": [
								{
									"key": "request_id",
									"value": "ffa463ca-0722-4ec0-957b-d7ff47f95ed5",
									"description": "(Required) This id is unique id for a request to fetch troubleshooting data for an appliance."
								},
								{
									"key": "serial_number",
									"value": "20K62208I-D0002",
									"description": "(Required) Serial number is unique identity for an appliance."
								}
							]
						},
						"description": "Get Appliance troubleshooting stats."
					},
					"response": []
				},
				{
					"name": "Appliance troubleshooting graph",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/tools/v1/troubleshooting/graph?request_id=ffa463ca-0722-4ec0-957b-d7ff47f95ed5&serial_number=20K62208I-D0002",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"troubleshooting",
								"graph"
							],
							"query": [
								{
									"key": "request_id",
									"value": "ffa463ca-0722-4ec0-957b-d7ff47f95ed5",
									"description": "(Required) This id is unique id for a request to fetch troubleshooting data for an appliance."
								},
								{
									"key": "serial_number",
									"value": "20K62208I-D0002",
									"description": "(Required) Serial number is unique identity for an appliance."
								}
							]
						},
						"description": "Get Appliance troubleshooting graph."
					},
					"response": []
				},
				{
					"name": "Stop Appliance troubleshooting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"appliance\": {\n        \"serial_number\": \"AX56RGYTF\",\n        \"name\": \"Knight Howk\"\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "api.extremecloudiq.com/tools/v1/troubleshooting/stop/{{troubleshooting_request_id}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"troubleshooting",
								"stop",
								"{{troubleshooting_request_id}}"
							]
						},
						"description": "Stop Appliance troubleshooting."
					},
					"response": []
				}
			]
		},
		{
			"name": "Scripts",
			"item": [
				{
					"name": "Get scripts catalog",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/tools/v1/scripts/catalog?page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"scripts",
								"catalog"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "The page field for the pagination, by default value is set to 0"
								},
								{
									"key": "size",
									"value": "20",
									"description": "The size field for the pagination , default size is 20."
								}
							]
						},
						"description": "Get list of available scripts."
					},
					"response": []
				},
				{
					"name": "Run a script",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"appliance\": {\n        \"serial_number\": \"20K62208I-D0002\",\n        \"name\": \"Knight Howk\",\n        \"management_ip\": \"10.16.255.5\"\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "api.extremecloudiq.com/tools/v1/scripts/execute/{{script_name}}",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"scripts",
								"execute",
								"{{script_name}}"
							]
						},
						"description": "API to run a script."
					},
					"response": []
				},
				{
					"name": "Get script status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/tools/v1/scripts/status?page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"scripts",
								"status"
							],
							"query": [
								{
									"key": "request_id",
									"value": "ffa463ca-0722-4ec0-957b-d7ff47f95ed5",
									"description": "This id is unique id for any request for execute script command sent by the user.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page field for the pagination, by default value is set to 0"
								},
								{
									"key": "size",
									"value": "20",
									"description": "The size field for the pagination. Default size is 20."
								}
							]
						},
						"description": "Returns the result from appliance."
					},
					"response": []
				},
				{
					"name": "Get script result(s)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/tools/v1/scripts/result?page=1&size=20",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"scripts",
								"result"
							],
							"query": [
								{
									"key": "request_id",
									"value": "ffa463ca-0722-4ec0-957b-d7ff47f95ed5",
									"description": "This id is unique id for any request for execute script command sent by the user.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "The page field for the pagination, by default value is set to 0"
								},
								{
									"key": "size",
									"value": "20",
									"description": "The size field for the pagination. Default size is 20."
								},
								{
									"key": "sort",
									"value": "script_name,DESC",
									"description": "contains combination of sorting key and ASC or DESC orders. As of now supporting only two columns script_name & created_at.",
									"disabled": true
								}
							]
						},
						"description": "Get script responses received from appliance."
					},
					"response": []
				},
				{
					"name": "Delete result(s)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": [\n    {\n      \"request_id\": \"ffa463ca-0722-4ec0-957b-d7ff47f95ed5\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "api.extremecloudiq.com/tools/v1/scripts/result/delete",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"scripts",
								"result",
								"delete"
							]
						},
						"description": "Delete Appliance result."
					},
					"response": []
				},
				{
					"name": "Download script result",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/octet-stream"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/tools/v1/scripts/result/download?file_path=%2Fapp%2Fdata%2Fresult%2F1319_0%2F0a070fdb-28b0-4474-8740-957f994331c4%2Fscript_result_221102_085114.zip",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"tools",
								"v1",
								"scripts",
								"result",
								"download"
							],
							"query": [
								{
									"key": "file_path",
									"value": "%2Fapp%2Fdata%2Fresult%2F1319_0%2F0a070fdb-28b0-4474-8740-957f994331c4%2Fscript_result_221102_085114.zip",
									"description": "(Required) This is the location of the Result file."
								}
							]
						},
						"description": "Download script results received from appliance."
					},
					"response": []
				}
			]
		},
		{
			"name": "Dashboard Domain Analysis",
			"item": [
				{
					"name": "Get network analysis metrics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/network-analysis/metrics?start_time={{myStartTime}}&end_time={{myEndTime}}&flow_direction=lan_to_wan&page=1&size=20&sort=site_name,asc",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"network-analysis",
								"metrics"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "(Required) The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan. If no value is provided or an invalid value is provided then error message will be thrown."
								},
								{
									"key": "site_id",
									"value": "{{site_id}}",
									"description": "The parameter is used to filter the traffic data based on site_id(src_site_id/dst_site_id). Multiple comma separated values are allowed.",
									"disabled": true
								},
								{
									"key": "appliance_id",
									"value": "{{appliance_id}}",
									"description": "The parameter is used to filter the traffic data based on appliance_id(src_appliance_id/dst_appliance_id). Multiple comma separated values are allowed.",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "next page number for navigation for Network Analysis Metrics grid-view. Used for pagination.<br>Default value is 1 (used if set value is not an integer > 0)."
								},
								{
									"key": "size",
									"value": "20",
									"description": "current page size for Network Analysis Metrics grid-view. Used for pagination.<br>Default value is 20 (used if set value is not an integer > 0)."
								},
								{
									"key": "sort",
									"value": "site_name,asc",
									"description": "The sort field. Sorting can be applied on specfied column. Sorting can be applied only on one column at a time. Specified column followed by the sorting direction (ie asc or desc)  with the comma separation. Allowed columns are site_name, appliance_name, traffic_with_appliances, traffic_with_rvc, not_correlated, transit_traffic, out_of_domain, locally_rerouted, other."
								}
							]
						},
						"description": "Get network analysis metrics will return traffic metrics related to all the sites and appliances."
					},
					"response": []
				},
				{
					"name": "Get network analysis summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/network-analysis/summary?start_time={{myStartTime}}&end_time={{myEndTime}}&flow_direction=lan_to_wan",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"network-analysis",
								"summary"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "(Required) The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan. If no value is provided or an invalid value is provided then error message will be thrown."
								}
							]
						},
						"description": "Get network analysis summary will return traffic summary related to all the sites and appliances."
					},
					"response": []
				},
				{
					"name": "Get network analysis filters",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/network-analysis/filters",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"network-analysis",
								"filters"
							]
						},
						"description": "Get network analysis filters to populate the filter panel to filter out specific sites and appliances."
					},
					"response": []
				},
				{
					"name": "Get ethernet throughput metrics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/network-analysis/ethernet-throughput?start_time={{myStartTime}}&end_time={{myEndTime}}&flow_direction=lan_to_wan",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"network-analysis",
								"ethernet-throughput"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "(Required) The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan. If no value is provided or an invalid value is provided then error message will be thrown."
								},
								{
									"key": "site_id",
									"value": "{{site_id}}",
									"description": "The parameter is used to filter the traffic data based on site_id. Multiple comma separated values are allowed.",
									"disabled": true
								},
								{
									"key": "appliance_id",
									"value": "{{appliance_id}}",
									"description": "The parameter is used to filter the traffic data based on appliance_id. Multiple comma separated values are allowed.",
									"disabled": true
								}
							]
						},
						"description": "Get ethernet throughput metrics will return ethernet throughput metrics aggregated on all the sites and appliances."
					},
					"response": []
				},
				{
					"name": "Get IP throughput metrics",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful GET request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									"",
									" pm.test(\"Response time is less than 1000ms\", function () {",
									"        pm.expect(pm.response.responseTime).to.be.below(1000);",
									"    });"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var startTime = new Date(\"April 19, 2025 02:30:00\"); // Your timezone!",
									"var endTime = new Date(\"April 19, 2025 04:30:00\"); // Your timezone!",
									"",
									"//Set in Environment",
									"pm.environment.set(\"myStartTime\", startTime.getTime()); // myStartTime is used in Params of call - This is EPOCH time in milliseconds",
									"pm.environment.set(\"myEndTime\", endTime.getTime()); // myEndTime is used in Params of call - This is EPOCH time in milliseconds"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "api.extremecloudiq.com/monitoring/v1/network-analysis/ip-throughput?start_time={{myStartTime}}&end_time={{myEndTime}}&flow_direction=lan_to_wan",
							"host": [
								"api",
								"extremecloudiq",
								"com"
							],
							"path": [
								"monitoring",
								"v1",
								"network-analysis",
								"ip-throughput"
							],
							"query": [
								{
									"key": "start_time",
									"value": "{{myStartTime}}",
									"description": "(Required) start_time is epoch time in seconds. It represents the start of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "end_time",
									"value": "{{myEndTime}}",
									"description": "(Required) end_time is epoch time in seconds. It represents the end of the time range (start_time - end_time) for which the metrics data for sites will be fetched. Only a single value is allowed."
								},
								{
									"key": "flow_direction",
									"value": "lan_to_wan",
									"description": "(Required) The parameter is used to specify the direction of flow data the user wants to view lan_to_wan or wan_to_lan. Allowed values are lan_to_wan and wan_to_lan. If no value is provided or an invalid value is provided then error message will be thrown."
								},
								{
									"key": "site_id",
									"value": "{{site_id}}",
									"description": "The parameter is used to filter the traffic data based on site_id. Multiple comma separated values are allowed.",
									"disabled": true
								},
								{
									"key": "appliance_id",
									"value": "{{appliance_id}}",
									"description": "The parameter is used to filter the traffic data based on appliance_id. Multiple comma separated values are allowed.",
									"disabled": true
								}
							]
						},
						"description": "Get IP throughput metrics will return IP throughput metrics aggregated on all the sites and appliances."
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "authService",
			"value": "https://api.extremecloudiq.com/login"
		},
		{
			"key": "gatewayBaseUrl",
			"value": "https://api.extremecloudiq.com"
		},
		{
			"key": "jwttoken",
			"value": ""
		},
		{
			"key": "manage",
			"value": ":manage"
		},
		{
			"key": "check",
			"value": ":check"
		},
		{
			"key": "deploy",
			"value": ":deploy"
		},
		{
			"key": "cli",
			"value": ":cli"
		},
		{
			"key": "reboot",
			"value": ":reboot"
		},
		{
			"key": "unmanage",
			"value": ":unmanage"
		},
		{
			"key": "rename",
			"value": ":rename"
		}
	]
}